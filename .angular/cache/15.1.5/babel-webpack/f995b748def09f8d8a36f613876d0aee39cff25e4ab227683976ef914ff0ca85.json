{"ast":null,"code":"/**\n* Tom Select v2.2.2\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n*/\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.TomSelect = factory());\n})(this, function () {\n  'use strict';\n\n  /**\n   * MicroEvent - to make any js object an event emitter\n   *\n   * - pure javascript - server compatible, browser compatible\n   * - dont rely on the browser doms\n   * - super simple - you get it immediatly, no mistery, no magic involved\n   *\n   * @author Jerome Etienne (https://github.com/jeromeetienne)\n   */\n\n  /**\n   * Execute callback for each event in space separated list of event names\n   *\n   */\n  function forEvents(events, callback) {\n    events.split(/\\s+/).forEach(event => {\n      callback(event);\n    });\n  }\n  class MicroEvent {\n    constructor() {\n      this._events = void 0;\n      this._events = {};\n    }\n    on(events, fct) {\n      forEvents(events, event => {\n        const event_array = this._events[event] || [];\n        event_array.push(fct);\n        this._events[event] = event_array;\n      });\n    }\n    off(events, fct) {\n      var n = arguments.length;\n      if (n === 0) {\n        this._events = {};\n        return;\n      }\n      forEvents(events, event => {\n        if (n === 1) {\n          delete this._events[event];\n          return;\n        }\n        const event_array = this._events[event];\n        if (event_array === undefined) return;\n        event_array.splice(event_array.indexOf(fct), 1);\n        this._events[event] = event_array;\n      });\n    }\n    trigger(events, ...args) {\n      var self = this;\n      forEvents(events, event => {\n        const event_array = self._events[event];\n        if (event_array === undefined) return;\n        event_array.forEach(fct => {\n          fct.apply(self, args);\n        });\n      });\n    }\n  }\n\n  /**\n   * microplugin.js\n   * Copyright (c) 2013 Brian Reavis & contributors\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n   * file except in compliance with the License. You may obtain a copy of the License at:\n   * http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software distributed under\n   * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n   * ANY KIND, either express or implied. See the License for the specific language\n   * governing permissions and limitations under the License.\n   *\n   * @author Brian Reavis <brian@thirdroute.com>\n   */\n  function MicroPlugin(Interface) {\n    Interface.plugins = {};\n    return class extends Interface {\n      constructor(...args) {\n        super(...args);\n        this.plugins = {\n          names: [],\n          settings: {},\n          requested: {},\n          loaded: {}\n        };\n      }\n\n      /**\n       * Registers a plugin.\n       *\n       * @param {function} fn\n       */\n      static define(name, fn) {\n        Interface.plugins[name] = {\n          'name': name,\n          'fn': fn\n        };\n      }\n      /**\n       * Initializes the listed plugins (with options).\n       * Acceptable formats:\n       *\n       * List (without options):\n       *   ['a', 'b', 'c']\n       *\n       * List (with options):\n       *   [{'name': 'a', options: {}}, {'name': 'b', options: {}}]\n       *\n       * Hash (with options):\n       *   {'a': { ... }, 'b': { ... }, 'c': { ... }}\n       *\n       * @param {array|object} plugins\n       */\n\n      initializePlugins(plugins) {\n        var key, name;\n        const self = this;\n        const queue = [];\n        if (Array.isArray(plugins)) {\n          plugins.forEach(plugin => {\n            if (typeof plugin === 'string') {\n              queue.push(plugin);\n            } else {\n              self.plugins.settings[plugin.name] = plugin.options;\n              queue.push(plugin.name);\n            }\n          });\n        } else if (plugins) {\n          for (key in plugins) {\n            if (plugins.hasOwnProperty(key)) {\n              self.plugins.settings[key] = plugins[key];\n              queue.push(key);\n            }\n          }\n        }\n        while (name = queue.shift()) {\n          self.require(name);\n        }\n      }\n      loadPlugin(name) {\n        var self = this;\n        var plugins = self.plugins;\n        var plugin = Interface.plugins[name];\n        if (!Interface.plugins.hasOwnProperty(name)) {\n          throw new Error('Unable to find \"' + name + '\" plugin');\n        }\n        plugins.requested[name] = true;\n        plugins.loaded[name] = plugin.fn.apply(self, [self.plugins.settings[name] || {}]);\n        plugins.names.push(name);\n      }\n      /**\n       * Initializes a plugin.\n       *\n       */\n\n      require(name) {\n        var self = this;\n        var plugins = self.plugins;\n        if (!self.plugins.loaded.hasOwnProperty(name)) {\n          if (plugins.requested[name]) {\n            throw new Error('Plugin has circular dependency (\"' + name + '\")');\n          }\n          self.loadPlugin(name);\n        }\n        return plugins.loaded[name];\n      }\n    };\n  }\n\n  /*! @orchidjs/unicode-variants | https://github.com/orchidjs/unicode-variants | Apache License (v2) */\n  /**\n   * Convert array of strings to a regular expression\n   *\tex ['ab','a'] => (?:ab|a)\n   * \tex ['a','b'] => [ab]\n   * @param {string[]} chars\n   * @return {string}\n   */\n  const arrayToPattern = chars => {\n    chars = chars.filter(Boolean);\n    if (chars.length < 2) {\n      return chars[0] || '';\n    }\n    return maxValueLength(chars) == 1 ? '[' + chars.join('') + ']' : '(?:' + chars.join('|') + ')';\n  };\n  /**\n   * @param {string[]} array\n   * @return {string}\n   */\n\n  const sequencePattern = array => {\n    if (!hasDuplicates(array)) {\n      return array.join('');\n    }\n    let pattern = '';\n    let prev_char_count = 0;\n    const prev_pattern = () => {\n      if (prev_char_count > 1) {\n        pattern += '{' + prev_char_count + '}';\n      }\n    };\n    array.forEach((char, i) => {\n      if (char === array[i - 1]) {\n        prev_char_count++;\n        return;\n      }\n      prev_pattern();\n      pattern += char;\n      prev_char_count = 1;\n    });\n    prev_pattern();\n    return pattern;\n  };\n  /**\n   * Convert array of strings to a regular expression\n   *\tex ['ab','a'] => (?:ab|a)\n   * \tex ['a','b'] => [ab]\n   * @param {Set<string>} chars\n   * @return {string}\n   */\n\n  const setToPattern = chars => {\n    let array = toArray(chars);\n    return arrayToPattern(array);\n  };\n  /**\n   *\n   * https://stackoverflow.com/questions/7376598/in-javascript-how-do-i-check-if-an-array-has-duplicate-values\n   * @param {any[]} array\n   */\n\n  const hasDuplicates = array => {\n    return new Set(array).size !== array.length;\n  };\n  /**\n   * https://stackoverflow.com/questions/63006601/why-does-u-throw-an-invalid-escape-error\n   * @param {string} str\n   * @return {string}\n   */\n\n  const escape_regex = str => {\n    return (str + '').replace(/([\\$\\(\\)\\*\\+\\.\\?\\[\\]\\^\\{\\|\\}\\\\])/gu, '\\\\$1');\n  };\n  /**\n   * Return the max length of array values\n   * @param {string[]} array\n   *\n   */\n\n  const maxValueLength = array => {\n    return array.reduce((longest, value) => Math.max(longest, unicodeLength(value)), 0);\n  };\n  /**\n   * @param {string} str\n   */\n\n  const unicodeLength = str => {\n    return toArray(str).length;\n  };\n  /**\n   * @param {any} p\n   * @return {any[]}\n   */\n\n  const toArray = p => Array.from(p);\n\n  /*! @orchidjs/unicode-variants | https://github.com/orchidjs/unicode-variants | Apache License (v2) */\n  /**\n   * Get all possible combinations of substrings that add up to the given string\n   * https://stackoverflow.com/questions/30169587/find-all-the-combination-of-substrings-that-add-up-to-the-given-string\n   * @param {string} input\n   * @return {string[][]}\n   */\n  const allSubstrings = input => {\n    if (input.length === 1) return [[input]];\n    /** @type {string[][]} */\n\n    let result = [];\n    const start = input.substring(1);\n    const suba = allSubstrings(start);\n    suba.forEach(function (subresult) {\n      let tmp = subresult.slice(0);\n      tmp[0] = input.charAt(0) + tmp[0];\n      result.push(tmp);\n      tmp = subresult.slice(0);\n      tmp.unshift(input.charAt(0));\n      result.push(tmp);\n    });\n    return result;\n  };\n\n  /*! @orchidjs/unicode-variants | https://github.com/orchidjs/unicode-variants | Apache License (v2) */\n\n  /**\n   * @typedef {{[key:string]:string}} TUnicodeMap\n   * @typedef {{[key:string]:Set<string>}} TUnicodeSets\n   * @typedef {[[number,number]]} TCodePoints\n   * @typedef {{folded:string,composed:string,code_point:number}} TCodePointObj\n   * @typedef {{start:number,end:number,length:number,substr:string}} TSequencePart\n   */\n  /** @type {TCodePoints} */\n\n  const code_points = [[0, 65535]];\n  const accent_pat = '[\\u0300-\\u036F\\u{b7}\\u{2be}\\u{2bc}]';\n  /** @type {TUnicodeMap} */\n\n  let unicode_map;\n  /** @type {RegExp} */\n\n  let multi_char_reg;\n  const max_char_length = 3;\n  /** @type {TUnicodeMap} */\n\n  const latin_convert = {};\n  /** @type {TUnicodeMap} */\n\n  const latin_condensed = {\n    '/': '⁄∕',\n    '0': '߀',\n    \"a\": \"ⱥɐɑ\",\n    \"aa\": \"ꜳ\",\n    \"ae\": \"æǽǣ\",\n    \"ao\": \"ꜵ\",\n    \"au\": \"ꜷ\",\n    \"av\": \"ꜹꜻ\",\n    \"ay\": \"ꜽ\",\n    \"b\": \"ƀɓƃ\",\n    \"c\": \"ꜿƈȼↄ\",\n    \"d\": \"đɗɖᴅƌꮷԁɦ\",\n    \"e\": \"ɛǝᴇɇ\",\n    \"f\": \"ꝼƒ\",\n    \"g\": \"ǥɠꞡᵹꝿɢ\",\n    \"h\": \"ħⱨⱶɥ\",\n    \"i\": \"ɨı\",\n    \"j\": \"ɉȷ\",\n    \"k\": \"ƙⱪꝁꝃꝅꞣ\",\n    \"l\": \"łƚɫⱡꝉꝇꞁɭ\",\n    \"m\": \"ɱɯϻ\",\n    \"n\": \"ꞥƞɲꞑᴎлԉ\",\n    \"o\": \"øǿɔɵꝋꝍᴑ\",\n    \"oe\": \"œ\",\n    \"oi\": \"ƣ\",\n    \"oo\": \"ꝏ\",\n    \"ou\": \"ȣ\",\n    \"p\": \"ƥᵽꝑꝓꝕρ\",\n    \"q\": \"ꝗꝙɋ\",\n    \"r\": \"ɍɽꝛꞧꞃ\",\n    \"s\": \"ßȿꞩꞅʂ\",\n    \"t\": \"ŧƭʈⱦꞇ\",\n    \"th\": \"þ\",\n    \"tz\": \"ꜩ\",\n    \"u\": \"ʉ\",\n    \"v\": \"ʋꝟʌ\",\n    \"vy\": \"ꝡ\",\n    \"w\": \"ⱳ\",\n    \"y\": \"ƴɏỿ\",\n    \"z\": \"ƶȥɀⱬꝣ\",\n    \"hv\": \"ƕ\"\n  };\n  for (let latin in latin_condensed) {\n    let unicode = latin_condensed[latin] || '';\n    for (let i = 0; i < unicode.length; i++) {\n      let char = unicode.substring(i, i + 1);\n      latin_convert[char] = latin;\n    }\n  }\n  const convert_pat = new RegExp(Object.keys(latin_convert).join('|') + '|' + accent_pat, 'gu');\n  /**\n   * Initialize the unicode_map from the give code point ranges\n   *\n   * @param {TCodePoints=} _code_points\n   */\n\n  const initialize = _code_points => {\n    if (unicode_map !== undefined) return;\n    unicode_map = generateMap(_code_points || code_points);\n  };\n  /**\n   * Helper method for normalize a string\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize\n   * @param {string} str\n   * @param {string} form\n   */\n\n  const normalize = (str, form = 'NFKD') => str.normalize(form);\n  /**\n   * Remove accents without reordering string\n   * calling str.normalize('NFKD') on \\u{594}\\u{595}\\u{596} becomes \\u{596}\\u{594}\\u{595}\n   * via https://github.com/krisk/Fuse/issues/133#issuecomment-318692703\n   * @param {string} str\n   * @return {string}\n   */\n\n  const asciifold = str => {\n    return toArray(str).reduce(\n    /**\n     * @param {string} result\n     * @param {string} char\n     */\n    (result, char) => {\n      return result + _asciifold(char);\n    }, '');\n  };\n  /**\n   * @param {string} str\n   * @return {string}\n   */\n\n  const _asciifold = str => {\n    str = normalize(str).toLowerCase().replace(convert_pat, ( /** @type {string} */\n    char) => {\n      return latin_convert[char] || '';\n    }); //return str;\n\n    return normalize(str, 'NFC');\n  };\n  /**\n   * Generate a list of unicode variants from the list of code points\n   * @param {TCodePoints} code_points\n   * @yield {TCodePointObj}\n   */\n\n  function* generator(code_points) {\n    for (const [code_point_min, code_point_max] of code_points) {\n      for (let i = code_point_min; i <= code_point_max; i++) {\n        let composed = String.fromCharCode(i);\n        let folded = asciifold(composed);\n        if (folded == composed.toLowerCase()) {\n          continue;\n        } // skip when folded is a string longer than 3 characters long\n        // bc the resulting regex patterns will be long\n        // eg:\n        // folded صلى الله عليه وسلم length 18 code point 65018\n        // folded جل جلاله length 8 code point 65019\n\n        if (folded.length > max_char_length) {\n          continue;\n        }\n        if (folded.length == 0) {\n          continue;\n        }\n        yield {\n          folded: folded,\n          composed: composed,\n          code_point: i\n        };\n      }\n    }\n  }\n  /**\n   * Generate a unicode map from the list of code points\n   * @param {TCodePoints} code_points\n   * @return {TUnicodeSets}\n   */\n\n  const generateSets = code_points => {\n    /** @type {{[key:string]:Set<string>}} */\n    const unicode_sets = {};\n    /**\n     * @param {string} folded\n     * @param {string} to_add\n     */\n\n    const addMatching = (folded, to_add) => {\n      /** @type {Set<string>} */\n      const folded_set = unicode_sets[folded] || new Set();\n      const patt = new RegExp('^' + setToPattern(folded_set) + '$', 'iu');\n      if (to_add.match(patt)) {\n        return;\n      }\n      folded_set.add(escape_regex(to_add));\n      unicode_sets[folded] = folded_set;\n    };\n    for (let value of generator(code_points)) {\n      addMatching(value.folded, value.folded);\n      addMatching(value.folded, value.composed);\n    }\n    return unicode_sets;\n  };\n  /**\n   * Generate a unicode map from the list of code points\n   * ae => (?:(?:ae|Æ|Ǽ|Ǣ)|(?:A|Ⓐ|Ａ...)(?:E|ɛ|Ⓔ...))\n   *\n   * @param {TCodePoints} code_points\n   * @return {TUnicodeMap}\n   */\n\n  const generateMap = code_points => {\n    /** @type {TUnicodeSets} */\n    const unicode_sets = generateSets(code_points);\n    /** @type {TUnicodeMap} */\n\n    const unicode_map = {};\n    /** @type {string[]} */\n\n    let multi_char = [];\n    for (let folded in unicode_sets) {\n      let set = unicode_sets[folded];\n      if (set) {\n        unicode_map[folded] = setToPattern(set);\n      }\n      if (folded.length > 1) {\n        multi_char.push(escape_regex(folded));\n      }\n    }\n    multi_char.sort((a, b) => b.length - a.length);\n    const multi_char_patt = arrayToPattern(multi_char);\n    multi_char_reg = new RegExp('^' + multi_char_patt, 'u');\n    return unicode_map;\n  };\n  /**\n   * Map each element of an array from it's folded value to all possible unicode matches\n   * @param {string[]} strings\n   * @param {number} min_replacement\n   * @return {string}\n   */\n\n  const mapSequence = (strings, min_replacement = 1) => {\n    let chars_replaced = 0;\n    strings = strings.map(str => {\n      if (unicode_map[str]) {\n        chars_replaced += str.length;\n      }\n      return unicode_map[str] || str;\n    });\n    if (chars_replaced >= min_replacement) {\n      return sequencePattern(strings);\n    }\n    return '';\n  };\n  /**\n   * Convert a short string and split it into all possible patterns\n   * Keep a pattern only if min_replacement is met\n   *\n   * 'abc'\n   * \t\t=> [['abc'],['ab','c'],['a','bc'],['a','b','c']]\n   *\t\t=> ['abc-pattern','ab-c-pattern'...]\n   *\n   *\n   * @param {string} str\n   * @param {number} min_replacement\n   * @return {string}\n   */\n\n  const substringsToPattern = (str, min_replacement = 1) => {\n    min_replacement = Math.max(min_replacement, str.length - 1);\n    return arrayToPattern(allSubstrings(str).map(sub_pat => {\n      return mapSequence(sub_pat, min_replacement);\n    }));\n  };\n  /**\n   * Convert an array of sequences into a pattern\n   * [{start:0,end:3,length:3,substr:'iii'}...] => (?:iii...)\n   *\n   * @param {Sequence[]} sequences\n   * @param {boolean} all\n   */\n\n  const sequencesToPattern = (sequences, all = true) => {\n    let min_replacement = sequences.length > 1 ? 1 : 0;\n    return arrayToPattern(sequences.map(sequence => {\n      let seq = [];\n      const len = all ? sequence.length() : sequence.length() - 1;\n      for (let j = 0; j < len; j++) {\n        seq.push(substringsToPattern(sequence.substrs[j] || '', min_replacement));\n      }\n      return sequencePattern(seq);\n    }));\n  };\n  /**\n   * Return true if the sequence is already in the sequences\n   * @param {Sequence} needle_seq\n   * @param {Sequence[]} sequences\n   */\n\n  const inSequences = (needle_seq, sequences) => {\n    for (const seq of sequences) {\n      if (seq.start != needle_seq.start || seq.end != needle_seq.end) {\n        continue;\n      }\n      if (seq.substrs.join('') !== needle_seq.substrs.join('')) {\n        continue;\n      }\n      let needle_parts = needle_seq.parts;\n      /**\n       * @param {TSequencePart} part\n       */\n\n      const filter = part => {\n        for (const needle_part of needle_parts) {\n          if (needle_part.start === part.start && needle_part.substr === part.substr) {\n            return false;\n          }\n          if (part.length == 1 || needle_part.length == 1) {\n            continue;\n          } // check for overlapping parts\n          // a = ['::=','==']\n          // b = ['::','===']\n          // a = ['r','sm']\n          // b = ['rs','m']\n\n          if (part.start < needle_part.start && part.end > needle_part.start) {\n            return true;\n          }\n          if (needle_part.start < part.start && needle_part.end > part.start) {\n            return true;\n          }\n        }\n        return false;\n      };\n      let filtered = seq.parts.filter(filter);\n      if (filtered.length > 0) {\n        continue;\n      }\n      return true;\n    }\n    return false;\n  };\n  class Sequence {\n    constructor() {\n      /** @type {TSequencePart[]} */\n      this.parts = [];\n      /** @type {string[]} */\n\n      this.substrs = [];\n      this.start = 0;\n      this.end = 0;\n    }\n    /**\n     * @param {TSequencePart|undefined} part\n     */\n\n    add(part) {\n      if (part) {\n        this.parts.push(part);\n        this.substrs.push(part.substr);\n        this.start = Math.min(part.start, this.start);\n        this.end = Math.max(part.end, this.end);\n      }\n    }\n    last() {\n      return this.parts[this.parts.length - 1];\n    }\n    length() {\n      return this.parts.length;\n    }\n    /**\n     * @param {number} position\n     * @param {TSequencePart} last_piece\n     */\n\n    clone(position, last_piece) {\n      let clone = new Sequence();\n      let parts = JSON.parse(JSON.stringify(this.parts));\n      let last_part = parts.pop();\n      for (const part of parts) {\n        clone.add(part);\n      }\n      let last_substr = last_piece.substr.substring(0, position - last_part.start);\n      let clone_last_len = last_substr.length;\n      clone.add({\n        start: last_part.start,\n        end: last_part.start + clone_last_len,\n        length: clone_last_len,\n        substr: last_substr\n      });\n      return clone;\n    }\n  }\n  /**\n   * Expand a regular expression pattern to include unicode variants\n   * \teg /a/ becomes /aⓐａẚàáâầấẫẩãāăằắẵẳȧǡäǟảåǻǎȁȃạậặḁąⱥɐɑAⒶＡÀÁÂẦẤẪẨÃĀĂẰẮẴẲȦǠÄǞẢÅǺǍȀȂẠẬẶḀĄȺⱯ/\n   *\n   * Issue:\n   *  ﺊﺋ [ 'ﺊ = \\\\u{fe8a}', 'ﺋ = \\\\u{fe8b}' ]\n   *\tbecomes:\tئئ [ 'ي = \\\\u{64a}', 'ٔ = \\\\u{654}', 'ي = \\\\u{64a}', 'ٔ = \\\\u{654}' ]\n   *\n   *\tİĲ = IIJ = ⅡJ\n   *\n   * \t1/2/4\n   *\n   * @param {string} str\n   * @return {string|undefined}\n   */\n\n  const getPattern = str => {\n    initialize();\n    str = asciifold(str);\n    let pattern = '';\n    let sequences = [new Sequence()];\n    for (let i = 0; i < str.length; i++) {\n      let substr = str.substring(i);\n      let match = substr.match(multi_char_reg);\n      const char = str.substring(i, i + 1);\n      const match_str = match ? match[0] : null; // loop through sequences\n      // add either the char or multi_match\n\n      let overlapping = [];\n      let added_types = new Set();\n      for (const sequence of sequences) {\n        const last_piece = sequence.last();\n        if (!last_piece || last_piece.length == 1 || last_piece.end <= i) {\n          // if we have a multi match\n          if (match_str) {\n            const len = match_str.length;\n            sequence.add({\n              start: i,\n              end: i + len,\n              length: len,\n              substr: match_str\n            });\n            added_types.add('1');\n          } else {\n            sequence.add({\n              start: i,\n              end: i + 1,\n              length: 1,\n              substr: char\n            });\n            added_types.add('2');\n          }\n        } else if (match_str) {\n          let clone = sequence.clone(i, last_piece);\n          const len = match_str.length;\n          clone.add({\n            start: i,\n            end: i + len,\n            length: len,\n            substr: match_str\n          });\n          overlapping.push(clone);\n        } else {\n          // don't add char\n          // adding would create invalid patterns: 234 => [2,34,4]\n          added_types.add('3');\n        }\n      } // if we have overlapping\n\n      if (overlapping.length > 0) {\n        // ['ii','iii'] before ['i','i','iii']\n        overlapping = overlapping.sort((a, b) => {\n          return a.length() - b.length();\n        });\n        for (let clone of overlapping) {\n          // don't add if we already have an equivalent sequence\n          if (inSequences(clone, sequences)) {\n            continue;\n          }\n          sequences.push(clone);\n        }\n        continue;\n      } // if we haven't done anything unique\n      // clean up the patterns\n      // helps keep patterns smaller\n      // if str = 'r₨㎧aarss', pattern will be 446 instead of 655\n\n      if (i > 0 && added_types.size == 1 && !added_types.has('3')) {\n        pattern += sequencesToPattern(sequences, false);\n        let new_seq = new Sequence();\n        const old_seq = sequences[0];\n        if (old_seq) {\n          new_seq.add(old_seq.last());\n        }\n        sequences = [new_seq];\n      }\n    }\n    pattern += sequencesToPattern(sequences, true);\n    return pattern;\n  };\n\n  /*! sifter.js | https://github.com/orchidjs/sifter.js | Apache License (v2) */\n\n  /**\n   * A property getter resolving dot-notation\n   * @param  {Object}  obj     The root object to fetch property on\n   * @param  {String}  name    The optionally dotted property name to fetch\n   * @return {Object}          The resolved property value\n   */\n  const getAttr = (obj, name) => {\n    if (!obj) return;\n    return obj[name];\n  };\n  /**\n   * A property getter resolving dot-notation\n   * @param  {Object}  obj     The root object to fetch property on\n   * @param  {String}  name    The optionally dotted property name to fetch\n   * @return {Object}          The resolved property value\n   */\n\n  const getAttrNesting = (obj, name) => {\n    if (!obj) return;\n    var part,\n      names = name.split(\".\");\n    while ((part = names.shift()) && (obj = obj[part]));\n    return obj;\n  };\n  /**\n   * Calculates how close of a match the\n   * given value is against a search token.\n   *\n   */\n\n  const scoreValue = (value, token, weight) => {\n    var score, pos;\n    if (!value) return 0;\n    value = value + '';\n    if (token.regex == null) return 0;\n    pos = value.search(token.regex);\n    if (pos === -1) return 0;\n    score = token.string.length / value.length;\n    if (pos === 0) score += 0.5;\n    return score * weight;\n  };\n  /**\n   * Cast object property to an array if it exists and has a value\n   *\n   */\n\n  const propToArray = (obj, key) => {\n    var value = obj[key];\n    if (typeof value == 'function') return value;\n    if (value && !Array.isArray(value)) {\n      obj[key] = [value];\n    }\n  };\n  /**\n   * Iterates over arrays and hashes.\n   *\n   * ```\n   * iterate(this.items, function(item, id) {\n   *    // invoked for each item\n   * });\n   * ```\n   *\n   */\n\n  const iterate$1 = (object, callback) => {\n    if (Array.isArray(object)) {\n      object.forEach(callback);\n    } else {\n      for (var key in object) {\n        if (object.hasOwnProperty(key)) {\n          callback(object[key], key);\n        }\n      }\n    }\n  };\n  const cmp = (a, b) => {\n    if (typeof a === 'number' && typeof b === 'number') {\n      return a > b ? 1 : a < b ? -1 : 0;\n    }\n    a = asciifold(a + '').toLowerCase();\n    b = asciifold(b + '').toLowerCase();\n    if (a > b) return 1;\n    if (b > a) return -1;\n    return 0;\n  };\n\n  /*! sifter.js | https://github.com/orchidjs/sifter.js | Apache License (v2) */\n\n  /**\n   * sifter.js\n   * Copyright (c) 2013–2020 Brian Reavis & contributors\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n   * file except in compliance with the License. You may obtain a copy of the License at:\n   * http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software distributed under\n   * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n   * ANY KIND, either express or implied. See the License for the specific language\n   * governing permissions and limitations under the License.\n   *\n   * @author Brian Reavis <brian@thirdroute.com>\n   */\n\n  class Sifter {\n    // []|{};\n\n    /**\n     * Textually searches arrays and hashes of objects\n     * by property (or multiple properties). Designed\n     * specifically for autocomplete.\n     *\n     */\n    constructor(items, settings) {\n      this.items = void 0;\n      this.settings = void 0;\n      this.items = items;\n      this.settings = settings || {\n        diacritics: true\n      };\n    }\n\n    /**\n     * Splits a search string into an array of individual\n     * regexps to be used to match results.\n     *\n     */\n    tokenize(query, respect_word_boundaries, weights) {\n      if (!query || !query.length) return [];\n      const tokens = [];\n      const words = query.split(/\\s+/);\n      var field_regex;\n      if (weights) {\n        field_regex = new RegExp('^(' + Object.keys(weights).map(escape_regex).join('|') + ')\\:(.*)$');\n      }\n      words.forEach(word => {\n        let field_match;\n        let field = null;\n        let regex = null; // look for \"field:query\" tokens\n\n        if (field_regex && (field_match = word.match(field_regex))) {\n          field = field_match[1];\n          word = field_match[2];\n        }\n        if (word.length > 0) {\n          if (this.settings.diacritics) {\n            regex = getPattern(word) || null;\n          } else {\n            regex = escape_regex(word);\n          }\n          if (regex && respect_word_boundaries) regex = \"\\\\b\" + regex;\n        }\n        tokens.push({\n          string: word,\n          regex: regex ? new RegExp(regex, 'iu') : null,\n          field: field\n        });\n      });\n      return tokens;\n    }\n\n    /**\n     * Returns a function to be used to score individual results.\n     *\n     * Good matches will have a higher score than poor matches.\n     * If an item is not a match, 0 will be returned by the function.\n     *\n     * @returns {T.ScoreFn}\n     */\n    getScoreFunction(query, options) {\n      var search = this.prepareSearch(query, options);\n      return this._getScoreFunction(search);\n    }\n    /**\n     * @returns {T.ScoreFn}\n     *\n     */\n\n    _getScoreFunction(search) {\n      const tokens = search.tokens,\n        token_count = tokens.length;\n      if (!token_count) {\n        return function () {\n          return 0;\n        };\n      }\n      const fields = search.options.fields,\n        weights = search.weights,\n        field_count = fields.length,\n        getAttrFn = search.getAttrFn;\n      if (!field_count) {\n        return function () {\n          return 1;\n        };\n      }\n      /**\n       * Calculates the score of an object\n       * against the search query.\n       *\n       */\n\n      const scoreObject = function () {\n        if (field_count === 1) {\n          return function (token, data) {\n            const field = fields[0].field;\n            return scoreValue(getAttrFn(data, field), token, weights[field] || 1);\n          };\n        }\n        return function (token, data) {\n          var sum = 0; // is the token specific to a field?\n\n          if (token.field) {\n            const value = getAttrFn(data, token.field);\n            if (!token.regex && value) {\n              sum += 1 / field_count;\n            } else {\n              sum += scoreValue(value, token, 1);\n            }\n          } else {\n            iterate$1(weights, (weight, field) => {\n              sum += scoreValue(getAttrFn(data, field), token, weight);\n            });\n          }\n          return sum / field_count;\n        };\n      }();\n      if (token_count === 1) {\n        return function (data) {\n          return scoreObject(tokens[0], data);\n        };\n      }\n      if (search.options.conjunction === 'and') {\n        return function (data) {\n          var score,\n            sum = 0;\n          for (let token of tokens) {\n            score = scoreObject(token, data);\n            if (score <= 0) return 0;\n            sum += score;\n          }\n          return sum / token_count;\n        };\n      } else {\n        return function (data) {\n          var sum = 0;\n          iterate$1(tokens, token => {\n            sum += scoreObject(token, data);\n          });\n          return sum / token_count;\n        };\n      }\n    }\n\n    /**\n     * Returns a function that can be used to compare two\n     * results, for sorting purposes. If no sorting should\n     * be performed, `null` will be returned.\n     *\n     * @return function(a,b)\n     */\n    getSortFunction(query, options) {\n      var search = this.prepareSearch(query, options);\n      return this._getSortFunction(search);\n    }\n    _getSortFunction(search) {\n      var implicit_score,\n        sort_flds = [];\n      const self = this,\n        options = search.options,\n        sort = !search.query && options.sort_empty ? options.sort_empty : options.sort;\n      if (typeof sort == 'function') {\n        return sort.bind(this);\n      }\n      /**\n       * Fetches the specified sort field value\n       * from a search result item.\n       *\n       */\n\n      const get_field = function get_field(name, result) {\n        if (name === '$score') return result.score;\n        return search.getAttrFn(self.items[result.id], name);\n      }; // parse options\n\n      if (sort) {\n        for (let s of sort) {\n          if (search.query || s.field !== '$score') {\n            sort_flds.push(s);\n          }\n        }\n      } // the \"$score\" field is implied to be the primary\n      // sort field, unless it's manually specified\n\n      if (search.query) {\n        implicit_score = true;\n        for (let fld of sort_flds) {\n          if (fld.field === '$score') {\n            implicit_score = false;\n            break;\n          }\n        }\n        if (implicit_score) {\n          sort_flds.unshift({\n            field: '$score',\n            direction: 'desc'\n          });\n        } // without a search.query, all items will have the same score\n      } else {\n        sort_flds = sort_flds.filter(fld => fld.field !== '$score');\n      } // build function\n\n      const sort_flds_count = sort_flds.length;\n      if (!sort_flds_count) {\n        return null;\n      }\n      return function (a, b) {\n        var result, field;\n        for (let sort_fld of sort_flds) {\n          field = sort_fld.field;\n          let multiplier = sort_fld.direction === 'desc' ? -1 : 1;\n          result = multiplier * cmp(get_field(field, a), get_field(field, b));\n          if (result) return result;\n        }\n        return 0;\n      };\n    }\n\n    /**\n     * Parses a search query and returns an object\n     * with tokens and fields ready to be populated\n     * with results.\n     *\n     */\n    prepareSearch(query, optsUser) {\n      const weights = {};\n      var options = Object.assign({}, optsUser);\n      propToArray(options, 'sort');\n      propToArray(options, 'sort_empty'); // convert fields to new format\n\n      if (options.fields) {\n        propToArray(options, 'fields');\n        const fields = [];\n        options.fields.forEach(field => {\n          if (typeof field == 'string') {\n            field = {\n              field: field,\n              weight: 1\n            };\n          }\n          fields.push(field);\n          weights[field.field] = 'weight' in field ? field.weight : 1;\n        });\n        options.fields = fields;\n      }\n      return {\n        options: options,\n        query: query.toLowerCase().trim(),\n        tokens: this.tokenize(query, options.respect_word_boundaries, weights),\n        total: 0,\n        items: [],\n        weights: weights,\n        getAttrFn: options.nesting ? getAttrNesting : getAttr\n      };\n    }\n\n    /**\n     * Searches through all items and returns a sorted array of matches.\n     *\n     */\n    search(query, options) {\n      var self = this,\n        score,\n        search;\n      search = this.prepareSearch(query, options);\n      options = search.options;\n      query = search.query; // generate result scoring function\n\n      const fn_score = options.score || self._getScoreFunction(search); // perform search and sort\n\n      if (query.length) {\n        iterate$1(self.items, (item, id) => {\n          score = fn_score(item);\n          if (options.filter === false || score > 0) {\n            search.items.push({\n              'score': score,\n              'id': id\n            });\n          }\n        });\n      } else {\n        iterate$1(self.items, (_, id) => {\n          search.items.push({\n            'score': 1,\n            'id': id\n          });\n        });\n      }\n      const fn_sort = self._getSortFunction(search);\n      if (fn_sort) search.items.sort(fn_sort); // apply limits\n\n      search.total = search.items.length;\n      if (typeof options.limit === 'number') {\n        search.items = search.items.slice(0, options.limit);\n      }\n      return search;\n    }\n  }\n\n  /**\n   * Iterates over arrays and hashes.\n   *\n   * ```\n   * iterate(this.items, function(item, id) {\n   *    // invoked for each item\n   * });\n   * ```\n   *\n   */\n\n  const iterate = (object, callback) => {\n    if (Array.isArray(object)) {\n      object.forEach(callback);\n    } else {\n      for (var key in object) {\n        if (object.hasOwnProperty(key)) {\n          callback(object[key], key);\n        }\n      }\n    }\n  };\n\n  /**\n   * Return a dom element from either a dom query string, jQuery object, a dom element or html string\n   * https://stackoverflow.com/questions/494143/creating-a-new-dom-element-from-an-html-string-using-built-in-dom-methods-or-pro/35385518#35385518\n   *\n   * param query should be {}\n   */\n\n  const getDom = query => {\n    if (query.jquery) {\n      return query[0];\n    }\n    if (query instanceof HTMLElement) {\n      return query;\n    }\n    if (isHtmlString(query)) {\n      var tpl = document.createElement('template');\n      tpl.innerHTML = query.trim(); // Never return a text node of whitespace as the result\n\n      return tpl.content.firstChild;\n    }\n    return document.querySelector(query);\n  };\n  const isHtmlString = arg => {\n    if (typeof arg === 'string' && arg.indexOf('<') > -1) {\n      return true;\n    }\n    return false;\n  };\n  const escapeQuery = query => {\n    return query.replace(/['\"\\\\]/g, '\\\\$&');\n  };\n  /**\n   * Dispatch an event\n   *\n   */\n\n  const triggerEvent = (dom_el, event_name) => {\n    var event = document.createEvent('HTMLEvents');\n    event.initEvent(event_name, true, false);\n    dom_el.dispatchEvent(event);\n  };\n  /**\n   * Apply CSS rules to a dom element\n   *\n   */\n\n  const applyCSS = (dom_el, css) => {\n    Object.assign(dom_el.style, css);\n  };\n  /**\n   * Add css classes\n   *\n   */\n\n  const addClasses = (elmts, ...classes) => {\n    var norm_classes = classesArray(classes);\n    elmts = castAsArray(elmts);\n    elmts.map(el => {\n      norm_classes.map(cls => {\n        el.classList.add(cls);\n      });\n    });\n  };\n  /**\n   * Remove css classes\n   *\n   */\n\n  const removeClasses = (elmts, ...classes) => {\n    var norm_classes = classesArray(classes);\n    elmts = castAsArray(elmts);\n    elmts.map(el => {\n      norm_classes.map(cls => {\n        el.classList.remove(cls);\n      });\n    });\n  };\n  /**\n   * Return arguments\n   *\n   */\n\n  const classesArray = args => {\n    var classes = [];\n    iterate(args, _classes => {\n      if (typeof _classes === 'string') {\n        _classes = _classes.trim().split(/[\\11\\12\\14\\15\\40]/);\n      }\n      if (Array.isArray(_classes)) {\n        classes = classes.concat(_classes);\n      }\n    });\n    return classes.filter(Boolean);\n  };\n  /**\n   * Create an array from arg if it's not already an array\n   *\n   */\n\n  const castAsArray = arg => {\n    if (!Array.isArray(arg)) {\n      arg = [arg];\n    }\n    return arg;\n  };\n  /**\n   * Get the closest node to the evt.target matching the selector\n   * Stops at wrapper\n   *\n   */\n\n  const parentMatch = (target, selector, wrapper) => {\n    if (wrapper && !wrapper.contains(target)) {\n      return;\n    }\n    while (target && target.matches) {\n      if (target.matches(selector)) {\n        return target;\n      }\n      target = target.parentNode;\n    }\n  };\n  /**\n   * Get the first or last item from an array\n   *\n   * > 0 - right (last)\n   * <= 0 - left (first)\n   *\n   */\n\n  const getTail = (list, direction = 0) => {\n    if (direction > 0) {\n      return list[list.length - 1];\n    }\n    return list[0];\n  };\n  /**\n   * Return true if an object is empty\n   *\n   */\n\n  const isEmptyObject = obj => {\n    return Object.keys(obj).length === 0;\n  };\n  /**\n   * Get the index of an element amongst sibling nodes of the same type\n   *\n   */\n\n  const nodeIndex = (el, amongst) => {\n    if (!el) return -1;\n    amongst = amongst || el.nodeName;\n    var i = 0;\n    while (el = el.previousElementSibling) {\n      if (el.matches(amongst)) {\n        i++;\n      }\n    }\n    return i;\n  };\n  /**\n   * Set attributes of an element\n   *\n   */\n\n  const setAttr = (el, attrs) => {\n    iterate(attrs, (val, attr) => {\n      if (val == null) {\n        el.removeAttribute(attr);\n      } else {\n        el.setAttribute(attr, '' + val);\n      }\n    });\n  };\n  /**\n   * Replace a node\n   */\n\n  const replaceNode = (existing, replacement) => {\n    if (existing.parentNode) existing.parentNode.replaceChild(replacement, existing);\n  };\n\n  /**\n   * highlight v3 | MIT license | Johann Burkard <jb@eaio.com>\n   * Highlights arbitrary terms in a node.\n   *\n   * - Modified by Marshal <beatgates@gmail.com> 2011-6-24 (added regex)\n   * - Modified by Brian Reavis <brian@thirdroute.com> 2012-8-27 (cleanup)\n   */\n  const highlight = (element, regex) => {\n    if (regex === null) return; // convet string to regex\n\n    if (typeof regex === 'string') {\n      if (!regex.length) return;\n      regex = new RegExp(regex, 'i');\n    } // Wrap matching part of text node with highlighting <span>, e.g.\n    // Soccer  ->  <span class=\"highlight\">Soc</span>cer  for regex = /soc/i\n\n    const highlightText = node => {\n      var match = node.data.match(regex);\n      if (match && node.data.length > 0) {\n        var spannode = document.createElement('span');\n        spannode.className = 'highlight';\n        var middlebit = node.splitText(match.index);\n        middlebit.splitText(match[0].length);\n        var middleclone = middlebit.cloneNode(true);\n        spannode.appendChild(middleclone);\n        replaceNode(middlebit, spannode);\n        return 1;\n      }\n      return 0;\n    }; // Recurse element node, looking for child text nodes to highlight, unless element\n    // is childless, <script>, <style>, or already highlighted: <span class=\"hightlight\">\n\n    const highlightChildren = node => {\n      if (node.nodeType === 1 && node.childNodes && !/(script|style)/i.test(node.tagName) && (node.className !== 'highlight' || node.tagName !== 'SPAN')) {\n        Array.from(node.childNodes).forEach(element => {\n          highlightRecursive(element);\n        });\n      }\n    };\n    const highlightRecursive = node => {\n      if (node.nodeType === 3) {\n        return highlightText(node);\n      }\n      highlightChildren(node);\n      return 0;\n    };\n    highlightRecursive(element);\n  };\n  /**\n   * removeHighlight fn copied from highlight v5 and\n   * edited to remove with(), pass js strict mode, and use without jquery\n   */\n\n  const removeHighlight = el => {\n    var elements = el.querySelectorAll(\"span.highlight\");\n    Array.prototype.forEach.call(elements, function (el) {\n      var parent = el.parentNode;\n      parent.replaceChild(el.firstChild, el);\n      parent.normalize();\n    });\n  };\n  const KEY_A = 65;\n  const KEY_RETURN = 13;\n  const KEY_ESC = 27;\n  const KEY_LEFT = 37;\n  const KEY_UP = 38;\n  const KEY_RIGHT = 39;\n  const KEY_DOWN = 40;\n  const KEY_BACKSPACE = 8;\n  const KEY_DELETE = 46;\n  const KEY_TAB = 9;\n  const IS_MAC = typeof navigator === 'undefined' ? false : /Mac/.test(navigator.userAgent);\n  const KEY_SHORTCUT = IS_MAC ? 'metaKey' : 'ctrlKey'; // ctrl key or apple key for ma\n\n  var defaults = {\n    options: [],\n    optgroups: [],\n    plugins: [],\n    delimiter: ',',\n    splitOn: null,\n    // regexp or string for splitting up values from a paste command\n    persist: true,\n    diacritics: true,\n    create: null,\n    createOnBlur: false,\n    createFilter: null,\n    highlight: true,\n    openOnFocus: true,\n    shouldOpen: null,\n    maxOptions: 50,\n    maxItems: null,\n    hideSelected: null,\n    duplicates: false,\n    addPrecedence: false,\n    selectOnTab: false,\n    preload: null,\n    allowEmptyOption: false,\n    //closeAfterSelect: false,\n    loadThrottle: 300,\n    loadingClass: 'loading',\n    dataAttr: null,\n    //'data-data',\n    optgroupField: 'optgroup',\n    valueField: 'value',\n    labelField: 'text',\n    disabledField: 'disabled',\n    optgroupLabelField: 'label',\n    optgroupValueField: 'value',\n    lockOptgroupOrder: false,\n    sortField: '$order',\n    searchField: ['text'],\n    searchConjunction: 'and',\n    mode: null,\n    wrapperClass: 'ts-wrapper',\n    controlClass: 'ts-control',\n    dropdownClass: 'ts-dropdown',\n    dropdownContentClass: 'ts-dropdown-content',\n    itemClass: 'item',\n    optionClass: 'option',\n    dropdownParent: null,\n    controlInput: '<input type=\"text\" autocomplete=\"off\" size=\"1\" />',\n    copyClassesToDropdown: false,\n    placeholder: null,\n    hidePlaceholder: null,\n    shouldLoad: function (query) {\n      return query.length > 0;\n    },\n    /*\n    load                 : null, // function(query, callback) { ... }\n    score                : null, // function(search) { ... }\n    onInitialize         : null, // function() { ... }\n    onChange             : null, // function(value) { ... }\n    onItemAdd            : null, // function(value, $item) { ... }\n    onItemRemove         : null, // function(value) { ... }\n    onClear              : null, // function() { ... }\n    onOptionAdd          : null, // function(value, data) { ... }\n    onOptionRemove       : null, // function(value) { ... }\n    onOptionClear        : null, // function() { ... }\n    onOptionGroupAdd     : null, // function(id, data) { ... }\n    onOptionGroupRemove  : null, // function(id) { ... }\n    onOptionGroupClear   : null, // function() { ... }\n    onDropdownOpen       : null, // function(dropdown) { ... }\n    onDropdownClose      : null, // function(dropdown) { ... }\n    onType               : null, // function(str) { ... }\n    onDelete             : null, // function(values) { ... }\n    */\n    render: {\n      /*\n      item: null,\n      optgroup: null,\n      optgroup_header: null,\n      option: null,\n      option_create: null\n      */\n    }\n  };\n\n  /**\n   * Converts a scalar to its best string representation\n   * for hash keys and HTML attribute values.\n   *\n   * Transformations:\n   *   'str'     -> 'str'\n   *   null      -> ''\n   *   undefined -> ''\n   *   true      -> '1'\n   *   false     -> '0'\n   *   0         -> '0'\n   *   1         -> '1'\n   *\n   */\n  const hash_key = value => {\n    if (typeof value === 'undefined' || value === null) return null;\n    return get_hash(value);\n  };\n  const get_hash = value => {\n    if (typeof value === 'boolean') return value ? '1' : '0';\n    return value + '';\n  };\n  /**\n   * Escapes a string for use within HTML.\n   *\n   */\n\n  const escape_html = str => {\n    return (str + '').replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;');\n  };\n  /**\n   * Debounce the user provided load function\n   *\n   */\n\n  const loadDebounce = (fn, delay) => {\n    var timeout;\n    return function (value, callback) {\n      var self = this;\n      if (timeout) {\n        self.loading = Math.max(self.loading - 1, 0);\n        clearTimeout(timeout);\n      }\n      timeout = setTimeout(function () {\n        timeout = null;\n        self.loadedSearches[value] = true;\n        fn.call(self, value, callback);\n      }, delay);\n    };\n  };\n  /**\n   * Debounce all fired events types listed in `types`\n   * while executing the provided `fn`.\n   *\n   */\n\n  const debounce_events = (self, types, fn) => {\n    var type;\n    var trigger = self.trigger;\n    var event_args = {}; // override trigger method\n\n    self.trigger = function () {\n      var type = arguments[0];\n      if (types.indexOf(type) !== -1) {\n        event_args[type] = arguments;\n      } else {\n        return trigger.apply(self, arguments);\n      }\n    }; // invoke provided function\n\n    fn.apply(self, []);\n    self.trigger = trigger; // trigger queued events\n\n    for (type of types) {\n      if (type in event_args) {\n        trigger.apply(self, event_args[type]);\n      }\n    }\n  };\n  /**\n   * Determines the current selection within a text input control.\n   * Returns an object containing:\n   *   - start\n   *   - length\n   *\n   */\n\n  const getSelection = input => {\n    return {\n      start: input.selectionStart || 0,\n      length: (input.selectionEnd || 0) - (input.selectionStart || 0)\n    };\n  };\n  /**\n   * Prevent default\n   *\n   */\n\n  const preventDefault = (evt, stop = false) => {\n    if (evt) {\n      evt.preventDefault();\n      if (stop) {\n        evt.stopPropagation();\n      }\n    }\n  };\n  /**\n   * Add event helper\n   *\n   */\n\n  const addEvent = (target, type, callback, options) => {\n    target.addEventListener(type, callback, options);\n  };\n  /**\n   * Return true if the requested key is down\n   * Will return false if more than one control character is pressed ( when [ctrl+shift+a] != [ctrl+a] )\n   * The current evt may not always set ( eg calling advanceSelection() )\n   *\n   */\n\n  const isKeyDown = (key_name, evt) => {\n    if (!evt) {\n      return false;\n    }\n    if (!evt[key_name]) {\n      return false;\n    }\n    var count = (evt.altKey ? 1 : 0) + (evt.ctrlKey ? 1 : 0) + (evt.shiftKey ? 1 : 0) + (evt.metaKey ? 1 : 0);\n    if (count === 1) {\n      return true;\n    }\n    return false;\n  };\n  /**\n   * Get the id of an element\n   * If the id attribute is not set, set the attribute with the given id\n   *\n   */\n\n  const getId = (el, id) => {\n    const existing_id = el.getAttribute('id');\n    if (existing_id) {\n      return existing_id;\n    }\n    el.setAttribute('id', id);\n    return id;\n  };\n  /**\n   * Returns a string with backslashes added before characters that need to be escaped.\n   */\n\n  const addSlashes = str => {\n    return str.replace(/[\\\\\"']/g, '\\\\$&');\n  };\n  /**\n   *\n   */\n\n  const append = (parent, node) => {\n    if (node) parent.append(node);\n  };\n  function getSettings(input, settings_user) {\n    var settings = Object.assign({}, defaults, settings_user);\n    var attr_data = settings.dataAttr;\n    var field_label = settings.labelField;\n    var field_value = settings.valueField;\n    var field_disabled = settings.disabledField;\n    var field_optgroup = settings.optgroupField;\n    var field_optgroup_label = settings.optgroupLabelField;\n    var field_optgroup_value = settings.optgroupValueField;\n    var tag_name = input.tagName.toLowerCase();\n    var placeholder = input.getAttribute('placeholder') || input.getAttribute('data-placeholder');\n    if (!placeholder && !settings.allowEmptyOption) {\n      let option = input.querySelector('option[value=\"\"]');\n      if (option) {\n        placeholder = option.textContent;\n      }\n    }\n    var settings_element = {\n      placeholder: placeholder,\n      options: [],\n      optgroups: [],\n      items: [],\n      maxItems: null\n    };\n    /**\n     * Initialize from a <select> element.\n     *\n     */\n\n    var init_select = () => {\n      var tagName;\n      var options = settings_element.options;\n      var optionsMap = {};\n      var group_count = 1;\n      var readData = el => {\n        var data = Object.assign({}, el.dataset); // get plain object from DOMStringMap\n\n        var json = attr_data && data[attr_data];\n        if (typeof json === 'string' && json.length) {\n          data = Object.assign(data, JSON.parse(json));\n        }\n        return data;\n      };\n      var addOption = (option, group) => {\n        var value = hash_key(option.value);\n        if (value == null) return;\n        if (!value && !settings.allowEmptyOption) return; // if the option already exists, it's probably been\n        // duplicated in another optgroup. in this case, push\n        // the current group to the \"optgroup\" property on the\n        // existing option so that it's rendered in both places.\n\n        if (optionsMap.hasOwnProperty(value)) {\n          if (group) {\n            var arr = optionsMap[value][field_optgroup];\n            if (!arr) {\n              optionsMap[value][field_optgroup] = group;\n            } else if (!Array.isArray(arr)) {\n              optionsMap[value][field_optgroup] = [arr, group];\n            } else {\n              arr.push(group);\n            }\n          }\n        } else {\n          var option_data = readData(option);\n          option_data[field_label] = option_data[field_label] || option.textContent;\n          option_data[field_value] = option_data[field_value] || value;\n          option_data[field_disabled] = option_data[field_disabled] || option.disabled;\n          option_data[field_optgroup] = option_data[field_optgroup] || group;\n          option_data.$option = option;\n          optionsMap[value] = option_data;\n          options.push(option_data);\n        }\n        if (option.selected) {\n          settings_element.items.push(value);\n        }\n      };\n      var addGroup = optgroup => {\n        var id, optgroup_data;\n        optgroup_data = readData(optgroup);\n        optgroup_data[field_optgroup_label] = optgroup_data[field_optgroup_label] || optgroup.getAttribute('label') || '';\n        optgroup_data[field_optgroup_value] = optgroup_data[field_optgroup_value] || group_count++;\n        optgroup_data[field_disabled] = optgroup_data[field_disabled] || optgroup.disabled;\n        settings_element.optgroups.push(optgroup_data);\n        id = optgroup_data[field_optgroup_value];\n        iterate(optgroup.children, option => {\n          addOption(option, id);\n        });\n      };\n      settings_element.maxItems = input.hasAttribute('multiple') ? null : 1;\n      iterate(input.children, child => {\n        tagName = child.tagName.toLowerCase();\n        if (tagName === 'optgroup') {\n          addGroup(child);\n        } else if (tagName === 'option') {\n          addOption(child);\n        }\n      });\n    };\n    /**\n     * Initialize from a <input type=\"text\"> element.\n     *\n     */\n\n    var init_textbox = () => {\n      const data_raw = input.getAttribute(attr_data);\n      if (!data_raw) {\n        var value = input.value.trim() || '';\n        if (!settings.allowEmptyOption && !value.length) return;\n        const values = value.split(settings.delimiter);\n        iterate(values, value => {\n          const option = {};\n          option[field_label] = value;\n          option[field_value] = value;\n          settings_element.options.push(option);\n        });\n        settings_element.items = values;\n      } else {\n        settings_element.options = JSON.parse(data_raw);\n        iterate(settings_element.options, opt => {\n          settings_element.items.push(opt[field_value]);\n        });\n      }\n    };\n    if (tag_name === 'select') {\n      init_select();\n    } else {\n      init_textbox();\n    }\n    return Object.assign({}, defaults, settings_element, settings_user);\n  }\n  var instance_i = 0;\n  class TomSelect extends MicroPlugin(MicroEvent) {\n    // @deprecated 1.8\n    constructor(input_arg, user_settings) {\n      super();\n      this.control_input = void 0;\n      this.wrapper = void 0;\n      this.dropdown = void 0;\n      this.control = void 0;\n      this.dropdown_content = void 0;\n      this.focus_node = void 0;\n      this.order = 0;\n      this.settings = void 0;\n      this.input = void 0;\n      this.tabIndex = void 0;\n      this.is_select_tag = void 0;\n      this.rtl = void 0;\n      this.inputId = void 0;\n      this._destroy = void 0;\n      this.sifter = void 0;\n      this.isOpen = false;\n      this.isDisabled = false;\n      this.isRequired = void 0;\n      this.isInvalid = false;\n      this.isValid = true;\n      this.isLocked = false;\n      this.isFocused = false;\n      this.isInputHidden = false;\n      this.isSetup = false;\n      this.ignoreFocus = false;\n      this.ignoreHover = false;\n      this.hasOptions = false;\n      this.currentResults = void 0;\n      this.lastValue = '';\n      this.caretPos = 0;\n      this.loading = 0;\n      this.loadedSearches = {};\n      this.activeOption = null;\n      this.activeItems = [];\n      this.optgroups = {};\n      this.options = {};\n      this.userOptions = {};\n      this.items = [];\n      instance_i++;\n      var dir;\n      var input = getDom(input_arg);\n      if (input.tomselect) {\n        throw new Error('Tom Select already initialized on this element');\n      }\n      input.tomselect = this; // detect rtl environment\n\n      var computedStyle = window.getComputedStyle && window.getComputedStyle(input, null);\n      dir = computedStyle.getPropertyValue('direction'); // setup default state\n\n      const settings = getSettings(input, user_settings);\n      this.settings = settings;\n      this.input = input;\n      this.tabIndex = input.tabIndex || 0;\n      this.is_select_tag = input.tagName.toLowerCase() === 'select';\n      this.rtl = /rtl/i.test(dir);\n      this.inputId = getId(input, 'tomselect-' + instance_i);\n      this.isRequired = input.required; // search system\n\n      this.sifter = new Sifter(this.options, {\n        diacritics: settings.diacritics\n      }); // option-dependent defaults\n\n      settings.mode = settings.mode || (settings.maxItems === 1 ? 'single' : 'multi');\n      if (typeof settings.hideSelected !== 'boolean') {\n        settings.hideSelected = settings.mode === 'multi';\n      }\n      if (typeof settings.hidePlaceholder !== 'boolean') {\n        settings.hidePlaceholder = settings.mode !== 'multi';\n      } // set up createFilter callback\n\n      var filter = settings.createFilter;\n      if (typeof filter !== 'function') {\n        if (typeof filter === 'string') {\n          filter = new RegExp(filter);\n        }\n        if (filter instanceof RegExp) {\n          settings.createFilter = input => filter.test(input);\n        } else {\n          settings.createFilter = value => {\n            return this.settings.duplicates || !this.options[value];\n          };\n        }\n      }\n      this.initializePlugins(settings.plugins);\n      this.setupCallbacks();\n      this.setupTemplates(); // Create all elements\n\n      const wrapper = getDom('<div>');\n      const control = getDom('<div>');\n      const dropdown = this._render('dropdown');\n      const dropdown_content = getDom(`<div role=\"listbox\" tabindex=\"-1\">`);\n      const classes = this.input.getAttribute('class') || '';\n      const inputMode = settings.mode;\n      var control_input;\n      addClasses(wrapper, settings.wrapperClass, classes, inputMode);\n      addClasses(control, settings.controlClass);\n      append(wrapper, control);\n      addClasses(dropdown, settings.dropdownClass, inputMode);\n      if (settings.copyClassesToDropdown) {\n        addClasses(dropdown, classes);\n      }\n      addClasses(dropdown_content, settings.dropdownContentClass);\n      append(dropdown, dropdown_content);\n      getDom(settings.dropdownParent || wrapper).appendChild(dropdown); // default controlInput\n\n      if (isHtmlString(settings.controlInput)) {\n        control_input = getDom(settings.controlInput); // set attributes\n\n        var attrs = ['autocorrect', 'autocapitalize', 'autocomplete'];\n        iterate$1(attrs, attr => {\n          if (input.getAttribute(attr)) {\n            setAttr(control_input, {\n              [attr]: input.getAttribute(attr)\n            });\n          }\n        });\n        control_input.tabIndex = -1;\n        control.appendChild(control_input);\n        this.focus_node = control_input; // dom element\n      } else if (settings.controlInput) {\n        control_input = getDom(settings.controlInput);\n        this.focus_node = control_input;\n      } else {\n        control_input = getDom('<input/>');\n        this.focus_node = control;\n      }\n      this.wrapper = wrapper;\n      this.dropdown = dropdown;\n      this.dropdown_content = dropdown_content;\n      this.control = control;\n      this.control_input = control_input;\n      this.setup();\n    }\n    /**\n     * set up event bindings.\n     *\n     */\n\n    setup() {\n      const self = this;\n      const settings = self.settings;\n      const control_input = self.control_input;\n      const dropdown = self.dropdown;\n      const dropdown_content = self.dropdown_content;\n      const wrapper = self.wrapper;\n      const control = self.control;\n      const input = self.input;\n      const focus_node = self.focus_node;\n      const passive_event = {\n        passive: true\n      };\n      const listboxId = self.inputId + '-ts-dropdown';\n      setAttr(dropdown_content, {\n        id: listboxId\n      });\n      setAttr(focus_node, {\n        role: 'combobox',\n        'aria-haspopup': 'listbox',\n        'aria-expanded': 'false',\n        'aria-controls': listboxId\n      });\n      const control_id = getId(focus_node, self.inputId + '-ts-control');\n      const query = \"label[for='\" + escapeQuery(self.inputId) + \"']\";\n      const label = document.querySelector(query);\n      const label_click = self.focus.bind(self);\n      if (label) {\n        addEvent(label, 'click', label_click);\n        setAttr(label, {\n          for: control_id\n        });\n        const label_id = getId(label, self.inputId + '-ts-label');\n        setAttr(focus_node, {\n          'aria-labelledby': label_id\n        });\n        setAttr(dropdown_content, {\n          'aria-labelledby': label_id\n        });\n      }\n      wrapper.style.width = input.style.width;\n      if (self.plugins.names.length) {\n        const classes_plugins = 'plugin-' + self.plugins.names.join(' plugin-');\n        addClasses([wrapper, dropdown], classes_plugins);\n      }\n      if ((settings.maxItems === null || settings.maxItems > 1) && self.is_select_tag) {\n        setAttr(input, {\n          multiple: 'multiple'\n        });\n      }\n      if (settings.placeholder) {\n        setAttr(control_input, {\n          placeholder: settings.placeholder\n        });\n      } // if splitOn was not passed in, construct it from the delimiter to allow pasting universally\n\n      if (!settings.splitOn && settings.delimiter) {\n        settings.splitOn = new RegExp('\\\\s*' + escape_regex(settings.delimiter) + '+\\\\s*');\n      } // debounce user defined load() if loadThrottle > 0\n      // after initializePlugins() so plugins can create/modify user defined loaders\n\n      if (settings.load && settings.loadThrottle) {\n        settings.load = loadDebounce(settings.load, settings.loadThrottle);\n      }\n      self.control_input.type = input.type;\n      addEvent(dropdown, 'mousemove', () => {\n        self.ignoreHover = false;\n      });\n      addEvent(dropdown, 'mouseenter', e => {\n        var target_match = parentMatch(e.target, '[data-selectable]', dropdown);\n        if (target_match) self.onOptionHover(e, target_match);\n      }, {\n        capture: true\n      }); // clicking on an option should select it\n\n      addEvent(dropdown, 'click', evt => {\n        const option = parentMatch(evt.target, '[data-selectable]');\n        if (option) {\n          self.onOptionSelect(evt, option);\n          preventDefault(evt, true);\n        }\n      });\n      addEvent(control, 'click', evt => {\n        var target_match = parentMatch(evt.target, '[data-ts-item]', control);\n        if (target_match && self.onItemSelect(evt, target_match)) {\n          preventDefault(evt, true);\n          return;\n        } // retain focus (see control_input mousedown)\n\n        if (control_input.value != '') {\n          return;\n        }\n        self.onClick();\n        preventDefault(evt, true);\n      }); // keydown on focus_node for arrow_down/arrow_up\n\n      addEvent(focus_node, 'keydown', e => self.onKeyDown(e)); // keypress and input/keyup\n\n      addEvent(control_input, 'keypress', e => self.onKeyPress(e));\n      addEvent(control_input, 'input', e => self.onInput(e));\n      addEvent(focus_node, 'blur', e => self.onBlur(e));\n      addEvent(focus_node, 'focus', e => self.onFocus(e));\n      addEvent(control_input, 'paste', e => self.onPaste(e));\n      const doc_mousedown = evt => {\n        // blur if target is outside of this instance\n        // dropdown is not always inside wrapper\n        const target = evt.composedPath()[0];\n        if (!wrapper.contains(target) && !dropdown.contains(target)) {\n          if (self.isFocused) {\n            self.blur();\n          }\n          self.inputState();\n          return;\n        } // retain focus by preventing native handling. if the\n        // event target is the input it should not be modified.\n        // otherwise, text selection within the input won't work.\n        // Fixes bug #212 which is no covered by tests\n\n        if (target == control_input && self.isOpen) {\n          evt.stopPropagation(); // clicking anywhere in the control should not blur the control_input (which would close the dropdown)\n        } else {\n          preventDefault(evt, true);\n        }\n      };\n      const win_scroll = () => {\n        if (self.isOpen) {\n          self.positionDropdown();\n        }\n      };\n      addEvent(document, 'mousedown', doc_mousedown);\n      addEvent(window, 'scroll', win_scroll, passive_event);\n      addEvent(window, 'resize', win_scroll, passive_event);\n      this._destroy = () => {\n        document.removeEventListener('mousedown', doc_mousedown);\n        window.removeEventListener('scroll', win_scroll);\n        window.removeEventListener('resize', win_scroll);\n        if (label) label.removeEventListener('click', label_click);\n      }; // store original html and tab index so that they can be\n      // restored when the destroy() method is called.\n\n      this.revertSettings = {\n        innerHTML: input.innerHTML,\n        tabIndex: input.tabIndex\n      };\n      input.tabIndex = -1;\n      input.insertAdjacentElement('afterend', self.wrapper);\n      self.sync(false);\n      settings.items = [];\n      delete settings.optgroups;\n      delete settings.options;\n      addEvent(input, 'invalid', () => {\n        if (self.isValid) {\n          self.isValid = false;\n          self.isInvalid = true;\n          self.refreshState();\n        }\n      });\n      self.updateOriginalInput();\n      self.refreshItems();\n      self.close(false);\n      self.inputState();\n      self.isSetup = true;\n      if (input.disabled) {\n        self.disable();\n      } else {\n        self.enable(); //sets tabIndex\n      }\n\n      self.on('change', this.onChange);\n      addClasses(input, 'tomselected', 'ts-hidden-accessible');\n      self.trigger('initialize'); // preload options\n\n      if (settings.preload === true) {\n        self.preload();\n      }\n    }\n    /**\n     * Register options and optgroups\n     *\n     */\n\n    setupOptions(options = [], optgroups = []) {\n      // build options table\n      this.addOptions(options); // build optgroup table\n\n      iterate$1(optgroups, optgroup => {\n        this.registerOptionGroup(optgroup);\n      });\n    }\n    /**\n     * Sets up default rendering functions.\n     */\n\n    setupTemplates() {\n      var self = this;\n      var field_label = self.settings.labelField;\n      var field_optgroup = self.settings.optgroupLabelField;\n      var templates = {\n        'optgroup': data => {\n          let optgroup = document.createElement('div');\n          optgroup.className = 'optgroup';\n          optgroup.appendChild(data.options);\n          return optgroup;\n        },\n        'optgroup_header': (data, escape) => {\n          return '<div class=\"optgroup-header\">' + escape(data[field_optgroup]) + '</div>';\n        },\n        'option': (data, escape) => {\n          return '<div>' + escape(data[field_label]) + '</div>';\n        },\n        'item': (data, escape) => {\n          return '<div>' + escape(data[field_label]) + '</div>';\n        },\n        'option_create': (data, escape) => {\n          return '<div class=\"create\">Add <strong>' + escape(data.input) + '</strong>&hellip;</div>';\n        },\n        'no_results': () => {\n          return '<div class=\"no-results\">No results found</div>';\n        },\n        'loading': () => {\n          return '<div class=\"spinner\"></div>';\n        },\n        'not_loading': () => {},\n        'dropdown': () => {\n          return '<div></div>';\n        }\n      };\n      self.settings.render = Object.assign({}, templates, self.settings.render);\n    }\n    /**\n     * Maps fired events to callbacks provided\n     * in the settings used when creating the control.\n     */\n\n    setupCallbacks() {\n      var key, fn;\n      var callbacks = {\n        'initialize': 'onInitialize',\n        'change': 'onChange',\n        'item_add': 'onItemAdd',\n        'item_remove': 'onItemRemove',\n        'item_select': 'onItemSelect',\n        'clear': 'onClear',\n        'option_add': 'onOptionAdd',\n        'option_remove': 'onOptionRemove',\n        'option_clear': 'onOptionClear',\n        'optgroup_add': 'onOptionGroupAdd',\n        'optgroup_remove': 'onOptionGroupRemove',\n        'optgroup_clear': 'onOptionGroupClear',\n        'dropdown_open': 'onDropdownOpen',\n        'dropdown_close': 'onDropdownClose',\n        'type': 'onType',\n        'load': 'onLoad',\n        'focus': 'onFocus',\n        'blur': 'onBlur'\n      };\n      for (key in callbacks) {\n        fn = this.settings[callbacks[key]];\n        if (fn) this.on(key, fn);\n      }\n    }\n    /**\n     * Sync the Tom Select instance with the original input or select\n     *\n     */\n\n    sync(get_settings = true) {\n      const self = this;\n      const settings = get_settings ? getSettings(self.input, {\n        delimiter: self.settings.delimiter\n      }) : self.settings;\n      self.setupOptions(settings.options, settings.optgroups);\n      self.setValue(settings.items || [], true); // silent prevents recursion\n\n      self.lastQuery = null; // so updated options will be displayed in dropdown\n    }\n    /**\n     * Triggered when the main control element\n     * has a click event.\n     *\n     */\n\n    onClick() {\n      var self = this;\n      if (self.activeItems.length > 0) {\n        self.clearActiveItems();\n        self.focus();\n        return;\n      }\n      if (self.isFocused && self.isOpen) {\n        self.blur();\n      } else {\n        self.focus();\n      }\n    }\n    /**\n     * @deprecated v1.7\n     *\n     */\n\n    onMouseDown() {}\n    /**\n     * Triggered when the value of the control has been changed.\n     * This should propagate the event to the original DOM\n     * input / select element.\n     */\n\n    onChange() {\n      triggerEvent(this.input, 'input');\n      triggerEvent(this.input, 'change');\n    }\n    /**\n     * Triggered on <input> paste.\n     *\n     */\n\n    onPaste(e) {\n      var self = this;\n      if (self.isInputHidden || self.isLocked) {\n        preventDefault(e);\n        return;\n      } // If a regex or string is included, this will split the pasted\n      // input and create Items for each separate value\n\n      if (!self.settings.splitOn) {\n        return;\n      } // Wait for pasted text to be recognized in value\n\n      setTimeout(() => {\n        var pastedText = self.inputValue();\n        if (!pastedText.match(self.settings.splitOn)) {\n          return;\n        }\n        var splitInput = pastedText.trim().split(self.settings.splitOn);\n        iterate$1(splitInput, piece => {\n          const hash = hash_key(piece);\n          if (hash) {\n            if (this.options[piece]) {\n              self.addItem(piece);\n            } else {\n              self.createItem(piece);\n            }\n          }\n        });\n      }, 0);\n    }\n    /**\n     * Triggered on <input> keypress.\n     *\n     */\n\n    onKeyPress(e) {\n      var self = this;\n      if (self.isLocked) {\n        preventDefault(e);\n        return;\n      }\n      var character = String.fromCharCode(e.keyCode || e.which);\n      if (self.settings.create && self.settings.mode === 'multi' && character === self.settings.delimiter) {\n        self.createItem();\n        preventDefault(e);\n        return;\n      }\n    }\n    /**\n     * Triggered on <input> keydown.\n     *\n     */\n\n    onKeyDown(e) {\n      var self = this;\n      self.ignoreHover = true;\n      if (self.isLocked) {\n        if (e.keyCode !== KEY_TAB) {\n          preventDefault(e);\n        }\n        return;\n      }\n      switch (e.keyCode) {\n        // ctrl+A: select all\n        case KEY_A:\n          if (isKeyDown(KEY_SHORTCUT, e)) {\n            if (self.control_input.value == '') {\n              preventDefault(e);\n              self.selectAll();\n              return;\n            }\n          }\n          break;\n        // esc: close dropdown\n\n        case KEY_ESC:\n          if (self.isOpen) {\n            preventDefault(e, true);\n            self.close();\n          }\n          self.clearActiveItems();\n          return;\n        // down: open dropdown or move selection down\n\n        case KEY_DOWN:\n          if (!self.isOpen && self.hasOptions) {\n            self.open();\n          } else if (self.activeOption) {\n            let next = self.getAdjacent(self.activeOption, 1);\n            if (next) self.setActiveOption(next);\n          }\n          preventDefault(e);\n          return;\n        // up: move selection up\n\n        case KEY_UP:\n          if (self.activeOption) {\n            let prev = self.getAdjacent(self.activeOption, -1);\n            if (prev) self.setActiveOption(prev);\n          }\n          preventDefault(e);\n          return;\n        // return: select active option\n\n        case KEY_RETURN:\n          if (self.canSelect(self.activeOption)) {\n            self.onOptionSelect(e, self.activeOption);\n            preventDefault(e); // if the option_create=null, the dropdown might be closed\n          } else if (self.settings.create && self.createItem()) {\n            preventDefault(e); // don't submit form when searching for a value\n          } else if (document.activeElement == self.control_input && self.isOpen) {\n            preventDefault(e);\n          }\n          return;\n        // left: modifiy item selection to the left\n\n        case KEY_LEFT:\n          self.advanceSelection(-1, e);\n          return;\n        // right: modifiy item selection to the right\n\n        case KEY_RIGHT:\n          self.advanceSelection(1, e);\n          return;\n        // tab: select active option and/or create item\n\n        case KEY_TAB:\n          if (self.settings.selectOnTab) {\n            if (self.canSelect(self.activeOption)) {\n              self.onOptionSelect(e, self.activeOption); // prevent default [tab] behaviour of jump to the next field\n              // if select isFull, then the dropdown won't be open and [tab] will work normally\n\n              preventDefault(e);\n            }\n            if (self.settings.create && self.createItem()) {\n              preventDefault(e);\n            }\n          }\n          return;\n        // delete|backspace: delete items\n\n        case KEY_BACKSPACE:\n        case KEY_DELETE:\n          self.deleteSelection(e);\n          return;\n      } // don't enter text in the control_input when active items are selected\n\n      if (self.isInputHidden && !isKeyDown(KEY_SHORTCUT, e)) {\n        preventDefault(e);\n      }\n    }\n    /**\n     * Triggered on <input> keyup.\n     *\n     */\n\n    onInput(e) {\n      var self = this;\n      if (self.isLocked) {\n        return;\n      }\n      var value = self.inputValue();\n      if (self.lastValue !== value) {\n        self.lastValue = value;\n        if (self.settings.shouldLoad.call(self, value)) {\n          self.load(value);\n        }\n        self.refreshOptions();\n        self.trigger('type', value);\n      }\n    }\n    /**\n     * Triggered when the user rolls over\n     * an option in the autocomplete dropdown menu.\n     *\n     */\n\n    onOptionHover(evt, option) {\n      if (this.ignoreHover) return;\n      this.setActiveOption(option, false);\n    }\n    /**\n     * Triggered on <input> focus.\n     *\n     */\n\n    onFocus(e) {\n      var self = this;\n      var wasFocused = self.isFocused;\n      if (self.isDisabled) {\n        self.blur();\n        preventDefault(e);\n        return;\n      }\n      if (self.ignoreFocus) return;\n      self.isFocused = true;\n      if (self.settings.preload === 'focus') self.preload();\n      if (!wasFocused) self.trigger('focus');\n      if (!self.activeItems.length) {\n        self.showInput();\n        self.refreshOptions(!!self.settings.openOnFocus);\n      }\n      self.refreshState();\n    }\n    /**\n     * Triggered on <input> blur.\n     *\n     */\n\n    onBlur(e) {\n      if (document.hasFocus() === false) return;\n      var self = this;\n      if (!self.isFocused) return;\n      self.isFocused = false;\n      self.ignoreFocus = false;\n      var deactivate = () => {\n        self.close();\n        self.setActiveItem();\n        self.setCaret(self.items.length);\n        self.trigger('blur');\n      };\n      if (self.settings.create && self.settings.createOnBlur) {\n        self.createItem(null, deactivate);\n      } else {\n        deactivate();\n      }\n    }\n    /**\n     * Triggered when the user clicks on an option\n     * in the autocomplete dropdown menu.\n     *\n     */\n\n    onOptionSelect(evt, option) {\n      var value,\n        self = this; // should not be possible to trigger a option under a disabled optgroup\n\n      if (option.parentElement && option.parentElement.matches('[data-disabled]')) {\n        return;\n      }\n      if (option.classList.contains('create')) {\n        self.createItem(null, () => {\n          if (self.settings.closeAfterSelect) {\n            self.close();\n          }\n        });\n      } else {\n        value = option.dataset.value;\n        if (typeof value !== 'undefined') {\n          self.lastQuery = null;\n          self.addItem(value);\n          if (self.settings.closeAfterSelect) {\n            self.close();\n          }\n          if (!self.settings.hideSelected && evt.type && /click/.test(evt.type)) {\n            self.setActiveOption(option);\n          }\n        }\n      }\n    }\n    /**\n     * Return true if the given option can be selected\n     *\n     */\n\n    canSelect(option) {\n      if (this.isOpen && option && this.dropdown_content.contains(option)) {\n        return true;\n      }\n      return false;\n    }\n    /**\n     * Triggered when the user clicks on an item\n     * that has been selected.\n     *\n     */\n\n    onItemSelect(evt, item) {\n      var self = this;\n      if (!self.isLocked && self.settings.mode === 'multi') {\n        preventDefault(evt);\n        self.setActiveItem(item, evt);\n        return true;\n      }\n      return false;\n    }\n    /**\n     * Determines whether or not to invoke\n     * the user-provided option provider / loader\n     *\n     * Note, there is a subtle difference between\n     * this.canLoad() and this.settings.shouldLoad();\n     *\n     *\t- settings.shouldLoad() is a user-input validator.\n     *\tWhen false is returned, the not_loading template\n     *\twill be added to the dropdown\n     *\n     *\t- canLoad() is lower level validator that checks\n     * \tthe Tom Select instance. There is no inherent user\n     *\tfeedback when canLoad returns false\n     *\n     */\n\n    canLoad(value) {\n      if (!this.settings.load) return false;\n      if (this.loadedSearches.hasOwnProperty(value)) return false;\n      return true;\n    }\n    /**\n     * Invokes the user-provided option provider / loader.\n     *\n     */\n\n    load(value) {\n      const self = this;\n      if (!self.canLoad(value)) return;\n      addClasses(self.wrapper, self.settings.loadingClass);\n      self.loading++;\n      const callback = self.loadCallback.bind(self);\n      self.settings.load.call(self, value, callback);\n    }\n    /**\n     * Invoked by the user-provided option provider\n     *\n     */\n\n    loadCallback(options, optgroups) {\n      const self = this;\n      self.loading = Math.max(self.loading - 1, 0);\n      self.lastQuery = null;\n      self.clearActiveOption(); // when new results load, focus should be on first option\n\n      self.setupOptions(options, optgroups);\n      self.refreshOptions(self.isFocused && !self.isInputHidden);\n      if (!self.loading) {\n        removeClasses(self.wrapper, self.settings.loadingClass);\n      }\n      self.trigger('load', options, optgroups);\n    }\n    preload() {\n      var classList = this.wrapper.classList;\n      if (classList.contains('preloaded')) return;\n      classList.add('preloaded');\n      this.load('');\n    }\n    /**\n     * Sets the input field of the control to the specified value.\n     *\n     */\n\n    setTextboxValue(value = '') {\n      var input = this.control_input;\n      var changed = input.value !== value;\n      if (changed) {\n        input.value = value;\n        triggerEvent(input, 'update');\n        this.lastValue = value;\n      }\n    }\n    /**\n     * Returns the value of the control. If multiple items\n     * can be selected (e.g. <select multiple>), this returns\n     * an array. If only one item can be selected, this\n     * returns a string.\n     *\n     */\n\n    getValue() {\n      if (this.is_select_tag && this.input.hasAttribute('multiple')) {\n        return this.items;\n      }\n      return this.items.join(this.settings.delimiter);\n    }\n    /**\n     * Resets the selected items to the given value.\n     *\n     */\n\n    setValue(value, silent) {\n      var events = silent ? [] : ['change'];\n      debounce_events(this, events, () => {\n        this.clear(silent);\n        this.addItems(value, silent);\n      });\n    }\n    /**\n     * Resets the number of max items to the given value\n     *\n     */\n\n    setMaxItems(value) {\n      if (value === 0) value = null; //reset to unlimited items.\n\n      this.settings.maxItems = value;\n      this.refreshState();\n    }\n    /**\n     * Sets the selected item.\n     *\n     */\n\n    setActiveItem(item, e) {\n      var self = this;\n      var eventName;\n      var i, begin, end, swap;\n      var last;\n      if (self.settings.mode === 'single') return; // clear the active selection\n\n      if (!item) {\n        self.clearActiveItems();\n        if (self.isFocused) {\n          self.showInput();\n        }\n        return;\n      } // modify selection\n\n      eventName = e && e.type.toLowerCase();\n      if (eventName === 'click' && isKeyDown('shiftKey', e) && self.activeItems.length) {\n        last = self.getLastActive();\n        begin = Array.prototype.indexOf.call(self.control.children, last);\n        end = Array.prototype.indexOf.call(self.control.children, item);\n        if (begin > end) {\n          swap = begin;\n          begin = end;\n          end = swap;\n        }\n        for (i = begin; i <= end; i++) {\n          item = self.control.children[i];\n          if (self.activeItems.indexOf(item) === -1) {\n            self.setActiveItemClass(item);\n          }\n        }\n        preventDefault(e);\n      } else if (eventName === 'click' && isKeyDown(KEY_SHORTCUT, e) || eventName === 'keydown' && isKeyDown('shiftKey', e)) {\n        if (item.classList.contains('active')) {\n          self.removeActiveItem(item);\n        } else {\n          self.setActiveItemClass(item);\n        }\n      } else {\n        self.clearActiveItems();\n        self.setActiveItemClass(item);\n      } // ensure control has focus\n\n      self.hideInput();\n      if (!self.isFocused) {\n        self.focus();\n      }\n    }\n    /**\n     * Set the active and last-active classes\n     *\n     */\n\n    setActiveItemClass(item) {\n      const self = this;\n      const last_active = self.control.querySelector('.last-active');\n      if (last_active) removeClasses(last_active, 'last-active');\n      addClasses(item, 'active last-active');\n      self.trigger('item_select', item);\n      if (self.activeItems.indexOf(item) == -1) {\n        self.activeItems.push(item);\n      }\n    }\n    /**\n     * Remove active item\n     *\n     */\n\n    removeActiveItem(item) {\n      var idx = this.activeItems.indexOf(item);\n      this.activeItems.splice(idx, 1);\n      removeClasses(item, 'active');\n    }\n    /**\n     * Clears all the active items\n     *\n     */\n\n    clearActiveItems() {\n      removeClasses(this.activeItems, 'active');\n      this.activeItems = [];\n    }\n    /**\n     * Sets the selected item in the dropdown menu\n     * of available options.\n     *\n     */\n\n    setActiveOption(option, scroll = true) {\n      if (option === this.activeOption) {\n        return;\n      }\n      this.clearActiveOption();\n      if (!option) return;\n      this.activeOption = option;\n      setAttr(this.focus_node, {\n        'aria-activedescendant': option.getAttribute('id')\n      });\n      setAttr(option, {\n        'aria-selected': 'true'\n      });\n      addClasses(option, 'active');\n      if (scroll) this.scrollToOption(option);\n    }\n    /**\n     * Sets the dropdown_content scrollTop to display the option\n     *\n     */\n\n    scrollToOption(option, behavior) {\n      if (!option) return;\n      const content = this.dropdown_content;\n      const height_menu = content.clientHeight;\n      const scrollTop = content.scrollTop || 0;\n      const height_item = option.offsetHeight;\n      const y = option.getBoundingClientRect().top - content.getBoundingClientRect().top + scrollTop;\n      if (y + height_item > height_menu + scrollTop) {\n        this.scroll(y - height_menu + height_item, behavior);\n      } else if (y < scrollTop) {\n        this.scroll(y, behavior);\n      }\n    }\n    /**\n     * Scroll the dropdown to the given position\n     *\n     */\n\n    scroll(scrollTop, behavior) {\n      const content = this.dropdown_content;\n      if (behavior) {\n        content.style.scrollBehavior = behavior;\n      }\n      content.scrollTop = scrollTop;\n      content.style.scrollBehavior = '';\n    }\n    /**\n     * Clears the active option\n     *\n     */\n\n    clearActiveOption() {\n      if (this.activeOption) {\n        removeClasses(this.activeOption, 'active');\n        setAttr(this.activeOption, {\n          'aria-selected': null\n        });\n      }\n      this.activeOption = null;\n      setAttr(this.focus_node, {\n        'aria-activedescendant': null\n      });\n    }\n    /**\n     * Selects all items (CTRL + A).\n     */\n\n    selectAll() {\n      const self = this;\n      if (self.settings.mode === 'single') return;\n      const activeItems = self.controlChildren();\n      if (!activeItems.length) return;\n      self.hideInput();\n      self.close();\n      self.activeItems = activeItems;\n      iterate$1(activeItems, item => {\n        self.setActiveItemClass(item);\n      });\n    }\n    /**\n     * Determines if the control_input should be in a hidden or visible state\n     *\n     */\n\n    inputState() {\n      var self = this;\n      if (!self.control.contains(self.control_input)) return;\n      setAttr(self.control_input, {\n        placeholder: self.settings.placeholder\n      });\n      if (self.activeItems.length > 0 || !self.isFocused && self.settings.hidePlaceholder && self.items.length > 0) {\n        self.setTextboxValue();\n        self.isInputHidden = true;\n      } else {\n        if (self.settings.hidePlaceholder && self.items.length > 0) {\n          setAttr(self.control_input, {\n            placeholder: ''\n          });\n        }\n        self.isInputHidden = false;\n      }\n      self.wrapper.classList.toggle('input-hidden', self.isInputHidden);\n    }\n    /**\n     * Hides the input element out of view, while\n     * retaining its focus.\n     * @deprecated 1.3\n     */\n\n    hideInput() {\n      this.inputState();\n    }\n    /**\n     * Restores input visibility.\n     * @deprecated 1.3\n     */\n\n    showInput() {\n      this.inputState();\n    }\n    /**\n     * Get the input value\n     */\n\n    inputValue() {\n      return this.control_input.value.trim();\n    }\n    /**\n     * Gives the control focus.\n     */\n\n    focus() {\n      var self = this;\n      if (self.isDisabled) return;\n      self.ignoreFocus = true;\n      if (self.control_input.offsetWidth) {\n        self.control_input.focus();\n      } else {\n        self.focus_node.focus();\n      }\n      setTimeout(() => {\n        self.ignoreFocus = false;\n        self.onFocus();\n      }, 0);\n    }\n    /**\n     * Forces the control out of focus.\n     *\n     */\n\n    blur() {\n      this.focus_node.blur();\n      this.onBlur();\n    }\n    /**\n     * Returns a function that scores an object\n     * to show how good of a match it is to the\n     * provided query.\n     *\n     * @return {function}\n     */\n\n    getScoreFunction(query) {\n      return this.sifter.getScoreFunction(query, this.getSearchOptions());\n    }\n    /**\n     * Returns search options for sifter (the system\n     * for scoring and sorting results).\n     *\n     * @see https://github.com/orchidjs/sifter.js\n     * @return {object}\n     */\n\n    getSearchOptions() {\n      var settings = this.settings;\n      var sort = settings.sortField;\n      if (typeof settings.sortField === 'string') {\n        sort = [{\n          field: settings.sortField\n        }];\n      }\n      return {\n        fields: settings.searchField,\n        conjunction: settings.searchConjunction,\n        sort: sort,\n        nesting: settings.nesting\n      };\n    }\n    /**\n     * Searches through available options and returns\n     * a sorted array of matches.\n     *\n     */\n\n    search(query) {\n      var result, calculateScore;\n      var self = this;\n      var options = this.getSearchOptions(); // validate user-provided result scoring function\n\n      if (self.settings.score) {\n        calculateScore = self.settings.score.call(self, query);\n        if (typeof calculateScore !== 'function') {\n          throw new Error('Tom Select \"score\" setting must be a function that returns a function');\n        }\n      } // perform search\n\n      if (query !== self.lastQuery) {\n        self.lastQuery = query;\n        result = self.sifter.search(query, Object.assign(options, {\n          score: calculateScore\n        }));\n        self.currentResults = result;\n      } else {\n        result = Object.assign({}, self.currentResults);\n      } // filter out selected items\n\n      if (self.settings.hideSelected) {\n        result.items = result.items.filter(item => {\n          let hashed = hash_key(item.id);\n          return !(hashed && self.items.indexOf(hashed) !== -1);\n        });\n      }\n      return result;\n    }\n    /**\n     * Refreshes the list of available options shown\n     * in the autocomplete dropdown menu.\n     *\n     */\n\n    refreshOptions(triggerDropdown = true) {\n      var i, j, k, n, optgroup, optgroups, html, has_create_option, active_group;\n      var create;\n      const groups = {};\n      const groups_order = [];\n      var self = this;\n      var query = self.inputValue();\n      const same_query = query === self.lastQuery || query == '' && self.lastQuery == null;\n      var results = self.search(query);\n      var active_option = null;\n      var show_dropdown = self.settings.shouldOpen || false;\n      var dropdown_content = self.dropdown_content;\n      if (same_query) {\n        active_option = self.activeOption;\n        if (active_option) {\n          active_group = active_option.closest('[data-group]');\n        }\n      } // build markup\n\n      n = results.items.length;\n      if (typeof self.settings.maxOptions === 'number') {\n        n = Math.min(n, self.settings.maxOptions);\n      }\n      if (n > 0) {\n        show_dropdown = true;\n      } // render and group available options individually\n\n      for (i = 0; i < n; i++) {\n        // get option dom element\n        let item = results.items[i];\n        if (!item) continue;\n        let opt_value = item.id;\n        let option = self.options[opt_value];\n        if (option === undefined) continue;\n        let opt_hash = get_hash(opt_value);\n        let option_el = self.getOption(opt_hash, true); // toggle 'selected' class\n\n        if (!self.settings.hideSelected) {\n          option_el.classList.toggle('selected', self.items.includes(opt_hash));\n        }\n        optgroup = option[self.settings.optgroupField] || '';\n        optgroups = Array.isArray(optgroup) ? optgroup : [optgroup];\n        for (j = 0, k = optgroups && optgroups.length; j < k; j++) {\n          optgroup = optgroups[j];\n          if (!self.optgroups.hasOwnProperty(optgroup)) {\n            optgroup = '';\n          }\n          let group_fragment = groups[optgroup];\n          if (group_fragment === undefined) {\n            group_fragment = document.createDocumentFragment();\n            groups_order.push(optgroup);\n          } // nodes can only have one parent, so if the option is in mutple groups, we need a clone\n\n          if (j > 0) {\n            option_el = option_el.cloneNode(true);\n            setAttr(option_el, {\n              id: option.$id + '-clone-' + j,\n              'aria-selected': null\n            });\n            option_el.classList.add('ts-cloned');\n            removeClasses(option_el, 'active'); // make sure we keep the activeOption in the same group\n\n            if (self.activeOption && self.activeOption.dataset.value == opt_value) {\n              if (active_group && active_group.dataset.group === optgroup.toString()) {\n                active_option = option_el;\n              }\n            }\n          }\n          group_fragment.appendChild(option_el);\n          groups[optgroup] = group_fragment;\n        }\n      } // sort optgroups\n\n      if (self.settings.lockOptgroupOrder) {\n        groups_order.sort((a, b) => {\n          const grp_a = self.optgroups[a];\n          const grp_b = self.optgroups[b];\n          const a_order = grp_a && grp_a.$order || 0;\n          const b_order = grp_b && grp_b.$order || 0;\n          return a_order - b_order;\n        });\n      } // render optgroup headers & join groups\n\n      html = document.createDocumentFragment();\n      iterate$1(groups_order, optgroup => {\n        let group_fragment = groups[optgroup];\n        if (!group_fragment || !group_fragment.children.length) return;\n        let group_heading = self.optgroups[optgroup];\n        if (group_heading !== undefined) {\n          let group_options = document.createDocumentFragment();\n          let header = self.render('optgroup_header', group_heading);\n          append(group_options, header);\n          append(group_options, group_fragment);\n          let group_html = self.render('optgroup', {\n            group: group_heading,\n            options: group_options\n          });\n          append(html, group_html);\n        } else {\n          append(html, group_fragment);\n        }\n      });\n      dropdown_content.innerHTML = '';\n      append(dropdown_content, html); // highlight matching terms inline\n\n      if (self.settings.highlight) {\n        removeHighlight(dropdown_content);\n        if (results.query.length && results.tokens.length) {\n          iterate$1(results.tokens, tok => {\n            highlight(dropdown_content, tok.regex);\n          });\n        }\n      } // helper method for adding templates to dropdown\n\n      var add_template = template => {\n        let content = self.render(template, {\n          input: query\n        });\n        if (content) {\n          show_dropdown = true;\n          dropdown_content.insertBefore(content, dropdown_content.firstChild);\n        }\n        return content;\n      }; // add loading message\n\n      if (self.loading) {\n        add_template('loading'); // invalid query\n      } else if (!self.settings.shouldLoad.call(self, query)) {\n        add_template('not_loading'); // add no_results message\n      } else if (results.items.length === 0) {\n        add_template('no_results');\n      } // add create option\n\n      has_create_option = self.canCreate(query);\n      if (has_create_option) {\n        create = add_template('option_create');\n      } // activate\n\n      self.hasOptions = results.items.length > 0 || has_create_option;\n      if (show_dropdown) {\n        if (results.items.length > 0) {\n          if (!active_option && self.settings.mode === 'single' && self.items[0] != undefined) {\n            active_option = self.getOption(self.items[0]);\n          }\n          if (!dropdown_content.contains(active_option)) {\n            let active_index = 0;\n            if (create && !self.settings.addPrecedence) {\n              active_index = 1;\n            }\n            active_option = self.selectable()[active_index];\n          }\n        } else if (create) {\n          active_option = create;\n        }\n        if (triggerDropdown && !self.isOpen) {\n          self.open();\n          self.scrollToOption(active_option, 'auto');\n        }\n        self.setActiveOption(active_option);\n      } else {\n        self.clearActiveOption();\n        if (triggerDropdown && self.isOpen) {\n          self.close(false); // if create_option=null, we want the dropdown to close but not reset the textbox value\n        }\n      }\n    }\n    /**\n     * Return list of selectable options\n     *\n     */\n\n    selectable() {\n      return this.dropdown_content.querySelectorAll('[data-selectable]');\n    }\n    /**\n     * Adds an available option. If it already exists,\n     * nothing will happen. Note: this does not refresh\n     * the options list dropdown (use `refreshOptions`\n     * for that).\n     *\n     * Usage:\n     *\n     *   this.addOption(data)\n     *\n     */\n\n    addOption(data, user_created = false) {\n      const self = this; // @deprecated 1.7.7\n      // use addOptions( array, user_created ) for adding multiple options\n\n      if (Array.isArray(data)) {\n        self.addOptions(data, user_created);\n        return false;\n      }\n      const key = hash_key(data[self.settings.valueField]);\n      if (key === null || self.options.hasOwnProperty(key)) {\n        return false;\n      }\n      data.$order = data.$order || ++self.order;\n      data.$id = self.inputId + '-opt-' + data.$order;\n      self.options[key] = data;\n      self.lastQuery = null;\n      if (user_created) {\n        self.userOptions[key] = user_created;\n        self.trigger('option_add', key, data);\n      }\n      return key;\n    }\n    /**\n     * Add multiple options\n     *\n     */\n\n    addOptions(data, user_created = false) {\n      iterate$1(data, dat => {\n        this.addOption(dat, user_created);\n      });\n    }\n    /**\n     * @deprecated 1.7.7\n     */\n\n    registerOption(data) {\n      return this.addOption(data);\n    }\n    /**\n     * Registers an option group to the pool of option groups.\n     *\n     * @return {boolean|string}\n     */\n\n    registerOptionGroup(data) {\n      var key = hash_key(data[this.settings.optgroupValueField]);\n      if (key === null) return false;\n      data.$order = data.$order || ++this.order;\n      this.optgroups[key] = data;\n      return key;\n    }\n    /**\n     * Registers a new optgroup for options\n     * to be bucketed into.\n     *\n     */\n\n    addOptionGroup(id, data) {\n      var hashed_id;\n      data[this.settings.optgroupValueField] = id;\n      if (hashed_id = this.registerOptionGroup(data)) {\n        this.trigger('optgroup_add', hashed_id, data);\n      }\n    }\n    /**\n     * Removes an existing option group.\n     *\n     */\n\n    removeOptionGroup(id) {\n      if (this.optgroups.hasOwnProperty(id)) {\n        delete this.optgroups[id];\n        this.clearCache();\n        this.trigger('optgroup_remove', id);\n      }\n    }\n    /**\n     * Clears all existing option groups.\n     */\n\n    clearOptionGroups() {\n      this.optgroups = {};\n      this.clearCache();\n      this.trigger('optgroup_clear');\n    }\n    /**\n     * Updates an option available for selection. If\n     * it is visible in the selected items or options\n     * dropdown, it will be re-rendered automatically.\n     *\n     */\n\n    updateOption(value, data) {\n      const self = this;\n      var item_new;\n      var index_item;\n      const value_old = hash_key(value);\n      const value_new = hash_key(data[self.settings.valueField]); // sanity checks\n\n      if (value_old === null) return;\n      const data_old = self.options[value_old];\n      if (data_old == undefined) return;\n      if (typeof value_new !== 'string') throw new Error('Value must be set in option data');\n      const option = self.getOption(value_old);\n      const item = self.getItem(value_old);\n      data.$order = data.$order || data_old.$order;\n      delete self.options[value_old]; // invalidate render cache\n      // don't remove existing node yet, we'll remove it after replacing it\n\n      self.uncacheValue(value_new);\n      self.options[value_new] = data; // update the option if it's in the dropdown\n\n      if (option) {\n        if (self.dropdown_content.contains(option)) {\n          const option_new = self._render('option', data);\n          replaceNode(option, option_new);\n          if (self.activeOption === option) {\n            self.setActiveOption(option_new);\n          }\n        }\n        option.remove();\n      } // update the item if we have one\n\n      if (item) {\n        index_item = self.items.indexOf(value_old);\n        if (index_item !== -1) {\n          self.items.splice(index_item, 1, value_new);\n        }\n        item_new = self._render('item', data);\n        if (item.classList.contains('active')) addClasses(item_new, 'active');\n        replaceNode(item, item_new);\n      } // invalidate last query because we might have updated the sortField\n\n      self.lastQuery = null;\n    }\n    /**\n     * Removes a single option.\n     *\n     */\n\n    removeOption(value, silent) {\n      const self = this;\n      value = get_hash(value);\n      self.uncacheValue(value);\n      delete self.userOptions[value];\n      delete self.options[value];\n      self.lastQuery = null;\n      self.trigger('option_remove', value);\n      self.removeItem(value, silent);\n    }\n    /**\n     * Clears all options.\n     */\n\n    clearOptions(filter) {\n      const boundFilter = (filter || this.clearFilter).bind(this);\n      this.loadedSearches = {};\n      this.userOptions = {};\n      this.clearCache();\n      const selected = {};\n      iterate$1(this.options, (option, key) => {\n        if (boundFilter(option, key)) {\n          selected[key] = option;\n        }\n      });\n      this.options = this.sifter.items = selected;\n      this.lastQuery = null;\n      this.trigger('option_clear');\n    }\n    /**\n     * Used by clearOptions() to decide whether or not an option should be removed\n     * Return true to keep an option, false to remove\n     *\n     */\n\n    clearFilter(option, value) {\n      if (this.items.indexOf(value) >= 0) {\n        return true;\n      }\n      return false;\n    }\n    /**\n     * Returns the dom element of the option\n     * matching the given value.\n     *\n     */\n\n    getOption(value, create = false) {\n      const hashed = hash_key(value);\n      if (hashed === null) return null;\n      const option = this.options[hashed];\n      if (option != undefined) {\n        if (option.$div) {\n          return option.$div;\n        }\n        if (create) {\n          return this._render('option', option);\n        }\n      }\n      return null;\n    }\n    /**\n     * Returns the dom element of the next or previous dom element of the same type\n     * Note: adjacent options may not be adjacent DOM elements (optgroups)\n     *\n     */\n\n    getAdjacent(option, direction, type = 'option') {\n      var self = this,\n        all;\n      if (!option) {\n        return null;\n      }\n      if (type == 'item') {\n        all = self.controlChildren();\n      } else {\n        all = self.dropdown_content.querySelectorAll('[data-selectable]');\n      }\n      for (let i = 0; i < all.length; i++) {\n        if (all[i] != option) {\n          continue;\n        }\n        if (direction > 0) {\n          return all[i + 1];\n        }\n        return all[i - 1];\n      }\n      return null;\n    }\n    /**\n     * Returns the dom element of the item\n     * matching the given value.\n     *\n     */\n\n    getItem(item) {\n      if (typeof item == 'object') {\n        return item;\n      }\n      var value = hash_key(item);\n      return value !== null ? this.control.querySelector(`[data-value=\"${addSlashes(value)}\"]`) : null;\n    }\n    /**\n     * \"Selects\" multiple items at once. Adds them to the list\n     * at the current caret position.\n     *\n     */\n\n    addItems(values, silent) {\n      var self = this;\n      var items = Array.isArray(values) ? values : [values];\n      items = items.filter(x => self.items.indexOf(x) === -1);\n      const last_item = items[items.length - 1];\n      items.forEach(item => {\n        self.isPending = item !== last_item;\n        self.addItem(item, silent);\n      });\n    }\n    /**\n     * \"Selects\" an item. Adds it to the list\n     * at the current caret position.\n     *\n     */\n\n    addItem(value, silent) {\n      var events = silent ? [] : ['change', 'dropdown_close'];\n      debounce_events(this, events, () => {\n        var item, wasFull;\n        const self = this;\n        const inputMode = self.settings.mode;\n        const hashed = hash_key(value);\n        if (hashed && self.items.indexOf(hashed) !== -1) {\n          if (inputMode === 'single') {\n            self.close();\n          }\n          if (inputMode === 'single' || !self.settings.duplicates) {\n            return;\n          }\n        }\n        if (hashed === null || !self.options.hasOwnProperty(hashed)) return;\n        if (inputMode === 'single') self.clear(silent);\n        if (inputMode === 'multi' && self.isFull()) return;\n        item = self._render('item', self.options[hashed]);\n        if (self.control.contains(item)) {\n          // duplicates\n          item = item.cloneNode(true);\n        }\n        wasFull = self.isFull();\n        self.items.splice(self.caretPos, 0, hashed);\n        self.insertAtCaret(item);\n        if (self.isSetup) {\n          // update menu / remove the option (if this is not one item being added as part of series)\n          if (!self.isPending && self.settings.hideSelected) {\n            let option = self.getOption(hashed);\n            let next = self.getAdjacent(option, 1);\n            if (next) {\n              self.setActiveOption(next);\n            }\n          } // refreshOptions after setActiveOption(),\n          // otherwise setActiveOption() will be called by refreshOptions() with the wrong value\n\n          if (!self.isPending && !self.settings.closeAfterSelect) {\n            self.refreshOptions(self.isFocused && inputMode !== 'single');\n          } // hide the menu if the maximum number of items have been selected or no options are left\n\n          if (self.settings.closeAfterSelect != false && self.isFull()) {\n            self.close();\n          } else if (!self.isPending) {\n            self.positionDropdown();\n          }\n          self.trigger('item_add', hashed, item);\n          if (!self.isPending) {\n            self.updateOriginalInput({\n              silent: silent\n            });\n          }\n        }\n        if (!self.isPending || !wasFull && self.isFull()) {\n          self.inputState();\n          self.refreshState();\n        }\n      });\n    }\n    /**\n     * Removes the selected item matching\n     * the provided value.\n     *\n     */\n\n    removeItem(item = null, silent) {\n      const self = this;\n      item = self.getItem(item);\n      if (!item) return;\n      var i, idx;\n      const value = item.dataset.value;\n      i = nodeIndex(item);\n      item.remove();\n      if (item.classList.contains('active')) {\n        idx = self.activeItems.indexOf(item);\n        self.activeItems.splice(idx, 1);\n        removeClasses(item, 'active');\n      }\n      self.items.splice(i, 1);\n      self.lastQuery = null;\n      if (!self.settings.persist && self.userOptions.hasOwnProperty(value)) {\n        self.removeOption(value, silent);\n      }\n      if (i < self.caretPos) {\n        self.setCaret(self.caretPos - 1);\n      }\n      self.updateOriginalInput({\n        silent: silent\n      });\n      self.refreshState();\n      self.positionDropdown();\n      self.trigger('item_remove', value, item);\n    }\n    /**\n     * Invokes the `create` method provided in the\n     * TomSelect options that should provide the data\n     * for the new item, given the user input.\n     *\n     * Once this completes, it will be added\n     * to the item list.\n     *\n     */\n\n    createItem(input = null, callback = () => {}) {\n      // triggerDropdown parameter @deprecated 2.1.1\n      if (arguments.length === 3) {\n        callback = arguments[2];\n      }\n      if (typeof callback != 'function') {\n        callback = () => {};\n      }\n      var self = this;\n      var caret = self.caretPos;\n      var output;\n      input = input || self.inputValue();\n      if (!self.canCreate(input)) {\n        callback();\n        return false;\n      }\n      self.lock();\n      var created = false;\n      var create = data => {\n        self.unlock();\n        if (!data || typeof data !== 'object') return callback();\n        var value = hash_key(data[self.settings.valueField]);\n        if (typeof value !== 'string') {\n          return callback();\n        }\n        self.setTextboxValue();\n        self.addOption(data, true);\n        self.setCaret(caret);\n        self.addItem(value);\n        callback(data);\n        created = true;\n      };\n      if (typeof self.settings.create === 'function') {\n        output = self.settings.create.call(this, input, create);\n      } else {\n        output = {\n          [self.settings.labelField]: input,\n          [self.settings.valueField]: input\n        };\n      }\n      if (!created) {\n        create(output);\n      }\n      return true;\n    }\n    /**\n     * Re-renders the selected item lists.\n     */\n\n    refreshItems() {\n      var self = this;\n      self.lastQuery = null;\n      if (self.isSetup) {\n        self.addItems(self.items);\n      }\n      self.updateOriginalInput();\n      self.refreshState();\n    }\n    /**\n     * Updates all state-dependent attributes\n     * and CSS classes.\n     */\n\n    refreshState() {\n      const self = this;\n      self.refreshValidityState();\n      const isFull = self.isFull();\n      const isLocked = self.isLocked;\n      self.wrapper.classList.toggle('rtl', self.rtl);\n      const wrap_classList = self.wrapper.classList;\n      wrap_classList.toggle('focus', self.isFocused);\n      wrap_classList.toggle('disabled', self.isDisabled);\n      wrap_classList.toggle('required', self.isRequired);\n      wrap_classList.toggle('invalid', !self.isValid);\n      wrap_classList.toggle('locked', isLocked);\n      wrap_classList.toggle('full', isFull);\n      wrap_classList.toggle('input-active', self.isFocused && !self.isInputHidden);\n      wrap_classList.toggle('dropdown-active', self.isOpen);\n      wrap_classList.toggle('has-options', isEmptyObject(self.options));\n      wrap_classList.toggle('has-items', self.items.length > 0);\n    }\n    /**\n     * Update the `required` attribute of both input and control input.\n     *\n     * The `required` property needs to be activated on the control input\n     * for the error to be displayed at the right place. `required` also\n     * needs to be temporarily deactivated on the input since the input is\n     * hidden and can't show errors.\n     */\n\n    refreshValidityState() {\n      var self = this;\n      if (!self.input.validity) {\n        return;\n      }\n      self.isValid = self.input.validity.valid;\n      self.isInvalid = !self.isValid;\n    }\n    /**\n     * Determines whether or not more items can be added\n     * to the control without exceeding the user-defined maximum.\n     *\n     * @returns {boolean}\n     */\n\n    isFull() {\n      return this.settings.maxItems !== null && this.items.length >= this.settings.maxItems;\n    }\n    /**\n     * Refreshes the original <select> or <input>\n     * element to reflect the current state.\n     *\n     */\n\n    updateOriginalInput(opts = {}) {\n      const self = this;\n      var option, label;\n      const empty_option = self.input.querySelector('option[value=\"\"]');\n      if (self.is_select_tag) {\n        const selected = [];\n        const has_selected = self.input.querySelectorAll('option:checked').length;\n        function AddSelected(option_el, value, label) {\n          if (!option_el) {\n            option_el = getDom('<option value=\"' + escape_html(value) + '\">' + escape_html(label) + '</option>');\n          } // don't move empty option from top of list\n          // fixes bug in firefox https://bugzilla.mozilla.org/show_bug.cgi?id=1725293\n\n          if (option_el != empty_option) {\n            self.input.append(option_el);\n          }\n          selected.push(option_el); // marking empty option as selected can break validation\n          // fixes https://github.com/orchidjs/tom-select/issues/303\n\n          if (option_el != empty_option || has_selected > 0) {\n            option_el.selected = true;\n          }\n          return option_el;\n        } // unselect all selected options\n\n        self.input.querySelectorAll('option:checked').forEach(option_el => {\n          option_el.selected = false;\n        }); // nothing selected?\n\n        if (self.items.length == 0 && self.settings.mode == 'single') {\n          AddSelected(empty_option, \"\", \"\"); // order selected <option> tags for values in self.items\n        } else {\n          self.items.forEach(value => {\n            option = self.options[value];\n            label = option[self.settings.labelField] || '';\n            if (selected.includes(option.$option)) {\n              const reuse_opt = self.input.querySelector(`option[value=\"${addSlashes(value)}\"]:not(:checked)`);\n              AddSelected(reuse_opt, value, label);\n            } else {\n              option.$option = AddSelected(option.$option, value, label);\n            }\n          });\n        }\n      } else {\n        self.input.value = self.getValue();\n      }\n      if (self.isSetup) {\n        if (!opts.silent) {\n          self.trigger('change', self.getValue());\n        }\n      }\n    }\n    /**\n     * Shows the autocomplete dropdown containing\n     * the available options.\n     */\n\n    open() {\n      var self = this;\n      if (self.isLocked || self.isOpen || self.settings.mode === 'multi' && self.isFull()) return;\n      self.isOpen = true;\n      setAttr(self.focus_node, {\n        'aria-expanded': 'true'\n      });\n      self.refreshState();\n      applyCSS(self.dropdown, {\n        visibility: 'hidden',\n        display: 'block'\n      });\n      self.positionDropdown();\n      applyCSS(self.dropdown, {\n        visibility: 'visible',\n        display: 'block'\n      });\n      self.focus();\n      self.trigger('dropdown_open', self.dropdown);\n    }\n    /**\n     * Closes the autocomplete dropdown menu.\n     */\n\n    close(setTextboxValue = true) {\n      var self = this;\n      var trigger = self.isOpen;\n      if (setTextboxValue) {\n        // before blur() to prevent form onchange event\n        self.setTextboxValue();\n        if (self.settings.mode === 'single' && self.items.length) {\n          self.hideInput();\n        }\n      }\n      self.isOpen = false;\n      setAttr(self.focus_node, {\n        'aria-expanded': 'false'\n      });\n      applyCSS(self.dropdown, {\n        display: 'none'\n      });\n      if (self.settings.hideSelected) {\n        self.clearActiveOption();\n      }\n      self.refreshState();\n      if (trigger) self.trigger('dropdown_close', self.dropdown);\n    }\n    /**\n     * Calculates and applies the appropriate\n     * position of the dropdown if dropdownParent = 'body'.\n     * Otherwise, position is determined by css\n     */\n\n    positionDropdown() {\n      if (this.settings.dropdownParent !== 'body') {\n        return;\n      }\n      var context = this.control;\n      var rect = context.getBoundingClientRect();\n      var top = context.offsetHeight + rect.top + window.scrollY;\n      var left = rect.left + window.scrollX;\n      applyCSS(this.dropdown, {\n        width: rect.width + 'px',\n        top: top + 'px',\n        left: left + 'px'\n      });\n    }\n    /**\n     * Resets / clears all selected items\n     * from the control.\n     *\n     */\n\n    clear(silent) {\n      var self = this;\n      if (!self.items.length) return;\n      var items = self.controlChildren();\n      iterate$1(items, item => {\n        self.removeItem(item, true);\n      });\n      self.showInput();\n      if (!silent) self.updateOriginalInput();\n      self.trigger('clear');\n    }\n    /**\n     * A helper method for inserting an element\n     * at the current caret position.\n     *\n     */\n\n    insertAtCaret(el) {\n      const self = this;\n      const caret = self.caretPos;\n      const target = self.control;\n      target.insertBefore(el, target.children[caret] || null);\n      self.setCaret(caret + 1);\n    }\n    /**\n     * Removes the current selected item(s).\n     *\n     */\n\n    deleteSelection(e) {\n      var direction, selection, caret, tail;\n      var self = this;\n      direction = e && e.keyCode === KEY_BACKSPACE ? -1 : 1;\n      selection = getSelection(self.control_input); // determine items that will be removed\n\n      const rm_items = [];\n      if (self.activeItems.length) {\n        tail = getTail(self.activeItems, direction);\n        caret = nodeIndex(tail);\n        if (direction > 0) {\n          caret++;\n        }\n        iterate$1(self.activeItems, item => rm_items.push(item));\n      } else if ((self.isFocused || self.settings.mode === 'single') && self.items.length) {\n        const items = self.controlChildren();\n        let rm_item;\n        if (direction < 0 && selection.start === 0 && selection.length === 0) {\n          rm_item = items[self.caretPos - 1];\n        } else if (direction > 0 && selection.start === self.inputValue().length) {\n          rm_item = items[self.caretPos];\n        }\n        if (rm_item !== undefined) {\n          rm_items.push(rm_item);\n        }\n      }\n      if (!self.shouldDelete(rm_items, e)) {\n        return false;\n      }\n      preventDefault(e, true); // perform removal\n\n      if (typeof caret !== 'undefined') {\n        self.setCaret(caret);\n      }\n      while (rm_items.length) {\n        self.removeItem(rm_items.pop());\n      }\n      self.showInput();\n      self.positionDropdown();\n      self.refreshOptions(false);\n      return true;\n    }\n    /**\n     * Return true if the items should be deleted\n     */\n\n    shouldDelete(items, evt) {\n      const values = items.map(item => item.dataset.value); // allow the callback to abort\n\n      if (!values.length || typeof this.settings.onDelete === 'function' && this.settings.onDelete(values, evt) === false) {\n        return false;\n      }\n      return true;\n    }\n    /**\n     * Selects the previous / next item (depending on the `direction` argument).\n     *\n     * > 0 - right\n     * < 0 - left\n     *\n     */\n\n    advanceSelection(direction, e) {\n      var last_active,\n        adjacent,\n        self = this;\n      if (self.rtl) direction *= -1;\n      if (self.inputValue().length) return; // add or remove to active items\n\n      if (isKeyDown(KEY_SHORTCUT, e) || isKeyDown('shiftKey', e)) {\n        last_active = self.getLastActive(direction);\n        if (last_active) {\n          if (!last_active.classList.contains('active')) {\n            adjacent = last_active;\n          } else {\n            adjacent = self.getAdjacent(last_active, direction, 'item');\n          } // if no active item, get items adjacent to the control input\n        } else if (direction > 0) {\n          adjacent = self.control_input.nextElementSibling;\n        } else {\n          adjacent = self.control_input.previousElementSibling;\n        }\n        if (adjacent) {\n          if (adjacent.classList.contains('active')) {\n            self.removeActiveItem(last_active);\n          }\n          self.setActiveItemClass(adjacent); // mark as last_active !! after removeActiveItem() on last_active\n        } // move caret to the left or right\n      } else {\n        self.moveCaret(direction);\n      }\n    }\n    moveCaret(direction) {}\n    /**\n     * Get the last active item\n     *\n     */\n\n    getLastActive(direction) {\n      let last_active = this.control.querySelector('.last-active');\n      if (last_active) {\n        return last_active;\n      }\n      var result = this.control.querySelectorAll('.active');\n      if (result) {\n        return getTail(result, direction);\n      }\n    }\n    /**\n     * Moves the caret to the specified index.\n     *\n     * The input must be moved by leaving it in place and moving the\n     * siblings, due to the fact that focus cannot be restored once lost\n     * on mobile webkit devices\n     *\n     */\n\n    setCaret(new_pos) {\n      this.caretPos = this.items.length;\n    }\n    /**\n     * Return list of item dom elements\n     *\n     */\n\n    controlChildren() {\n      return Array.from(this.control.querySelectorAll('[data-ts-item]'));\n    }\n    /**\n     * Disables user input on the control. Used while\n     * items are being asynchronously created.\n     */\n\n    lock() {\n      this.isLocked = true;\n      this.refreshState();\n    }\n    /**\n     * Re-enables user input on the control.\n     */\n\n    unlock() {\n      this.isLocked = false;\n      this.refreshState();\n    }\n    /**\n     * Disables user input on the control completely.\n     * While disabled, it cannot receive focus.\n     */\n\n    disable() {\n      var self = this;\n      self.input.disabled = true;\n      self.control_input.disabled = true;\n      self.focus_node.tabIndex = -1;\n      self.isDisabled = true;\n      this.close();\n      self.lock();\n    }\n    /**\n     * Enables the control so that it can respond\n     * to focus and user input.\n     */\n\n    enable() {\n      var self = this;\n      self.input.disabled = false;\n      self.control_input.disabled = false;\n      self.focus_node.tabIndex = self.tabIndex;\n      self.isDisabled = false;\n      self.unlock();\n    }\n    /**\n     * Completely destroys the control and\n     * unbinds all event listeners so that it can\n     * be garbage collected.\n     */\n\n    destroy() {\n      var self = this;\n      var revertSettings = self.revertSettings;\n      self.trigger('destroy');\n      self.off();\n      self.wrapper.remove();\n      self.dropdown.remove();\n      self.input.innerHTML = revertSettings.innerHTML;\n      self.input.tabIndex = revertSettings.tabIndex;\n      removeClasses(self.input, 'tomselected', 'ts-hidden-accessible');\n      self._destroy();\n      delete self.input.tomselect;\n    }\n    /**\n     * A helper method for rendering \"item\" and\n     * \"option\" templates, given the data.\n     *\n     */\n\n    render(templateName, data) {\n      var id, html;\n      const self = this;\n      if (typeof this.settings.render[templateName] !== 'function') {\n        return null;\n      } // render markup\n\n      html = self.settings.render[templateName].call(this, data, escape_html);\n      if (!html) {\n        return null;\n      }\n      html = getDom(html); // add mandatory attributes\n\n      if (templateName === 'option' || templateName === 'option_create') {\n        if (data[self.settings.disabledField]) {\n          setAttr(html, {\n            'aria-disabled': 'true'\n          });\n        } else {\n          setAttr(html, {\n            'data-selectable': ''\n          });\n        }\n      } else if (templateName === 'optgroup') {\n        id = data.group[self.settings.optgroupValueField];\n        setAttr(html, {\n          'data-group': id\n        });\n        if (data.group[self.settings.disabledField]) {\n          setAttr(html, {\n            'data-disabled': ''\n          });\n        }\n      }\n      if (templateName === 'option' || templateName === 'item') {\n        const value = get_hash(data[self.settings.valueField]);\n        setAttr(html, {\n          'data-value': value\n        }); // make sure we have some classes if a template is overwritten\n\n        if (templateName === 'item') {\n          addClasses(html, self.settings.itemClass);\n          setAttr(html, {\n            'data-ts-item': ''\n          });\n        } else {\n          addClasses(html, self.settings.optionClass);\n          setAttr(html, {\n            role: 'option',\n            id: data.$id\n          }); // update cache\n\n          data.$div = html;\n          self.options[value] = data;\n        }\n      }\n      return html;\n    }\n    /**\n     * Type guarded rendering\n     *\n     */\n\n    _render(templateName, data) {\n      const html = this.render(templateName, data);\n      if (html == null) {\n        throw 'HTMLElement expected';\n      }\n      return html;\n    }\n    /**\n     * Clears the render cache for a template. If\n     * no template is given, clears all render\n     * caches.\n     *\n     */\n\n    clearCache() {\n      iterate$1(this.options, option => {\n        if (option.$div) {\n          option.$div.remove();\n          delete option.$div;\n        }\n      });\n    }\n    /**\n     * Removes a value from item and option caches\n     *\n     */\n\n    uncacheValue(value) {\n      const option_el = this.getOption(value);\n      if (option_el) option_el.remove();\n    }\n    /**\n     * Determines whether or not to display the\n     * create item prompt, given a user input.\n     *\n     */\n\n    canCreate(input) {\n      return this.settings.create && input.length > 0 && this.settings.createFilter.call(this, input);\n    }\n    /**\n     * Wraps this.`method` so that `new_fn` can be invoked 'before', 'after', or 'instead' of the original method\n     *\n     * this.hook('instead','onKeyDown',function( arg1, arg2 ...){\n     *\n     * });\n     */\n\n    hook(when, method, new_fn) {\n      var self = this;\n      var orig_method = self[method];\n      self[method] = function () {\n        var result, result_new;\n        if (when === 'after') {\n          result = orig_method.apply(self, arguments);\n        }\n        result_new = new_fn.apply(self, arguments);\n        if (when === 'instead') {\n          return result_new;\n        }\n        if (when === 'before') {\n          result = orig_method.apply(self, arguments);\n        }\n        return result;\n      };\n    }\n  }\n\n  /**\n   * Plugin: \"change_listener\" (Tom Select)\n   * Copyright (c) contributors\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n   * file except in compliance with the License. You may obtain a copy of the License at:\n   * http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software distributed under\n   * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n   * ANY KIND, either express or implied. See the License for the specific language\n   * governing permissions and limitations under the License.\n   *\n   */\n  function change_listener() {\n    addEvent(this.input, 'change', () => {\n      this.sync();\n    });\n  }\n\n  /**\n   * Plugin: \"restore_on_backspace\" (Tom Select)\n   * Copyright (c) contributors\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n   * file except in compliance with the License. You may obtain a copy of the License at:\n   * http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software distributed under\n   * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n   * ANY KIND, either express or implied. See the License for the specific language\n   * governing permissions and limitations under the License.\n   *\n   */\n  function checkbox_options() {\n    var self = this;\n    var orig_onOptionSelect = self.onOptionSelect;\n    self.settings.hideSelected = false; // update the checkbox for an option\n\n    var UpdateCheckbox = function UpdateCheckbox(option) {\n      setTimeout(() => {\n        var checkbox = option.querySelector('input');\n        if (checkbox instanceof HTMLInputElement) {\n          if (option.classList.contains('selected')) {\n            checkbox.checked = true;\n          } else {\n            checkbox.checked = false;\n          }\n        }\n      }, 1);\n    }; // add checkbox to option template\n\n    self.hook('after', 'setupTemplates', () => {\n      var orig_render_option = self.settings.render.option;\n      self.settings.render.option = (data, escape_html) => {\n        var rendered = getDom(orig_render_option.call(self, data, escape_html));\n        var checkbox = document.createElement('input');\n        checkbox.addEventListener('click', function (evt) {\n          preventDefault(evt);\n        });\n        checkbox.type = 'checkbox';\n        const hashed = hash_key(data[self.settings.valueField]);\n        if (hashed && self.items.indexOf(hashed) > -1) {\n          checkbox.checked = true;\n        }\n        rendered.prepend(checkbox);\n        return rendered;\n      };\n    }); // uncheck when item removed\n\n    self.on('item_remove', value => {\n      var option = self.getOption(value);\n      if (option) {\n        // if dropdown hasn't been opened yet, the option won't exist\n        option.classList.remove('selected'); // selected class won't be removed yet\n\n        UpdateCheckbox(option);\n      }\n    }); // check when item added\n\n    self.on('item_add', value => {\n      var option = self.getOption(value);\n      if (option) {\n        // if dropdown hasn't been opened yet, the option won't exist\n        UpdateCheckbox(option);\n      }\n    }); // remove items when selected option is clicked\n\n    self.hook('instead', 'onOptionSelect', (evt, option) => {\n      if (option.classList.contains('selected')) {\n        option.classList.remove('selected');\n        self.removeItem(option.dataset.value);\n        self.refreshOptions();\n        preventDefault(evt, true);\n        return;\n      }\n      orig_onOptionSelect.call(self, evt, option);\n      UpdateCheckbox(option);\n    });\n  }\n\n  /**\n   * Plugin: \"dropdown_header\" (Tom Select)\n   * Copyright (c) contributors\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n   * file except in compliance with the License. You may obtain a copy of the License at:\n   * http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software distributed under\n   * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n   * ANY KIND, either express or implied. See the License for the specific language\n   * governing permissions and limitations under the License.\n   *\n   */\n  function clear_button(userOptions) {\n    const self = this;\n    const options = Object.assign({\n      className: 'clear-button',\n      title: 'Clear All',\n      html: data => {\n        return `<div class=\"${data.className}\" title=\"${data.title}\">&#10799;</div>`;\n      }\n    }, userOptions);\n    self.on('initialize', () => {\n      var button = getDom(options.html(options));\n      button.addEventListener('click', evt => {\n        if (self.isDisabled) {\n          return;\n        }\n        self.clear();\n        if (self.settings.mode === 'single' && self.settings.allowEmptyOption) {\n          self.addItem('');\n        }\n        evt.preventDefault();\n        evt.stopPropagation();\n      });\n      self.control.appendChild(button);\n    });\n  }\n\n  /**\n   * Plugin: \"drag_drop\" (Tom Select)\n   * Copyright (c) contributors\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n   * file except in compliance with the License. You may obtain a copy of the License at:\n   * http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software distributed under\n   * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n   * ANY KIND, either express or implied. See the License for the specific language\n   * governing permissions and limitations under the License.\n   *\n   */\n  function drag_drop() {\n    var self = this;\n    if (!$.fn.sortable) throw new Error('The \"drag_drop\" plugin requires jQuery UI \"sortable\".');\n    if (self.settings.mode !== 'multi') return;\n    var orig_lock = self.lock;\n    var orig_unlock = self.unlock;\n    self.hook('instead', 'lock', () => {\n      var sortable = $(self.control).data('sortable');\n      if (sortable) sortable.disable();\n      return orig_lock.call(self);\n    });\n    self.hook('instead', 'unlock', () => {\n      var sortable = $(self.control).data('sortable');\n      if (sortable) sortable.enable();\n      return orig_unlock.call(self);\n    });\n    self.on('initialize', () => {\n      var $control = $(self.control).sortable({\n        items: '[data-value]',\n        forcePlaceholderSize: true,\n        disabled: self.isLocked,\n        start: (e, ui) => {\n          ui.placeholder.css('width', ui.helper.css('width'));\n          $control.css({\n            overflow: 'visible'\n          });\n        },\n        stop: () => {\n          $control.css({\n            overflow: 'hidden'\n          });\n          var values = [];\n          $control.children('[data-value]').each(function () {\n            if (this.dataset.value) values.push(this.dataset.value);\n          });\n          self.setValue(values);\n        }\n      });\n    });\n  }\n\n  /**\n   * Plugin: \"dropdown_header\" (Tom Select)\n   * Copyright (c) contributors\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n   * file except in compliance with the License. You may obtain a copy of the License at:\n   * http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software distributed under\n   * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n   * ANY KIND, either express or implied. See the License for the specific language\n   * governing permissions and limitations under the License.\n   *\n   */\n  function dropdown_header(userOptions) {\n    const self = this;\n    const options = Object.assign({\n      title: 'Untitled',\n      headerClass: 'dropdown-header',\n      titleRowClass: 'dropdown-header-title',\n      labelClass: 'dropdown-header-label',\n      closeClass: 'dropdown-header-close',\n      html: data => {\n        return '<div class=\"' + data.headerClass + '\">' + '<div class=\"' + data.titleRowClass + '\">' + '<span class=\"' + data.labelClass + '\">' + data.title + '</span>' + '<a class=\"' + data.closeClass + '\">&times;</a>' + '</div>' + '</div>';\n      }\n    }, userOptions);\n    self.on('initialize', () => {\n      var header = getDom(options.html(options));\n      var close_link = header.querySelector('.' + options.closeClass);\n      if (close_link) {\n        close_link.addEventListener('click', evt => {\n          preventDefault(evt, true);\n          self.close();\n        });\n      }\n      self.dropdown.insertBefore(header, self.dropdown.firstChild);\n    });\n  }\n\n  /**\n   * Plugin: \"dropdown_input\" (Tom Select)\n   * Copyright (c) contributors\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n   * file except in compliance with the License. You may obtain a copy of the License at:\n   * http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software distributed under\n   * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n   * ANY KIND, either express or implied. See the License for the specific language\n   * governing permissions and limitations under the License.\n   *\n   */\n  function caret_position() {\n    var self = this;\n    /**\n     * Moves the caret to the specified index.\n     *\n     * The input must be moved by leaving it in place and moving the\n     * siblings, due to the fact that focus cannot be restored once lost\n     * on mobile webkit devices\n     *\n     */\n\n    self.hook('instead', 'setCaret', new_pos => {\n      if (self.settings.mode === 'single' || !self.control.contains(self.control_input)) {\n        new_pos = self.items.length;\n      } else {\n        new_pos = Math.max(0, Math.min(self.items.length, new_pos));\n        if (new_pos != self.caretPos && !self.isPending) {\n          self.controlChildren().forEach((child, j) => {\n            if (j < new_pos) {\n              self.control_input.insertAdjacentElement('beforebegin', child);\n            } else {\n              self.control.appendChild(child);\n            }\n          });\n        }\n      }\n      self.caretPos = new_pos;\n    });\n    self.hook('instead', 'moveCaret', direction => {\n      if (!self.isFocused) return; // move caret before or after selected items\n\n      const last_active = self.getLastActive(direction);\n      if (last_active) {\n        const idx = nodeIndex(last_active);\n        self.setCaret(direction > 0 ? idx + 1 : idx);\n        self.setActiveItem();\n        removeClasses(last_active, 'last-active'); // move caret left or right of current position\n      } else {\n        self.setCaret(self.caretPos + direction);\n      }\n    });\n  }\n\n  /**\n   * Plugin: \"dropdown_input\" (Tom Select)\n   * Copyright (c) contributors\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n   * file except in compliance with the License. You may obtain a copy of the License at:\n   * http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software distributed under\n   * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n   * ANY KIND, either express or implied. See the License for the specific language\n   * governing permissions and limitations under the License.\n   *\n   */\n  function dropdown_input() {\n    const self = this;\n    self.settings.shouldOpen = true; // make sure the input is shown even if there are no options to display in the dropdown\n\n    self.hook('before', 'setup', () => {\n      self.focus_node = self.control;\n      addClasses(self.control_input, 'dropdown-input');\n      const div = getDom('<div class=\"dropdown-input-wrap\">');\n      div.append(self.control_input);\n      self.dropdown.insertBefore(div, self.dropdown.firstChild); // set a placeholder in the select control\n\n      const placeholder = getDom('<input class=\"items-placeholder\" tabindex=\"-1\" />');\n      placeholder.placeholder = self.settings.placeholder || '';\n      self.control.append(placeholder);\n    });\n    self.on('initialize', () => {\n      // set tabIndex on control to -1, otherwise [shift+tab] will put focus right back on control_input\n      self.control_input.addEventListener('keydown', evt => {\n        //addEvent(self.control_input,'keydown' as const,(evt:KeyboardEvent) =>{\n        switch (evt.keyCode) {\n          case KEY_ESC:\n            if (self.isOpen) {\n              preventDefault(evt, true);\n              self.close();\n            }\n            self.clearActiveItems();\n            return;\n          case KEY_TAB:\n            self.focus_node.tabIndex = -1;\n            break;\n        }\n        return self.onKeyDown.call(self, evt);\n      });\n      self.on('blur', () => {\n        self.focus_node.tabIndex = self.isDisabled ? -1 : self.tabIndex;\n      }); // give the control_input focus when the dropdown is open\n\n      self.on('dropdown_open', () => {\n        self.control_input.focus();\n      }); // prevent onBlur from closing when focus is on the control_input\n\n      const orig_onBlur = self.onBlur;\n      self.hook('instead', 'onBlur', evt => {\n        if (evt && evt.relatedTarget == self.control_input) return;\n        return orig_onBlur.call(self);\n      });\n      addEvent(self.control_input, 'blur', () => self.onBlur()); // return focus to control to allow further keyboard input\n\n      self.hook('before', 'close', () => {\n        if (!self.isOpen) return;\n        self.focus_node.focus({\n          preventScroll: true\n        });\n      });\n    });\n  }\n\n  /**\n   * Plugin: \"input_autogrow\" (Tom Select)\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n   * file except in compliance with the License. You may obtain a copy of the License at:\n   * http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software distributed under\n   * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n   * ANY KIND, either express or implied. See the License for the specific language\n   * governing permissions and limitations under the License.\n   *\n   */\n  function input_autogrow() {\n    var self = this;\n    self.on('initialize', () => {\n      var test_input = document.createElement('span');\n      var control = self.control_input;\n      test_input.style.cssText = 'position:absolute; top:-99999px; left:-99999px; width:auto; padding:0; white-space:pre; ';\n      self.wrapper.appendChild(test_input);\n      var transfer_styles = ['letterSpacing', 'fontSize', 'fontFamily', 'fontWeight', 'textTransform'];\n      for (const style_name of transfer_styles) {\n        // @ts-ignore TS7015 https://stackoverflow.com/a/50506154/697576\n        test_input.style[style_name] = control.style[style_name];\n      }\n      /**\n       * Set the control width\n       *\n       */\n\n      var resize = () => {\n        test_input.textContent = control.value;\n        control.style.width = test_input.clientWidth + 'px';\n      };\n      resize();\n      self.on('update item_add item_remove', resize);\n      addEvent(control, 'input', resize);\n      addEvent(control, 'keyup', resize);\n      addEvent(control, 'blur', resize);\n      addEvent(control, 'update', resize);\n    });\n  }\n\n  /**\n   * Plugin: \"input_autogrow\" (Tom Select)\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n   * file except in compliance with the License. You may obtain a copy of the License at:\n   * http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software distributed under\n   * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n   * ANY KIND, either express or implied. See the License for the specific language\n   * governing permissions and limitations under the License.\n   *\n   */\n  function no_backspace_delete() {\n    var self = this;\n    var orig_deleteSelection = self.deleteSelection;\n    this.hook('instead', 'deleteSelection', evt => {\n      if (self.activeItems.length) {\n        return orig_deleteSelection.call(self, evt);\n      }\n      return false;\n    });\n  }\n\n  /**\n   * Plugin: \"no_active_items\" (Tom Select)\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n   * file except in compliance with the License. You may obtain a copy of the License at:\n   * http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software distributed under\n   * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n   * ANY KIND, either express or implied. See the License for the specific language\n   * governing permissions and limitations under the License.\n   *\n   */\n  function no_active_items() {\n    this.hook('instead', 'setActiveItem', () => {});\n    this.hook('instead', 'selectAll', () => {});\n  }\n\n  /**\n   * Plugin: \"optgroup_columns\" (Tom Select.js)\n   * Copyright (c) contributors\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n   * file except in compliance with the License. You may obtain a copy of the License at:\n   * http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software distributed under\n   * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n   * ANY KIND, either express or implied. See the License for the specific language\n   * governing permissions and limitations under the License.\n   *\n   */\n  function optgroup_columns() {\n    var self = this;\n    var orig_keydown = self.onKeyDown;\n    self.hook('instead', 'onKeyDown', evt => {\n      var index, option, options, optgroup;\n      if (!self.isOpen || !(evt.keyCode === KEY_LEFT || evt.keyCode === KEY_RIGHT)) {\n        return orig_keydown.call(self, evt);\n      }\n      self.ignoreHover = true;\n      optgroup = parentMatch(self.activeOption, '[data-group]');\n      index = nodeIndex(self.activeOption, '[data-selectable]');\n      if (!optgroup) {\n        return;\n      }\n      if (evt.keyCode === KEY_LEFT) {\n        optgroup = optgroup.previousSibling;\n      } else {\n        optgroup = optgroup.nextSibling;\n      }\n      if (!optgroup) {\n        return;\n      }\n      options = optgroup.querySelectorAll('[data-selectable]');\n      option = options[Math.min(options.length - 1, index)];\n      if (option) {\n        self.setActiveOption(option);\n      }\n    });\n  }\n\n  /**\n   * Plugin: \"remove_button\" (Tom Select)\n   * Copyright (c) contributors\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n   * file except in compliance with the License. You may obtain a copy of the License at:\n   * http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software distributed under\n   * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n   * ANY KIND, either express or implied. See the License for the specific language\n   * governing permissions and limitations under the License.\n   *\n   */\n  function remove_button(userOptions) {\n    const options = Object.assign({\n      label: '&times;',\n      title: 'Remove',\n      className: 'remove',\n      append: true\n    }, userOptions); //options.className = 'remove-single';\n\n    var self = this; // override the render method to add remove button to each item\n\n    if (!options.append) {\n      return;\n    }\n    var html = '<a href=\"javascript:void(0)\" class=\"' + options.className + '\" tabindex=\"-1\" title=\"' + escape_html(options.title) + '\">' + options.label + '</a>';\n    self.hook('after', 'setupTemplates', () => {\n      var orig_render_item = self.settings.render.item;\n      self.settings.render.item = (data, escape) => {\n        var item = getDom(orig_render_item.call(self, data, escape));\n        var close_button = getDom(html);\n        item.appendChild(close_button);\n        addEvent(close_button, 'mousedown', evt => {\n          preventDefault(evt, true);\n        });\n        addEvent(close_button, 'click', evt => {\n          // propagating will trigger the dropdown to show for single mode\n          preventDefault(evt, true);\n          if (self.isLocked) return;\n          if (!self.shouldDelete([item], evt)) return;\n          self.removeItem(item);\n          self.refreshOptions(false);\n          self.inputState();\n        });\n        return item;\n      };\n    });\n  }\n\n  /**\n   * Plugin: \"restore_on_backspace\" (Tom Select)\n   * Copyright (c) contributors\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n   * file except in compliance with the License. You may obtain a copy of the License at:\n   * http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software distributed under\n   * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n   * ANY KIND, either express or implied. See the License for the specific language\n   * governing permissions and limitations under the License.\n   *\n   */\n  function restore_on_backspace(userOptions) {\n    const self = this;\n    const options = Object.assign({\n      text: option => {\n        return option[self.settings.labelField];\n      }\n    }, userOptions);\n    self.on('item_remove', function (value) {\n      if (!self.isFocused) {\n        return;\n      }\n      if (self.control_input.value.trim() === '') {\n        var option = self.options[value];\n        if (option) {\n          self.setTextboxValue(options.text.call(self, option));\n        }\n      }\n    });\n  }\n\n  /**\n   * Plugin: \"restore_on_backspace\" (Tom Select)\n   * Copyright (c) contributors\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n   * file except in compliance with the License. You may obtain a copy of the License at:\n   * http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software distributed under\n   * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n   * ANY KIND, either express or implied. See the License for the specific language\n   * governing permissions and limitations under the License.\n   *\n   */\n  function virtual_scroll() {\n    const self = this;\n    const orig_canLoad = self.canLoad;\n    const orig_clearActiveOption = self.clearActiveOption;\n    const orig_loadCallback = self.loadCallback;\n    var pagination = {};\n    var dropdown_content;\n    var loading_more = false;\n    var load_more_opt;\n    var default_values = [];\n    if (!self.settings.shouldLoadMore) {\n      // return true if additional results should be loaded\n      self.settings.shouldLoadMore = () => {\n        const scroll_percent = dropdown_content.clientHeight / (dropdown_content.scrollHeight - dropdown_content.scrollTop);\n        if (scroll_percent > 0.9) {\n          return true;\n        }\n        if (self.activeOption) {\n          var selectable = self.selectable();\n          var index = Array.from(selectable).indexOf(self.activeOption);\n          if (index >= selectable.length - 2) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    if (!self.settings.firstUrl) {\n      throw 'virtual_scroll plugin requires a firstUrl() method';\n    } // in order for virtual scrolling to work,\n    // options need to be ordered the same way they're returned from the remote data source\n\n    self.settings.sortField = [{\n      field: '$order'\n    }, {\n      field: '$score'\n    }]; // can we load more results for given query?\n\n    const canLoadMore = query => {\n      if (typeof self.settings.maxOptions === 'number' && dropdown_content.children.length >= self.settings.maxOptions) {\n        return false;\n      }\n      if (query in pagination && pagination[query]) {\n        return true;\n      }\n      return false;\n    };\n    const clearFilter = (option, value) => {\n      if (self.items.indexOf(value) >= 0 || default_values.indexOf(value) >= 0) {\n        return true;\n      }\n      return false;\n    }; // set the next url that will be\n\n    self.setNextUrl = (value, next_url) => {\n      pagination[value] = next_url;\n    }; // getUrl() to be used in settings.load()\n\n    self.getUrl = query => {\n      if (query in pagination) {\n        const next_url = pagination[query];\n        pagination[query] = false;\n        return next_url;\n      } // if the user goes back to a previous query\n      // we need to load the first page again\n\n      pagination = {};\n      return self.settings.firstUrl.call(self, query);\n    }; // don't clear the active option (and cause unwanted dropdown scroll)\n    // while loading more results\n\n    self.hook('instead', 'clearActiveOption', () => {\n      if (loading_more) {\n        return;\n      }\n      return orig_clearActiveOption.call(self);\n    }); // override the canLoad method\n\n    self.hook('instead', 'canLoad', query => {\n      // first time the query has been seen\n      if (!(query in pagination)) {\n        return orig_canLoad.call(self, query);\n      }\n      return canLoadMore(query);\n    }); // wrap the load\n\n    self.hook('instead', 'loadCallback', (options, optgroups) => {\n      if (!loading_more) {\n        self.clearOptions(clearFilter);\n      } else if (load_more_opt) {\n        const first_option = options[0];\n        if (first_option !== undefined) {\n          load_more_opt.dataset.value = first_option[self.settings.valueField];\n        }\n      }\n      orig_loadCallback.call(self, options, optgroups);\n      loading_more = false;\n    }); // add templates to dropdown\n    //\tloading_more if we have another url in the queue\n    //\tno_more_results if we don't have another url in the queue\n\n    self.hook('after', 'refreshOptions', () => {\n      const query = self.lastValue;\n      var option;\n      if (canLoadMore(query)) {\n        option = self.render('loading_more', {\n          query: query\n        });\n        if (option) {\n          option.setAttribute('data-selectable', ''); // so that navigating dropdown with [down] keypresses can navigate to this node\n\n          load_more_opt = option;\n        }\n      } else if (query in pagination && !dropdown_content.querySelector('.no-results')) {\n        option = self.render('no_more_results', {\n          query: query\n        });\n      }\n      if (option) {\n        addClasses(option, self.settings.optionClass);\n        dropdown_content.append(option);\n      }\n    }); // add scroll listener and default templates\n\n    self.on('initialize', () => {\n      default_values = Object.keys(self.options);\n      dropdown_content = self.dropdown_content; // default templates\n\n      self.settings.render = Object.assign({}, {\n        loading_more: () => {\n          return `<div class=\"loading-more-results\">Loading more results ... </div>`;\n        },\n        no_more_results: () => {\n          return `<div class=\"no-more-results\">No more results</div>`;\n        }\n      }, self.settings.render); // watch dropdown content scroll position\n\n      dropdown_content.addEventListener('scroll', () => {\n        if (!self.settings.shouldLoadMore.call(self)) {\n          return;\n        } // !important: this will get checked again in load() but we still need to check here otherwise loading_more will be set to true\n\n        if (!canLoadMore(self.lastValue)) {\n          return;\n        } // don't call load() too much\n\n        if (loading_more) return;\n        loading_more = true;\n        self.load.call(self, self.lastValue);\n      });\n    });\n  }\n  TomSelect.define('change_listener', change_listener);\n  TomSelect.define('checkbox_options', checkbox_options);\n  TomSelect.define('clear_button', clear_button);\n  TomSelect.define('drag_drop', drag_drop);\n  TomSelect.define('dropdown_header', dropdown_header);\n  TomSelect.define('caret_position', caret_position);\n  TomSelect.define('dropdown_input', dropdown_input);\n  TomSelect.define('input_autogrow', input_autogrow);\n  TomSelect.define('no_backspace_delete', no_backspace_delete);\n  TomSelect.define('no_active_items', no_active_items);\n  TomSelect.define('optgroup_columns', optgroup_columns);\n  TomSelect.define('remove_button', remove_button);\n  TomSelect.define('restore_on_backspace', restore_on_backspace);\n  TomSelect.define('virtual_scroll', virtual_scroll);\n  return TomSelect;\n});\nvar tomSelect = function (el, opts) {\n  return new TomSelect(el, opts);\n};","map":{"version":3,"names":["global","factory","exports","module","define","amd","globalThis","self","TomSelect","forEvents","events","callback","split","forEach","event","MicroEvent","constructor","_events","on","fct","event_array","push","off","n","arguments","length","undefined","splice","indexOf","trigger","args","apply","MicroPlugin","Interface","plugins","names","settings","requested","loaded","name","fn","initializePlugins","key","queue","Array","isArray","plugin","options","hasOwnProperty","shift","require","loadPlugin","Error","arrayToPattern","chars","filter","Boolean","maxValueLength","join","sequencePattern","array","hasDuplicates","pattern","prev_char_count","prev_pattern","char","i","setToPattern","toArray","Set","size","escape_regex","str","replace","reduce","longest","value","Math","max","unicodeLength","p","from","allSubstrings","input","result","start","substring","suba","subresult","tmp","slice","charAt","unshift","code_points","accent_pat","unicode_map","multi_char_reg","max_char_length","latin_convert","latin_condensed","latin","unicode","convert_pat","RegExp","Object","keys","initialize","_code_points","generateMap","normalize","form","asciifold","_asciifold","toLowerCase","generator","code_point_min","code_point_max","composed","String","fromCharCode","folded","code_point","generateSets","unicode_sets","addMatching","to_add","folded_set","patt","match","add","multi_char","set","sort","a","b","multi_char_patt","mapSequence","strings","min_replacement","chars_replaced","map","substringsToPattern","sub_pat","sequencesToPattern","sequences","all","sequence","seq","len","j","substrs","inSequences","needle_seq","end","needle_parts","parts","part","needle_part","substr","filtered","Sequence","min","last","clone","position","last_piece","JSON","parse","stringify","last_part","pop","last_substr","clone_last_len","getPattern","match_str","overlapping","added_types","has","new_seq","old_seq","getAttr","obj","getAttrNesting","scoreValue","token","weight","score","pos","regex","search","string","propToArray","iterate$1","object","cmp","Sifter","items","diacritics","tokenize","query","respect_word_boundaries","weights","tokens","words","field_regex","word","field_match","field","getScoreFunction","prepareSearch","_getScoreFunction","token_count","fields","field_count","getAttrFn","scoreObject","data","sum","conjunction","getSortFunction","_getSortFunction","implicit_score","sort_flds","sort_empty","bind","get_field","id","s","fld","direction","sort_flds_count","sort_fld","multiplier","optsUser","assign","trim","total","nesting","fn_score","item","_","fn_sort","limit","iterate","getDom","jquery","HTMLElement","isHtmlString","tpl","document","createElement","innerHTML","content","firstChild","querySelector","arg","escapeQuery","triggerEvent","dom_el","event_name","createEvent","initEvent","dispatchEvent","applyCSS","css","style","addClasses","elmts","classes","norm_classes","classesArray","castAsArray","el","cls","classList","removeClasses","remove","_classes","concat","parentMatch","target","selector","wrapper","contains","matches","parentNode","getTail","list","isEmptyObject","nodeIndex","amongst","nodeName","previousElementSibling","setAttr","attrs","val","attr","removeAttribute","setAttribute","replaceNode","existing","replacement","replaceChild","highlight","element","highlightText","node","spannode","className","middlebit","splitText","index","middleclone","cloneNode","appendChild","highlightChildren","nodeType","childNodes","test","tagName","highlightRecursive","removeHighlight","elements","querySelectorAll","prototype","call","parent","KEY_A","KEY_RETURN","KEY_ESC","KEY_LEFT","KEY_UP","KEY_RIGHT","KEY_DOWN","KEY_BACKSPACE","KEY_DELETE","KEY_TAB","IS_MAC","navigator","userAgent","KEY_SHORTCUT","defaults","optgroups","delimiter","splitOn","persist","create","createOnBlur","createFilter","openOnFocus","shouldOpen","maxOptions","maxItems","hideSelected","duplicates","addPrecedence","selectOnTab","preload","allowEmptyOption","loadThrottle","loadingClass","dataAttr","optgroupField","valueField","labelField","disabledField","optgroupLabelField","optgroupValueField","lockOptgroupOrder","sortField","searchField","searchConjunction","mode","wrapperClass","controlClass","dropdownClass","dropdownContentClass","itemClass","optionClass","dropdownParent","controlInput","copyClassesToDropdown","placeholder","hidePlaceholder","shouldLoad","render","hash_key","get_hash","escape_html","loadDebounce","delay","timeout","loading","clearTimeout","setTimeout","loadedSearches","debounce_events","types","type","event_args","getSelection","selectionStart","selectionEnd","preventDefault","evt","stop","stopPropagation","addEvent","addEventListener","isKeyDown","key_name","count","altKey","ctrlKey","shiftKey","metaKey","getId","existing_id","getAttribute","addSlashes","append","getSettings","settings_user","attr_data","field_label","field_value","field_disabled","field_optgroup","field_optgroup_label","field_optgroup_value","tag_name","option","textContent","settings_element","init_select","optionsMap","group_count","readData","dataset","json","addOption","group","arr","option_data","disabled","$option","selected","addGroup","optgroup","optgroup_data","children","hasAttribute","child","init_textbox","data_raw","values","opt","instance_i","input_arg","user_settings","control_input","dropdown","control","dropdown_content","focus_node","order","tabIndex","is_select_tag","rtl","inputId","_destroy","sifter","isOpen","isDisabled","isRequired","isInvalid","isValid","isLocked","isFocused","isInputHidden","isSetup","ignoreFocus","ignoreHover","hasOptions","currentResults","lastValue","caretPos","activeOption","activeItems","userOptions","dir","tomselect","computedStyle","window","getComputedStyle","getPropertyValue","required","setupCallbacks","setupTemplates","_render","inputMode","setup","passive_event","passive","listboxId","role","control_id","label","label_click","focus","for","label_id","width","classes_plugins","multiple","load","e","target_match","onOptionHover","capture","onOptionSelect","onItemSelect","onClick","onKeyDown","onKeyPress","onInput","onBlur","onFocus","onPaste","doc_mousedown","composedPath","blur","inputState","win_scroll","positionDropdown","removeEventListener","revertSettings","insertAdjacentElement","sync","refreshState","updateOriginalInput","refreshItems","close","disable","enable","onChange","setupOptions","addOptions","registerOptionGroup","templates","escape","callbacks","get_settings","setValue","lastQuery","clearActiveItems","onMouseDown","pastedText","inputValue","splitInput","piece","hash","addItem","createItem","character","keyCode","which","selectAll","open","next","getAdjacent","setActiveOption","prev","canSelect","activeElement","advanceSelection","deleteSelection","refreshOptions","wasFocused","showInput","hasFocus","deactivate","setActiveItem","setCaret","parentElement","closeAfterSelect","canLoad","loadCallback","clearActiveOption","setTextboxValue","changed","getValue","silent","clear","addItems","setMaxItems","eventName","begin","swap","getLastActive","setActiveItemClass","removeActiveItem","hideInput","last_active","idx","scroll","scrollToOption","behavior","height_menu","clientHeight","scrollTop","height_item","offsetHeight","y","getBoundingClientRect","top","scrollBehavior","controlChildren","toggle","offsetWidth","getSearchOptions","calculateScore","hashed","triggerDropdown","k","html","has_create_option","active_group","groups","groups_order","same_query","results","active_option","show_dropdown","closest","opt_value","opt_hash","option_el","getOption","includes","group_fragment","createDocumentFragment","$id","toString","grp_a","grp_b","a_order","$order","b_order","group_heading","group_options","header","group_html","tok","add_template","template","insertBefore","canCreate","active_index","selectable","user_created","dat","registerOption","addOptionGroup","hashed_id","removeOptionGroup","clearCache","clearOptionGroups","updateOption","item_new","index_item","value_old","value_new","data_old","getItem","uncacheValue","option_new","removeOption","removeItem","clearOptions","boundFilter","clearFilter","$div","x","last_item","isPending","wasFull","isFull","insertAtCaret","caret","output","lock","created","unlock","refreshValidityState","wrap_classList","validity","valid","opts","empty_option","has_selected","AddSelected","reuse_opt","visibility","display","context","rect","scrollY","left","scrollX","selection","tail","rm_items","rm_item","shouldDelete","onDelete","adjacent","nextElementSibling","moveCaret","new_pos","destroy","templateName","hook","when","method","new_fn","orig_method","result_new","change_listener","checkbox_options","orig_onOptionSelect","UpdateCheckbox","checkbox","HTMLInputElement","checked","orig_render_option","rendered","prepend","clear_button","title","button","drag_drop","$","sortable","orig_lock","orig_unlock","$control","forcePlaceholderSize","ui","helper","overflow","each","dropdown_header","headerClass","titleRowClass","labelClass","closeClass","close_link","caret_position","dropdown_input","div","orig_onBlur","relatedTarget","preventScroll","input_autogrow","test_input","cssText","transfer_styles","style_name","resize","clientWidth","no_backspace_delete","orig_deleteSelection","no_active_items","optgroup_columns","orig_keydown","previousSibling","nextSibling","remove_button","orig_render_item","close_button","restore_on_backspace","text","virtual_scroll","orig_canLoad","orig_clearActiveOption","orig_loadCallback","pagination","loading_more","load_more_opt","default_values","shouldLoadMore","scroll_percent","scrollHeight","firstUrl","canLoadMore","setNextUrl","next_url","getUrl","first_option","no_more_results","tomSelect"],"sources":["/home/ubuntu/SDR/MF-DAM-SDR-Client/node_modules/tom-select/dist/js/tom-select.complete.js"],"sourcesContent":["/**\n* Tom Select v2.2.2\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n*/\n\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.TomSelect = factory());\n})(this, (function () { 'use strict';\n\n\t/**\n\t * MicroEvent - to make any js object an event emitter\n\t *\n\t * - pure javascript - server compatible, browser compatible\n\t * - dont rely on the browser doms\n\t * - super simple - you get it immediatly, no mistery, no magic involved\n\t *\n\t * @author Jerome Etienne (https://github.com/jeromeetienne)\n\t */\n\n\t/**\n\t * Execute callback for each event in space separated list of event names\n\t *\n\t */\n\tfunction forEvents(events, callback) {\n\t  events.split(/\\s+/).forEach(event => {\n\t    callback(event);\n\t  });\n\t}\n\n\tclass MicroEvent {\n\t  constructor() {\n\t    this._events = void 0;\n\t    this._events = {};\n\t  }\n\n\t  on(events, fct) {\n\t    forEvents(events, event => {\n\t      const event_array = this._events[event] || [];\n\t      event_array.push(fct);\n\t      this._events[event] = event_array;\n\t    });\n\t  }\n\n\t  off(events, fct) {\n\t    var n = arguments.length;\n\n\t    if (n === 0) {\n\t      this._events = {};\n\t      return;\n\t    }\n\n\t    forEvents(events, event => {\n\t      if (n === 1) {\n\t        delete this._events[event];\n\t        return;\n\t      }\n\n\t      const event_array = this._events[event];\n\t      if (event_array === undefined) return;\n\t      event_array.splice(event_array.indexOf(fct), 1);\n\t      this._events[event] = event_array;\n\t    });\n\t  }\n\n\t  trigger(events, ...args) {\n\t    var self = this;\n\t    forEvents(events, event => {\n\t      const event_array = self._events[event];\n\t      if (event_array === undefined) return;\n\t      event_array.forEach(fct => {\n\t        fct.apply(self, args);\n\t      });\n\t    });\n\t  }\n\n\t}\n\n\t/**\n\t * microplugin.js\n\t * Copyright (c) 2013 Brian Reavis & contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t * @author Brian Reavis <brian@thirdroute.com>\n\t */\n\tfunction MicroPlugin(Interface) {\n\t  Interface.plugins = {};\n\t  return class extends Interface {\n\t    constructor(...args) {\n\t      super(...args);\n\t      this.plugins = {\n\t        names: [],\n\t        settings: {},\n\t        requested: {},\n\t        loaded: {}\n\t      };\n\t    }\n\n\t    /**\n\t     * Registers a plugin.\n\t     *\n\t     * @param {function} fn\n\t     */\n\t    static define(name, fn) {\n\t      Interface.plugins[name] = {\n\t        'name': name,\n\t        'fn': fn\n\t      };\n\t    }\n\t    /**\n\t     * Initializes the listed plugins (with options).\n\t     * Acceptable formats:\n\t     *\n\t     * List (without options):\n\t     *   ['a', 'b', 'c']\n\t     *\n\t     * List (with options):\n\t     *   [{'name': 'a', options: {}}, {'name': 'b', options: {}}]\n\t     *\n\t     * Hash (with options):\n\t     *   {'a': { ... }, 'b': { ... }, 'c': { ... }}\n\t     *\n\t     * @param {array|object} plugins\n\t     */\n\n\n\t    initializePlugins(plugins) {\n\t      var key, name;\n\t      const self = this;\n\t      const queue = [];\n\n\t      if (Array.isArray(plugins)) {\n\t        plugins.forEach(plugin => {\n\t          if (typeof plugin === 'string') {\n\t            queue.push(plugin);\n\t          } else {\n\t            self.plugins.settings[plugin.name] = plugin.options;\n\t            queue.push(plugin.name);\n\t          }\n\t        });\n\t      } else if (plugins) {\n\t        for (key in plugins) {\n\t          if (plugins.hasOwnProperty(key)) {\n\t            self.plugins.settings[key] = plugins[key];\n\t            queue.push(key);\n\t          }\n\t        }\n\t      }\n\n\t      while (name = queue.shift()) {\n\t        self.require(name);\n\t      }\n\t    }\n\n\t    loadPlugin(name) {\n\t      var self = this;\n\t      var plugins = self.plugins;\n\t      var plugin = Interface.plugins[name];\n\n\t      if (!Interface.plugins.hasOwnProperty(name)) {\n\t        throw new Error('Unable to find \"' + name + '\" plugin');\n\t      }\n\n\t      plugins.requested[name] = true;\n\t      plugins.loaded[name] = plugin.fn.apply(self, [self.plugins.settings[name] || {}]);\n\t      plugins.names.push(name);\n\t    }\n\t    /**\n\t     * Initializes a plugin.\n\t     *\n\t     */\n\n\n\t    require(name) {\n\t      var self = this;\n\t      var plugins = self.plugins;\n\n\t      if (!self.plugins.loaded.hasOwnProperty(name)) {\n\t        if (plugins.requested[name]) {\n\t          throw new Error('Plugin has circular dependency (\"' + name + '\")');\n\t        }\n\n\t        self.loadPlugin(name);\n\t      }\n\n\t      return plugins.loaded[name];\n\t    }\n\n\t  };\n\t}\n\n\t/*! @orchidjs/unicode-variants | https://github.com/orchidjs/unicode-variants | Apache License (v2) */\n\t/**\n\t * Convert array of strings to a regular expression\n\t *\tex ['ab','a'] => (?:ab|a)\n\t * \tex ['a','b'] => [ab]\n\t * @param {string[]} chars\n\t * @return {string}\n\t */\n\tconst arrayToPattern = chars => {\n\t  chars = chars.filter(Boolean);\n\n\t  if (chars.length < 2) {\n\t    return chars[0] || '';\n\t  }\n\n\t  return maxValueLength(chars) == 1 ? '[' + chars.join('') + ']' : '(?:' + chars.join('|') + ')';\n\t};\n\t/**\n\t * @param {string[]} array\n\t * @return {string}\n\t */\n\n\tconst sequencePattern = array => {\n\t  if (!hasDuplicates(array)) {\n\t    return array.join('');\n\t  }\n\n\t  let pattern = '';\n\t  let prev_char_count = 0;\n\n\t  const prev_pattern = () => {\n\t    if (prev_char_count > 1) {\n\t      pattern += '{' + prev_char_count + '}';\n\t    }\n\t  };\n\n\t  array.forEach((char, i) => {\n\t    if (char === array[i - 1]) {\n\t      prev_char_count++;\n\t      return;\n\t    }\n\n\t    prev_pattern();\n\t    pattern += char;\n\t    prev_char_count = 1;\n\t  });\n\t  prev_pattern();\n\t  return pattern;\n\t};\n\t/**\n\t * Convert array of strings to a regular expression\n\t *\tex ['ab','a'] => (?:ab|a)\n\t * \tex ['a','b'] => [ab]\n\t * @param {Set<string>} chars\n\t * @return {string}\n\t */\n\n\tconst setToPattern = chars => {\n\t  let array = toArray(chars);\n\t  return arrayToPattern(array);\n\t};\n\t/**\n\t *\n\t * https://stackoverflow.com/questions/7376598/in-javascript-how-do-i-check-if-an-array-has-duplicate-values\n\t * @param {any[]} array\n\t */\n\n\tconst hasDuplicates = array => {\n\t  return new Set(array).size !== array.length;\n\t};\n\t/**\n\t * https://stackoverflow.com/questions/63006601/why-does-u-throw-an-invalid-escape-error\n\t * @param {string} str\n\t * @return {string}\n\t */\n\n\tconst escape_regex = str => {\n\t  return (str + '').replace(/([\\$\\(\\)\\*\\+\\.\\?\\[\\]\\^\\{\\|\\}\\\\])/gu, '\\\\$1');\n\t};\n\t/**\n\t * Return the max length of array values\n\t * @param {string[]} array\n\t *\n\t */\n\n\tconst maxValueLength = array => {\n\t  return array.reduce((longest, value) => Math.max(longest, unicodeLength(value)), 0);\n\t};\n\t/**\n\t * @param {string} str\n\t */\n\n\tconst unicodeLength = str => {\n\t  return toArray(str).length;\n\t};\n\t/**\n\t * @param {any} p\n\t * @return {any[]}\n\t */\n\n\tconst toArray = p => Array.from(p);\n\n\t/*! @orchidjs/unicode-variants | https://github.com/orchidjs/unicode-variants | Apache License (v2) */\n\t/**\n\t * Get all possible combinations of substrings that add up to the given string\n\t * https://stackoverflow.com/questions/30169587/find-all-the-combination-of-substrings-that-add-up-to-the-given-string\n\t * @param {string} input\n\t * @return {string[][]}\n\t */\n\tconst allSubstrings = input => {\n\t  if (input.length === 1) return [[input]];\n\t  /** @type {string[][]} */\n\n\t  let result = [];\n\t  const start = input.substring(1);\n\t  const suba = allSubstrings(start);\n\t  suba.forEach(function (subresult) {\n\t    let tmp = subresult.slice(0);\n\t    tmp[0] = input.charAt(0) + tmp[0];\n\t    result.push(tmp);\n\t    tmp = subresult.slice(0);\n\t    tmp.unshift(input.charAt(0));\n\t    result.push(tmp);\n\t  });\n\t  return result;\n\t};\n\n\t/*! @orchidjs/unicode-variants | https://github.com/orchidjs/unicode-variants | Apache License (v2) */\n\n\t/**\n\t * @typedef {{[key:string]:string}} TUnicodeMap\n\t * @typedef {{[key:string]:Set<string>}} TUnicodeSets\n\t * @typedef {[[number,number]]} TCodePoints\n\t * @typedef {{folded:string,composed:string,code_point:number}} TCodePointObj\n\t * @typedef {{start:number,end:number,length:number,substr:string}} TSequencePart\n\t */\n\t/** @type {TCodePoints} */\n\n\tconst code_points = [[0, 65535]];\n\tconst accent_pat = '[\\u0300-\\u036F\\u{b7}\\u{2be}\\u{2bc}]';\n\t/** @type {TUnicodeMap} */\n\n\tlet unicode_map;\n\t/** @type {RegExp} */\n\n\tlet multi_char_reg;\n\tconst max_char_length = 3;\n\t/** @type {TUnicodeMap} */\n\n\tconst latin_convert = {};\n\t/** @type {TUnicodeMap} */\n\n\tconst latin_condensed = {\n\t  '/': '⁄∕',\n\t  '0': '߀',\n\t  \"a\": \"ⱥɐɑ\",\n\t  \"aa\": \"ꜳ\",\n\t  \"ae\": \"æǽǣ\",\n\t  \"ao\": \"ꜵ\",\n\t  \"au\": \"ꜷ\",\n\t  \"av\": \"ꜹꜻ\",\n\t  \"ay\": \"ꜽ\",\n\t  \"b\": \"ƀɓƃ\",\n\t  \"c\": \"ꜿƈȼↄ\",\n\t  \"d\": \"đɗɖᴅƌꮷԁɦ\",\n\t  \"e\": \"ɛǝᴇɇ\",\n\t  \"f\": \"ꝼƒ\",\n\t  \"g\": \"ǥɠꞡᵹꝿɢ\",\n\t  \"h\": \"ħⱨⱶɥ\",\n\t  \"i\": \"ɨı\",\n\t  \"j\": \"ɉȷ\",\n\t  \"k\": \"ƙⱪꝁꝃꝅꞣ\",\n\t  \"l\": \"łƚɫⱡꝉꝇꞁɭ\",\n\t  \"m\": \"ɱɯϻ\",\n\t  \"n\": \"ꞥƞɲꞑᴎлԉ\",\n\t  \"o\": \"øǿɔɵꝋꝍᴑ\",\n\t  \"oe\": \"œ\",\n\t  \"oi\": \"ƣ\",\n\t  \"oo\": \"ꝏ\",\n\t  \"ou\": \"ȣ\",\n\t  \"p\": \"ƥᵽꝑꝓꝕρ\",\n\t  \"q\": \"ꝗꝙɋ\",\n\t  \"r\": \"ɍɽꝛꞧꞃ\",\n\t  \"s\": \"ßȿꞩꞅʂ\",\n\t  \"t\": \"ŧƭʈⱦꞇ\",\n\t  \"th\": \"þ\",\n\t  \"tz\": \"ꜩ\",\n\t  \"u\": \"ʉ\",\n\t  \"v\": \"ʋꝟʌ\",\n\t  \"vy\": \"ꝡ\",\n\t  \"w\": \"ⱳ\",\n\t  \"y\": \"ƴɏỿ\",\n\t  \"z\": \"ƶȥɀⱬꝣ\",\n\t  \"hv\": \"ƕ\"\n\t};\n\n\tfor (let latin in latin_condensed) {\n\t  let unicode = latin_condensed[latin] || '';\n\n\t  for (let i = 0; i < unicode.length; i++) {\n\t    let char = unicode.substring(i, i + 1);\n\t    latin_convert[char] = latin;\n\t  }\n\t}\n\n\tconst convert_pat = new RegExp(Object.keys(latin_convert).join('|') + '|' + accent_pat, 'gu');\n\t/**\n\t * Initialize the unicode_map from the give code point ranges\n\t *\n\t * @param {TCodePoints=} _code_points\n\t */\n\n\tconst initialize = _code_points => {\n\t  if (unicode_map !== undefined) return;\n\t  unicode_map = generateMap(_code_points || code_points);\n\t};\n\t/**\n\t * Helper method for normalize a string\n\t * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize\n\t * @param {string} str\n\t * @param {string} form\n\t */\n\n\tconst normalize = (str, form = 'NFKD') => str.normalize(form);\n\t/**\n\t * Remove accents without reordering string\n\t * calling str.normalize('NFKD') on \\u{594}\\u{595}\\u{596} becomes \\u{596}\\u{594}\\u{595}\n\t * via https://github.com/krisk/Fuse/issues/133#issuecomment-318692703\n\t * @param {string} str\n\t * @return {string}\n\t */\n\n\tconst asciifold = str => {\n\t  return toArray(str).reduce(\n\t  /**\n\t   * @param {string} result\n\t   * @param {string} char\n\t   */\n\t  (result, char) => {\n\t    return result + _asciifold(char);\n\t  }, '');\n\t};\n\t/**\n\t * @param {string} str\n\t * @return {string}\n\t */\n\n\tconst _asciifold = str => {\n\t  str = normalize(str).toLowerCase().replace(convert_pat, (\n\t  /** @type {string} */\n\t  char) => {\n\t    return latin_convert[char] || '';\n\t  }); //return str;\n\n\t  return normalize(str, 'NFC');\n\t};\n\t/**\n\t * Generate a list of unicode variants from the list of code points\n\t * @param {TCodePoints} code_points\n\t * @yield {TCodePointObj}\n\t */\n\n\tfunction* generator(code_points) {\n\t  for (const [code_point_min, code_point_max] of code_points) {\n\t    for (let i = code_point_min; i <= code_point_max; i++) {\n\t      let composed = String.fromCharCode(i);\n\t      let folded = asciifold(composed);\n\n\t      if (folded == composed.toLowerCase()) {\n\t        continue;\n\t      } // skip when folded is a string longer than 3 characters long\n\t      // bc the resulting regex patterns will be long\n\t      // eg:\n\t      // folded صلى الله عليه وسلم length 18 code point 65018\n\t      // folded جل جلاله length 8 code point 65019\n\n\n\t      if (folded.length > max_char_length) {\n\t        continue;\n\t      }\n\n\t      if (folded.length == 0) {\n\t        continue;\n\t      }\n\n\t      yield {\n\t        folded: folded,\n\t        composed: composed,\n\t        code_point: i\n\t      };\n\t    }\n\t  }\n\t}\n\t/**\n\t * Generate a unicode map from the list of code points\n\t * @param {TCodePoints} code_points\n\t * @return {TUnicodeSets}\n\t */\n\n\tconst generateSets = code_points => {\n\t  /** @type {{[key:string]:Set<string>}} */\n\t  const unicode_sets = {};\n\t  /**\n\t   * @param {string} folded\n\t   * @param {string} to_add\n\t   */\n\n\t  const addMatching = (folded, to_add) => {\n\t    /** @type {Set<string>} */\n\t    const folded_set = unicode_sets[folded] || new Set();\n\t    const patt = new RegExp('^' + setToPattern(folded_set) + '$', 'iu');\n\n\t    if (to_add.match(patt)) {\n\t      return;\n\t    }\n\n\t    folded_set.add(escape_regex(to_add));\n\t    unicode_sets[folded] = folded_set;\n\t  };\n\n\t  for (let value of generator(code_points)) {\n\t    addMatching(value.folded, value.folded);\n\t    addMatching(value.folded, value.composed);\n\t  }\n\n\t  return unicode_sets;\n\t};\n\t/**\n\t * Generate a unicode map from the list of code points\n\t * ae => (?:(?:ae|Æ|Ǽ|Ǣ)|(?:A|Ⓐ|Ａ...)(?:E|ɛ|Ⓔ...))\n\t *\n\t * @param {TCodePoints} code_points\n\t * @return {TUnicodeMap}\n\t */\n\n\tconst generateMap = code_points => {\n\t  /** @type {TUnicodeSets} */\n\t  const unicode_sets = generateSets(code_points);\n\t  /** @type {TUnicodeMap} */\n\n\t  const unicode_map = {};\n\t  /** @type {string[]} */\n\n\t  let multi_char = [];\n\n\t  for (let folded in unicode_sets) {\n\t    let set = unicode_sets[folded];\n\n\t    if (set) {\n\t      unicode_map[folded] = setToPattern(set);\n\t    }\n\n\t    if (folded.length > 1) {\n\t      multi_char.push(escape_regex(folded));\n\t    }\n\t  }\n\n\t  multi_char.sort((a, b) => b.length - a.length);\n\t  const multi_char_patt = arrayToPattern(multi_char);\n\t  multi_char_reg = new RegExp('^' + multi_char_patt, 'u');\n\t  return unicode_map;\n\t};\n\t/**\n\t * Map each element of an array from it's folded value to all possible unicode matches\n\t * @param {string[]} strings\n\t * @param {number} min_replacement\n\t * @return {string}\n\t */\n\n\tconst mapSequence = (strings, min_replacement = 1) => {\n\t  let chars_replaced = 0;\n\t  strings = strings.map(str => {\n\t    if (unicode_map[str]) {\n\t      chars_replaced += str.length;\n\t    }\n\n\t    return unicode_map[str] || str;\n\t  });\n\n\t  if (chars_replaced >= min_replacement) {\n\t    return sequencePattern(strings);\n\t  }\n\n\t  return '';\n\t};\n\t/**\n\t * Convert a short string and split it into all possible patterns\n\t * Keep a pattern only if min_replacement is met\n\t *\n\t * 'abc'\n\t * \t\t=> [['abc'],['ab','c'],['a','bc'],['a','b','c']]\n\t *\t\t=> ['abc-pattern','ab-c-pattern'...]\n\t *\n\t *\n\t * @param {string} str\n\t * @param {number} min_replacement\n\t * @return {string}\n\t */\n\n\tconst substringsToPattern = (str, min_replacement = 1) => {\n\t  min_replacement = Math.max(min_replacement, str.length - 1);\n\t  return arrayToPattern(allSubstrings(str).map(sub_pat => {\n\t    return mapSequence(sub_pat, min_replacement);\n\t  }));\n\t};\n\t/**\n\t * Convert an array of sequences into a pattern\n\t * [{start:0,end:3,length:3,substr:'iii'}...] => (?:iii...)\n\t *\n\t * @param {Sequence[]} sequences\n\t * @param {boolean} all\n\t */\n\n\tconst sequencesToPattern = (sequences, all = true) => {\n\t  let min_replacement = sequences.length > 1 ? 1 : 0;\n\t  return arrayToPattern(sequences.map(sequence => {\n\t    let seq = [];\n\t    const len = all ? sequence.length() : sequence.length() - 1;\n\n\t    for (let j = 0; j < len; j++) {\n\t      seq.push(substringsToPattern(sequence.substrs[j] || '', min_replacement));\n\t    }\n\n\t    return sequencePattern(seq);\n\t  }));\n\t};\n\t/**\n\t * Return true if the sequence is already in the sequences\n\t * @param {Sequence} needle_seq\n\t * @param {Sequence[]} sequences\n\t */\n\n\n\tconst inSequences = (needle_seq, sequences) => {\n\t  for (const seq of sequences) {\n\t    if (seq.start != needle_seq.start || seq.end != needle_seq.end) {\n\t      continue;\n\t    }\n\n\t    if (seq.substrs.join('') !== needle_seq.substrs.join('')) {\n\t      continue;\n\t    }\n\n\t    let needle_parts = needle_seq.parts;\n\t    /**\n\t     * @param {TSequencePart} part\n\t     */\n\n\t    const filter = part => {\n\t      for (const needle_part of needle_parts) {\n\t        if (needle_part.start === part.start && needle_part.substr === part.substr) {\n\t          return false;\n\t        }\n\n\t        if (part.length == 1 || needle_part.length == 1) {\n\t          continue;\n\t        } // check for overlapping parts\n\t        // a = ['::=','==']\n\t        // b = ['::','===']\n\t        // a = ['r','sm']\n\t        // b = ['rs','m']\n\n\n\t        if (part.start < needle_part.start && part.end > needle_part.start) {\n\t          return true;\n\t        }\n\n\t        if (needle_part.start < part.start && needle_part.end > part.start) {\n\t          return true;\n\t        }\n\t      }\n\n\t      return false;\n\t    };\n\n\t    let filtered = seq.parts.filter(filter);\n\n\t    if (filtered.length > 0) {\n\t      continue;\n\t    }\n\n\t    return true;\n\t  }\n\n\t  return false;\n\t};\n\n\tclass Sequence {\n\t  constructor() {\n\t    /** @type {TSequencePart[]} */\n\t    this.parts = [];\n\t    /** @type {string[]} */\n\n\t    this.substrs = [];\n\t    this.start = 0;\n\t    this.end = 0;\n\t  }\n\t  /**\n\t   * @param {TSequencePart|undefined} part\n\t   */\n\n\n\t  add(part) {\n\t    if (part) {\n\t      this.parts.push(part);\n\t      this.substrs.push(part.substr);\n\t      this.start = Math.min(part.start, this.start);\n\t      this.end = Math.max(part.end, this.end);\n\t    }\n\t  }\n\n\t  last() {\n\t    return this.parts[this.parts.length - 1];\n\t  }\n\n\t  length() {\n\t    return this.parts.length;\n\t  }\n\t  /**\n\t   * @param {number} position\n\t   * @param {TSequencePart} last_piece\n\t   */\n\n\n\t  clone(position, last_piece) {\n\t    let clone = new Sequence();\n\t    let parts = JSON.parse(JSON.stringify(this.parts));\n\t    let last_part = parts.pop();\n\n\t    for (const part of parts) {\n\t      clone.add(part);\n\t    }\n\n\t    let last_substr = last_piece.substr.substring(0, position - last_part.start);\n\t    let clone_last_len = last_substr.length;\n\t    clone.add({\n\t      start: last_part.start,\n\t      end: last_part.start + clone_last_len,\n\t      length: clone_last_len,\n\t      substr: last_substr\n\t    });\n\t    return clone;\n\t  }\n\n\t}\n\t/**\n\t * Expand a regular expression pattern to include unicode variants\n\t * \teg /a/ becomes /aⓐａẚàáâầấẫẩãāăằắẵẳȧǡäǟảåǻǎȁȃạậặḁąⱥɐɑAⒶＡÀÁÂẦẤẪẨÃĀĂẰẮẴẲȦǠÄǞẢÅǺǍȀȂẠẬẶḀĄȺⱯ/\n\t *\n\t * Issue:\n\t *  ﺊﺋ [ 'ﺊ = \\\\u{fe8a}', 'ﺋ = \\\\u{fe8b}' ]\n\t *\tbecomes:\tئئ [ 'ي = \\\\u{64a}', 'ٔ = \\\\u{654}', 'ي = \\\\u{64a}', 'ٔ = \\\\u{654}' ]\n\t *\n\t *\tİĲ = IIJ = ⅡJ\n\t *\n\t * \t1/2/4\n\t *\n\t * @param {string} str\n\t * @return {string|undefined}\n\t */\n\n\n\tconst getPattern = str => {\n\t  initialize();\n\t  str = asciifold(str);\n\t  let pattern = '';\n\t  let sequences = [new Sequence()];\n\n\t  for (let i = 0; i < str.length; i++) {\n\t    let substr = str.substring(i);\n\t    let match = substr.match(multi_char_reg);\n\t    const char = str.substring(i, i + 1);\n\t    const match_str = match ? match[0] : null; // loop through sequences\n\t    // add either the char or multi_match\n\n\t    let overlapping = [];\n\t    let added_types = new Set();\n\n\t    for (const sequence of sequences) {\n\t      const last_piece = sequence.last();\n\n\t      if (!last_piece || last_piece.length == 1 || last_piece.end <= i) {\n\t        // if we have a multi match\n\t        if (match_str) {\n\t          const len = match_str.length;\n\t          sequence.add({\n\t            start: i,\n\t            end: i + len,\n\t            length: len,\n\t            substr: match_str\n\t          });\n\t          added_types.add('1');\n\t        } else {\n\t          sequence.add({\n\t            start: i,\n\t            end: i + 1,\n\t            length: 1,\n\t            substr: char\n\t          });\n\t          added_types.add('2');\n\t        }\n\t      } else if (match_str) {\n\t        let clone = sequence.clone(i, last_piece);\n\t        const len = match_str.length;\n\t        clone.add({\n\t          start: i,\n\t          end: i + len,\n\t          length: len,\n\t          substr: match_str\n\t        });\n\t        overlapping.push(clone);\n\t      } else {\n\t        // don't add char\n\t        // adding would create invalid patterns: 234 => [2,34,4]\n\t        added_types.add('3');\n\t      }\n\t    } // if we have overlapping\n\n\n\t    if (overlapping.length > 0) {\n\t      // ['ii','iii'] before ['i','i','iii']\n\t      overlapping = overlapping.sort((a, b) => {\n\t        return a.length() - b.length();\n\t      });\n\n\t      for (let clone of overlapping) {\n\t        // don't add if we already have an equivalent sequence\n\t        if (inSequences(clone, sequences)) {\n\t          continue;\n\t        }\n\n\t        sequences.push(clone);\n\t      }\n\n\t      continue;\n\t    } // if we haven't done anything unique\n\t    // clean up the patterns\n\t    // helps keep patterns smaller\n\t    // if str = 'r₨㎧aarss', pattern will be 446 instead of 655\n\n\n\t    if (i > 0 && added_types.size == 1 && !added_types.has('3')) {\n\t      pattern += sequencesToPattern(sequences, false);\n\t      let new_seq = new Sequence();\n\t      const old_seq = sequences[0];\n\n\t      if (old_seq) {\n\t        new_seq.add(old_seq.last());\n\t      }\n\n\t      sequences = [new_seq];\n\t    }\n\t  }\n\n\t  pattern += sequencesToPattern(sequences, true);\n\t  return pattern;\n\t};\n\n\t/*! sifter.js | https://github.com/orchidjs/sifter.js | Apache License (v2) */\n\n\t/**\n\t * A property getter resolving dot-notation\n\t * @param  {Object}  obj     The root object to fetch property on\n\t * @param  {String}  name    The optionally dotted property name to fetch\n\t * @return {Object}          The resolved property value\n\t */\n\tconst getAttr = (obj, name) => {\n\t  if (!obj) return;\n\t  return obj[name];\n\t};\n\t/**\n\t * A property getter resolving dot-notation\n\t * @param  {Object}  obj     The root object to fetch property on\n\t * @param  {String}  name    The optionally dotted property name to fetch\n\t * @return {Object}          The resolved property value\n\t */\n\n\tconst getAttrNesting = (obj, name) => {\n\t  if (!obj) return;\n\t  var part,\n\t      names = name.split(\".\");\n\n\t  while ((part = names.shift()) && (obj = obj[part]));\n\n\t  return obj;\n\t};\n\t/**\n\t * Calculates how close of a match the\n\t * given value is against a search token.\n\t *\n\t */\n\n\tconst scoreValue = (value, token, weight) => {\n\t  var score, pos;\n\t  if (!value) return 0;\n\t  value = value + '';\n\t  if (token.regex == null) return 0;\n\t  pos = value.search(token.regex);\n\t  if (pos === -1) return 0;\n\t  score = token.string.length / value.length;\n\t  if (pos === 0) score += 0.5;\n\t  return score * weight;\n\t};\n\t/**\n\t * Cast object property to an array if it exists and has a value\n\t *\n\t */\n\n\tconst propToArray = (obj, key) => {\n\t  var value = obj[key];\n\t  if (typeof value == 'function') return value;\n\n\t  if (value && !Array.isArray(value)) {\n\t    obj[key] = [value];\n\t  }\n\t};\n\t/**\n\t * Iterates over arrays and hashes.\n\t *\n\t * ```\n\t * iterate(this.items, function(item, id) {\n\t *    // invoked for each item\n\t * });\n\t * ```\n\t *\n\t */\n\n\tconst iterate$1 = (object, callback) => {\n\t  if (Array.isArray(object)) {\n\t    object.forEach(callback);\n\t  } else {\n\t    for (var key in object) {\n\t      if (object.hasOwnProperty(key)) {\n\t        callback(object[key], key);\n\t      }\n\t    }\n\t  }\n\t};\n\tconst cmp = (a, b) => {\n\t  if (typeof a === 'number' && typeof b === 'number') {\n\t    return a > b ? 1 : a < b ? -1 : 0;\n\t  }\n\n\t  a = asciifold(a + '').toLowerCase();\n\t  b = asciifold(b + '').toLowerCase();\n\t  if (a > b) return 1;\n\t  if (b > a) return -1;\n\t  return 0;\n\t};\n\n\t/*! sifter.js | https://github.com/orchidjs/sifter.js | Apache License (v2) */\n\n\t/**\n\t * sifter.js\n\t * Copyright (c) 2013–2020 Brian Reavis & contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t * @author Brian Reavis <brian@thirdroute.com>\n\t */\n\n\tclass Sifter {\n\t  // []|{};\n\n\t  /**\n\t   * Textually searches arrays and hashes of objects\n\t   * by property (or multiple properties). Designed\n\t   * specifically for autocomplete.\n\t   *\n\t   */\n\t  constructor(items, settings) {\n\t    this.items = void 0;\n\t    this.settings = void 0;\n\t    this.items = items;\n\t    this.settings = settings || {\n\t      diacritics: true\n\t    };\n\t  }\n\n\t  /**\n\t   * Splits a search string into an array of individual\n\t   * regexps to be used to match results.\n\t   *\n\t   */\n\t  tokenize(query, respect_word_boundaries, weights) {\n\t    if (!query || !query.length) return [];\n\t    const tokens = [];\n\t    const words = query.split(/\\s+/);\n\t    var field_regex;\n\n\t    if (weights) {\n\t      field_regex = new RegExp('^(' + Object.keys(weights).map(escape_regex).join('|') + ')\\:(.*)$');\n\t    }\n\n\t    words.forEach(word => {\n\t      let field_match;\n\t      let field = null;\n\t      let regex = null; // look for \"field:query\" tokens\n\n\t      if (field_regex && (field_match = word.match(field_regex))) {\n\t        field = field_match[1];\n\t        word = field_match[2];\n\t      }\n\n\t      if (word.length > 0) {\n\t        if (this.settings.diacritics) {\n\t          regex = getPattern(word) || null;\n\t        } else {\n\t          regex = escape_regex(word);\n\t        }\n\n\t        if (regex && respect_word_boundaries) regex = \"\\\\b\" + regex;\n\t      }\n\n\t      tokens.push({\n\t        string: word,\n\t        regex: regex ? new RegExp(regex, 'iu') : null,\n\t        field: field\n\t      });\n\t    });\n\t    return tokens;\n\t  }\n\n\t  /**\n\t   * Returns a function to be used to score individual results.\n\t   *\n\t   * Good matches will have a higher score than poor matches.\n\t   * If an item is not a match, 0 will be returned by the function.\n\t   *\n\t   * @returns {T.ScoreFn}\n\t   */\n\t  getScoreFunction(query, options) {\n\t    var search = this.prepareSearch(query, options);\n\t    return this._getScoreFunction(search);\n\t  }\n\t  /**\n\t   * @returns {T.ScoreFn}\n\t   *\n\t   */\n\n\n\t  _getScoreFunction(search) {\n\t    const tokens = search.tokens,\n\t          token_count = tokens.length;\n\n\t    if (!token_count) {\n\t      return function () {\n\t        return 0;\n\t      };\n\t    }\n\n\t    const fields = search.options.fields,\n\t          weights = search.weights,\n\t          field_count = fields.length,\n\t          getAttrFn = search.getAttrFn;\n\n\t    if (!field_count) {\n\t      return function () {\n\t        return 1;\n\t      };\n\t    }\n\t    /**\n\t     * Calculates the score of an object\n\t     * against the search query.\n\t     *\n\t     */\n\n\n\t    const scoreObject = function () {\n\t      if (field_count === 1) {\n\t        return function (token, data) {\n\t          const field = fields[0].field;\n\t          return scoreValue(getAttrFn(data, field), token, weights[field] || 1);\n\t        };\n\t      }\n\n\t      return function (token, data) {\n\t        var sum = 0; // is the token specific to a field?\n\n\t        if (token.field) {\n\t          const value = getAttrFn(data, token.field);\n\n\t          if (!token.regex && value) {\n\t            sum += 1 / field_count;\n\t          } else {\n\t            sum += scoreValue(value, token, 1);\n\t          }\n\t        } else {\n\t          iterate$1(weights, (weight, field) => {\n\t            sum += scoreValue(getAttrFn(data, field), token, weight);\n\t          });\n\t        }\n\n\t        return sum / field_count;\n\t      };\n\t    }();\n\n\t    if (token_count === 1) {\n\t      return function (data) {\n\t        return scoreObject(tokens[0], data);\n\t      };\n\t    }\n\n\t    if (search.options.conjunction === 'and') {\n\t      return function (data) {\n\t        var score,\n\t            sum = 0;\n\n\t        for (let token of tokens) {\n\t          score = scoreObject(token, data);\n\t          if (score <= 0) return 0;\n\t          sum += score;\n\t        }\n\n\t        return sum / token_count;\n\t      };\n\t    } else {\n\t      return function (data) {\n\t        var sum = 0;\n\t        iterate$1(tokens, token => {\n\t          sum += scoreObject(token, data);\n\t        });\n\t        return sum / token_count;\n\t      };\n\t    }\n\t  }\n\n\t  /**\n\t   * Returns a function that can be used to compare two\n\t   * results, for sorting purposes. If no sorting should\n\t   * be performed, `null` will be returned.\n\t   *\n\t   * @return function(a,b)\n\t   */\n\t  getSortFunction(query, options) {\n\t    var search = this.prepareSearch(query, options);\n\t    return this._getSortFunction(search);\n\t  }\n\n\t  _getSortFunction(search) {\n\t    var implicit_score,\n\t        sort_flds = [];\n\t    const self = this,\n\t          options = search.options,\n\t          sort = !search.query && options.sort_empty ? options.sort_empty : options.sort;\n\n\t    if (typeof sort == 'function') {\n\t      return sort.bind(this);\n\t    }\n\t    /**\n\t     * Fetches the specified sort field value\n\t     * from a search result item.\n\t     *\n\t     */\n\n\n\t    const get_field = function get_field(name, result) {\n\t      if (name === '$score') return result.score;\n\t      return search.getAttrFn(self.items[result.id], name);\n\t    }; // parse options\n\n\n\t    if (sort) {\n\t      for (let s of sort) {\n\t        if (search.query || s.field !== '$score') {\n\t          sort_flds.push(s);\n\t        }\n\t      }\n\t    } // the \"$score\" field is implied to be the primary\n\t    // sort field, unless it's manually specified\n\n\n\t    if (search.query) {\n\t      implicit_score = true;\n\n\t      for (let fld of sort_flds) {\n\t        if (fld.field === '$score') {\n\t          implicit_score = false;\n\t          break;\n\t        }\n\t      }\n\n\t      if (implicit_score) {\n\t        sort_flds.unshift({\n\t          field: '$score',\n\t          direction: 'desc'\n\t        });\n\t      } // without a search.query, all items will have the same score\n\n\t    } else {\n\t      sort_flds = sort_flds.filter(fld => fld.field !== '$score');\n\t    } // build function\n\n\n\t    const sort_flds_count = sort_flds.length;\n\n\t    if (!sort_flds_count) {\n\t      return null;\n\t    }\n\n\t    return function (a, b) {\n\t      var result, field;\n\n\t      for (let sort_fld of sort_flds) {\n\t        field = sort_fld.field;\n\t        let multiplier = sort_fld.direction === 'desc' ? -1 : 1;\n\t        result = multiplier * cmp(get_field(field, a), get_field(field, b));\n\t        if (result) return result;\n\t      }\n\n\t      return 0;\n\t    };\n\t  }\n\n\t  /**\n\t   * Parses a search query and returns an object\n\t   * with tokens and fields ready to be populated\n\t   * with results.\n\t   *\n\t   */\n\t  prepareSearch(query, optsUser) {\n\t    const weights = {};\n\t    var options = Object.assign({}, optsUser);\n\t    propToArray(options, 'sort');\n\t    propToArray(options, 'sort_empty'); // convert fields to new format\n\n\t    if (options.fields) {\n\t      propToArray(options, 'fields');\n\t      const fields = [];\n\t      options.fields.forEach(field => {\n\t        if (typeof field == 'string') {\n\t          field = {\n\t            field: field,\n\t            weight: 1\n\t          };\n\t        }\n\n\t        fields.push(field);\n\t        weights[field.field] = 'weight' in field ? field.weight : 1;\n\t      });\n\t      options.fields = fields;\n\t    }\n\n\t    return {\n\t      options: options,\n\t      query: query.toLowerCase().trim(),\n\t      tokens: this.tokenize(query, options.respect_word_boundaries, weights),\n\t      total: 0,\n\t      items: [],\n\t      weights: weights,\n\t      getAttrFn: options.nesting ? getAttrNesting : getAttr\n\t    };\n\t  }\n\n\t  /**\n\t   * Searches through all items and returns a sorted array of matches.\n\t   *\n\t   */\n\t  search(query, options) {\n\t    var self = this,\n\t        score,\n\t        search;\n\t    search = this.prepareSearch(query, options);\n\t    options = search.options;\n\t    query = search.query; // generate result scoring function\n\n\t    const fn_score = options.score || self._getScoreFunction(search); // perform search and sort\n\n\n\t    if (query.length) {\n\t      iterate$1(self.items, (item, id) => {\n\t        score = fn_score(item);\n\n\t        if (options.filter === false || score > 0) {\n\t          search.items.push({\n\t            'score': score,\n\t            'id': id\n\t          });\n\t        }\n\t      });\n\t    } else {\n\t      iterate$1(self.items, (_, id) => {\n\t        search.items.push({\n\t          'score': 1,\n\t          'id': id\n\t        });\n\t      });\n\t    }\n\n\t    const fn_sort = self._getSortFunction(search);\n\n\t    if (fn_sort) search.items.sort(fn_sort); // apply limits\n\n\t    search.total = search.items.length;\n\n\t    if (typeof options.limit === 'number') {\n\t      search.items = search.items.slice(0, options.limit);\n\t    }\n\n\t    return search;\n\t  }\n\n\t}\n\n\t/**\n\t * Iterates over arrays and hashes.\n\t *\n\t * ```\n\t * iterate(this.items, function(item, id) {\n\t *    // invoked for each item\n\t * });\n\t * ```\n\t *\n\t */\n\n\tconst iterate = (object, callback) => {\n\t  if (Array.isArray(object)) {\n\t    object.forEach(callback);\n\t  } else {\n\t    for (var key in object) {\n\t      if (object.hasOwnProperty(key)) {\n\t        callback(object[key], key);\n\t      }\n\t    }\n\t  }\n\t};\n\n\t/**\n\t * Return a dom element from either a dom query string, jQuery object, a dom element or html string\n\t * https://stackoverflow.com/questions/494143/creating-a-new-dom-element-from-an-html-string-using-built-in-dom-methods-or-pro/35385518#35385518\n\t *\n\t * param query should be {}\n\t */\n\n\tconst getDom = query => {\n\t  if (query.jquery) {\n\t    return query[0];\n\t  }\n\n\t  if (query instanceof HTMLElement) {\n\t    return query;\n\t  }\n\n\t  if (isHtmlString(query)) {\n\t    var tpl = document.createElement('template');\n\t    tpl.innerHTML = query.trim(); // Never return a text node of whitespace as the result\n\n\t    return tpl.content.firstChild;\n\t  }\n\n\t  return document.querySelector(query);\n\t};\n\tconst isHtmlString = arg => {\n\t  if (typeof arg === 'string' && arg.indexOf('<') > -1) {\n\t    return true;\n\t  }\n\n\t  return false;\n\t};\n\tconst escapeQuery = query => {\n\t  return query.replace(/['\"\\\\]/g, '\\\\$&');\n\t};\n\t/**\n\t * Dispatch an event\n\t *\n\t */\n\n\tconst triggerEvent = (dom_el, event_name) => {\n\t  var event = document.createEvent('HTMLEvents');\n\t  event.initEvent(event_name, true, false);\n\t  dom_el.dispatchEvent(event);\n\t};\n\t/**\n\t * Apply CSS rules to a dom element\n\t *\n\t */\n\n\tconst applyCSS = (dom_el, css) => {\n\t  Object.assign(dom_el.style, css);\n\t};\n\t/**\n\t * Add css classes\n\t *\n\t */\n\n\tconst addClasses = (elmts, ...classes) => {\n\t  var norm_classes = classesArray(classes);\n\t  elmts = castAsArray(elmts);\n\t  elmts.map(el => {\n\t    norm_classes.map(cls => {\n\t      el.classList.add(cls);\n\t    });\n\t  });\n\t};\n\t/**\n\t * Remove css classes\n\t *\n\t */\n\n\tconst removeClasses = (elmts, ...classes) => {\n\t  var norm_classes = classesArray(classes);\n\t  elmts = castAsArray(elmts);\n\t  elmts.map(el => {\n\t    norm_classes.map(cls => {\n\t      el.classList.remove(cls);\n\t    });\n\t  });\n\t};\n\t/**\n\t * Return arguments\n\t *\n\t */\n\n\tconst classesArray = args => {\n\t  var classes = [];\n\t  iterate(args, _classes => {\n\t    if (typeof _classes === 'string') {\n\t      _classes = _classes.trim().split(/[\\11\\12\\14\\15\\40]/);\n\t    }\n\n\t    if (Array.isArray(_classes)) {\n\t      classes = classes.concat(_classes);\n\t    }\n\t  });\n\t  return classes.filter(Boolean);\n\t};\n\t/**\n\t * Create an array from arg if it's not already an array\n\t *\n\t */\n\n\tconst castAsArray = arg => {\n\t  if (!Array.isArray(arg)) {\n\t    arg = [arg];\n\t  }\n\n\t  return arg;\n\t};\n\t/**\n\t * Get the closest node to the evt.target matching the selector\n\t * Stops at wrapper\n\t *\n\t */\n\n\tconst parentMatch = (target, selector, wrapper) => {\n\t  if (wrapper && !wrapper.contains(target)) {\n\t    return;\n\t  }\n\n\t  while (target && target.matches) {\n\t    if (target.matches(selector)) {\n\t      return target;\n\t    }\n\n\t    target = target.parentNode;\n\t  }\n\t};\n\t/**\n\t * Get the first or last item from an array\n\t *\n\t * > 0 - right (last)\n\t * <= 0 - left (first)\n\t *\n\t */\n\n\tconst getTail = (list, direction = 0) => {\n\t  if (direction > 0) {\n\t    return list[list.length - 1];\n\t  }\n\n\t  return list[0];\n\t};\n\t/**\n\t * Return true if an object is empty\n\t *\n\t */\n\n\tconst isEmptyObject = obj => {\n\t  return Object.keys(obj).length === 0;\n\t};\n\t/**\n\t * Get the index of an element amongst sibling nodes of the same type\n\t *\n\t */\n\n\tconst nodeIndex = (el, amongst) => {\n\t  if (!el) return -1;\n\t  amongst = amongst || el.nodeName;\n\t  var i = 0;\n\n\t  while (el = el.previousElementSibling) {\n\t    if (el.matches(amongst)) {\n\t      i++;\n\t    }\n\t  }\n\n\t  return i;\n\t};\n\t/**\n\t * Set attributes of an element\n\t *\n\t */\n\n\tconst setAttr = (el, attrs) => {\n\t  iterate(attrs, (val, attr) => {\n\t    if (val == null) {\n\t      el.removeAttribute(attr);\n\t    } else {\n\t      el.setAttribute(attr, '' + val);\n\t    }\n\t  });\n\t};\n\t/**\n\t * Replace a node\n\t */\n\n\tconst replaceNode = (existing, replacement) => {\n\t  if (existing.parentNode) existing.parentNode.replaceChild(replacement, existing);\n\t};\n\n\t/**\n\t * highlight v3 | MIT license | Johann Burkard <jb@eaio.com>\n\t * Highlights arbitrary terms in a node.\n\t *\n\t * - Modified by Marshal <beatgates@gmail.com> 2011-6-24 (added regex)\n\t * - Modified by Brian Reavis <brian@thirdroute.com> 2012-8-27 (cleanup)\n\t */\n\tconst highlight = (element, regex) => {\n\t  if (regex === null) return; // convet string to regex\n\n\t  if (typeof regex === 'string') {\n\t    if (!regex.length) return;\n\t    regex = new RegExp(regex, 'i');\n\t  } // Wrap matching part of text node with highlighting <span>, e.g.\n\t  // Soccer  ->  <span class=\"highlight\">Soc</span>cer  for regex = /soc/i\n\n\n\t  const highlightText = node => {\n\t    var match = node.data.match(regex);\n\n\t    if (match && node.data.length > 0) {\n\t      var spannode = document.createElement('span');\n\t      spannode.className = 'highlight';\n\t      var middlebit = node.splitText(match.index);\n\t      middlebit.splitText(match[0].length);\n\t      var middleclone = middlebit.cloneNode(true);\n\t      spannode.appendChild(middleclone);\n\t      replaceNode(middlebit, spannode);\n\t      return 1;\n\t    }\n\n\t    return 0;\n\t  }; // Recurse element node, looking for child text nodes to highlight, unless element\n\t  // is childless, <script>, <style>, or already highlighted: <span class=\"hightlight\">\n\n\n\t  const highlightChildren = node => {\n\t    if (node.nodeType === 1 && node.childNodes && !/(script|style)/i.test(node.tagName) && (node.className !== 'highlight' || node.tagName !== 'SPAN')) {\n\t      Array.from(node.childNodes).forEach(element => {\n\t        highlightRecursive(element);\n\t      });\n\t    }\n\t  };\n\n\t  const highlightRecursive = node => {\n\t    if (node.nodeType === 3) {\n\t      return highlightText(node);\n\t    }\n\n\t    highlightChildren(node);\n\t    return 0;\n\t  };\n\n\t  highlightRecursive(element);\n\t};\n\t/**\n\t * removeHighlight fn copied from highlight v5 and\n\t * edited to remove with(), pass js strict mode, and use without jquery\n\t */\n\n\tconst removeHighlight = el => {\n\t  var elements = el.querySelectorAll(\"span.highlight\");\n\t  Array.prototype.forEach.call(elements, function (el) {\n\t    var parent = el.parentNode;\n\t    parent.replaceChild(el.firstChild, el);\n\t    parent.normalize();\n\t  });\n\t};\n\n\tconst KEY_A = 65;\n\tconst KEY_RETURN = 13;\n\tconst KEY_ESC = 27;\n\tconst KEY_LEFT = 37;\n\tconst KEY_UP = 38;\n\tconst KEY_RIGHT = 39;\n\tconst KEY_DOWN = 40;\n\tconst KEY_BACKSPACE = 8;\n\tconst KEY_DELETE = 46;\n\tconst KEY_TAB = 9;\n\tconst IS_MAC = typeof navigator === 'undefined' ? false : /Mac/.test(navigator.userAgent);\n\tconst KEY_SHORTCUT = IS_MAC ? 'metaKey' : 'ctrlKey'; // ctrl key or apple key for ma\n\n\tvar defaults = {\n\t  options: [],\n\t  optgroups: [],\n\t  plugins: [],\n\t  delimiter: ',',\n\t  splitOn: null,\n\t  // regexp or string for splitting up values from a paste command\n\t  persist: true,\n\t  diacritics: true,\n\t  create: null,\n\t  createOnBlur: false,\n\t  createFilter: null,\n\t  highlight: true,\n\t  openOnFocus: true,\n\t  shouldOpen: null,\n\t  maxOptions: 50,\n\t  maxItems: null,\n\t  hideSelected: null,\n\t  duplicates: false,\n\t  addPrecedence: false,\n\t  selectOnTab: false,\n\t  preload: null,\n\t  allowEmptyOption: false,\n\t  //closeAfterSelect: false,\n\t  loadThrottle: 300,\n\t  loadingClass: 'loading',\n\t  dataAttr: null,\n\t  //'data-data',\n\t  optgroupField: 'optgroup',\n\t  valueField: 'value',\n\t  labelField: 'text',\n\t  disabledField: 'disabled',\n\t  optgroupLabelField: 'label',\n\t  optgroupValueField: 'value',\n\t  lockOptgroupOrder: false,\n\t  sortField: '$order',\n\t  searchField: ['text'],\n\t  searchConjunction: 'and',\n\t  mode: null,\n\t  wrapperClass: 'ts-wrapper',\n\t  controlClass: 'ts-control',\n\t  dropdownClass: 'ts-dropdown',\n\t  dropdownContentClass: 'ts-dropdown-content',\n\t  itemClass: 'item',\n\t  optionClass: 'option',\n\t  dropdownParent: null,\n\t  controlInput: '<input type=\"text\" autocomplete=\"off\" size=\"1\" />',\n\t  copyClassesToDropdown: false,\n\t  placeholder: null,\n\t  hidePlaceholder: null,\n\t  shouldLoad: function (query) {\n\t    return query.length > 0;\n\t  },\n\n\t  /*\n\t  load                 : null, // function(query, callback) { ... }\n\t  score                : null, // function(search) { ... }\n\t  onInitialize         : null, // function() { ... }\n\t  onChange             : null, // function(value) { ... }\n\t  onItemAdd            : null, // function(value, $item) { ... }\n\t  onItemRemove         : null, // function(value) { ... }\n\t  onClear              : null, // function() { ... }\n\t  onOptionAdd          : null, // function(value, data) { ... }\n\t  onOptionRemove       : null, // function(value) { ... }\n\t  onOptionClear        : null, // function() { ... }\n\t  onOptionGroupAdd     : null, // function(id, data) { ... }\n\t  onOptionGroupRemove  : null, // function(id) { ... }\n\t  onOptionGroupClear   : null, // function() { ... }\n\t  onDropdownOpen       : null, // function(dropdown) { ... }\n\t  onDropdownClose      : null, // function(dropdown) { ... }\n\t  onType               : null, // function(str) { ... }\n\t  onDelete             : null, // function(values) { ... }\n\t  */\n\t  render: {\n\t    /*\n\t    item: null,\n\t    optgroup: null,\n\t    optgroup_header: null,\n\t    option: null,\n\t    option_create: null\n\t    */\n\t  }\n\t};\n\n\t/**\n\t * Converts a scalar to its best string representation\n\t * for hash keys and HTML attribute values.\n\t *\n\t * Transformations:\n\t *   'str'     -> 'str'\n\t *   null      -> ''\n\t *   undefined -> ''\n\t *   true      -> '1'\n\t *   false     -> '0'\n\t *   0         -> '0'\n\t *   1         -> '1'\n\t *\n\t */\n\tconst hash_key = value => {\n\t  if (typeof value === 'undefined' || value === null) return null;\n\t  return get_hash(value);\n\t};\n\tconst get_hash = value => {\n\t  if (typeof value === 'boolean') return value ? '1' : '0';\n\t  return value + '';\n\t};\n\t/**\n\t * Escapes a string for use within HTML.\n\t *\n\t */\n\n\tconst escape_html = str => {\n\t  return (str + '').replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;');\n\t};\n\t/**\n\t * Debounce the user provided load function\n\t *\n\t */\n\n\tconst loadDebounce = (fn, delay) => {\n\t  var timeout;\n\t  return function (value, callback) {\n\t    var self = this;\n\n\t    if (timeout) {\n\t      self.loading = Math.max(self.loading - 1, 0);\n\t      clearTimeout(timeout);\n\t    }\n\n\t    timeout = setTimeout(function () {\n\t      timeout = null;\n\t      self.loadedSearches[value] = true;\n\t      fn.call(self, value, callback);\n\t    }, delay);\n\t  };\n\t};\n\t/**\n\t * Debounce all fired events types listed in `types`\n\t * while executing the provided `fn`.\n\t *\n\t */\n\n\tconst debounce_events = (self, types, fn) => {\n\t  var type;\n\t  var trigger = self.trigger;\n\t  var event_args = {}; // override trigger method\n\n\t  self.trigger = function () {\n\t    var type = arguments[0];\n\n\t    if (types.indexOf(type) !== -1) {\n\t      event_args[type] = arguments;\n\t    } else {\n\t      return trigger.apply(self, arguments);\n\t    }\n\t  }; // invoke provided function\n\n\n\t  fn.apply(self, []);\n\t  self.trigger = trigger; // trigger queued events\n\n\t  for (type of types) {\n\t    if (type in event_args) {\n\t      trigger.apply(self, event_args[type]);\n\t    }\n\t  }\n\t};\n\t/**\n\t * Determines the current selection within a text input control.\n\t * Returns an object containing:\n\t *   - start\n\t *   - length\n\t *\n\t */\n\n\tconst getSelection = input => {\n\t  return {\n\t    start: input.selectionStart || 0,\n\t    length: (input.selectionEnd || 0) - (input.selectionStart || 0)\n\t  };\n\t};\n\t/**\n\t * Prevent default\n\t *\n\t */\n\n\tconst preventDefault = (evt, stop = false) => {\n\t  if (evt) {\n\t    evt.preventDefault();\n\n\t    if (stop) {\n\t      evt.stopPropagation();\n\t    }\n\t  }\n\t};\n\t/**\n\t * Add event helper\n\t *\n\t */\n\n\tconst addEvent = (target, type, callback, options) => {\n\t  target.addEventListener(type, callback, options);\n\t};\n\t/**\n\t * Return true if the requested key is down\n\t * Will return false if more than one control character is pressed ( when [ctrl+shift+a] != [ctrl+a] )\n\t * The current evt may not always set ( eg calling advanceSelection() )\n\t *\n\t */\n\n\tconst isKeyDown = (key_name, evt) => {\n\t  if (!evt) {\n\t    return false;\n\t  }\n\n\t  if (!evt[key_name]) {\n\t    return false;\n\t  }\n\n\t  var count = (evt.altKey ? 1 : 0) + (evt.ctrlKey ? 1 : 0) + (evt.shiftKey ? 1 : 0) + (evt.metaKey ? 1 : 0);\n\n\t  if (count === 1) {\n\t    return true;\n\t  }\n\n\t  return false;\n\t};\n\t/**\n\t * Get the id of an element\n\t * If the id attribute is not set, set the attribute with the given id\n\t *\n\t */\n\n\tconst getId = (el, id) => {\n\t  const existing_id = el.getAttribute('id');\n\n\t  if (existing_id) {\n\t    return existing_id;\n\t  }\n\n\t  el.setAttribute('id', id);\n\t  return id;\n\t};\n\t/**\n\t * Returns a string with backslashes added before characters that need to be escaped.\n\t */\n\n\tconst addSlashes = str => {\n\t  return str.replace(/[\\\\\"']/g, '\\\\$&');\n\t};\n\t/**\n\t *\n\t */\n\n\tconst append = (parent, node) => {\n\t  if (node) parent.append(node);\n\t};\n\n\tfunction getSettings(input, settings_user) {\n\t  var settings = Object.assign({}, defaults, settings_user);\n\t  var attr_data = settings.dataAttr;\n\t  var field_label = settings.labelField;\n\t  var field_value = settings.valueField;\n\t  var field_disabled = settings.disabledField;\n\t  var field_optgroup = settings.optgroupField;\n\t  var field_optgroup_label = settings.optgroupLabelField;\n\t  var field_optgroup_value = settings.optgroupValueField;\n\t  var tag_name = input.tagName.toLowerCase();\n\t  var placeholder = input.getAttribute('placeholder') || input.getAttribute('data-placeholder');\n\n\t  if (!placeholder && !settings.allowEmptyOption) {\n\t    let option = input.querySelector('option[value=\"\"]');\n\n\t    if (option) {\n\t      placeholder = option.textContent;\n\t    }\n\t  }\n\n\t  var settings_element = {\n\t    placeholder: placeholder,\n\t    options: [],\n\t    optgroups: [],\n\t    items: [],\n\t    maxItems: null\n\t  };\n\t  /**\n\t   * Initialize from a <select> element.\n\t   *\n\t   */\n\n\t  var init_select = () => {\n\t    var tagName;\n\t    var options = settings_element.options;\n\t    var optionsMap = {};\n\t    var group_count = 1;\n\n\t    var readData = el => {\n\t      var data = Object.assign({}, el.dataset); // get plain object from DOMStringMap\n\n\t      var json = attr_data && data[attr_data];\n\n\t      if (typeof json === 'string' && json.length) {\n\t        data = Object.assign(data, JSON.parse(json));\n\t      }\n\n\t      return data;\n\t    };\n\n\t    var addOption = (option, group) => {\n\t      var value = hash_key(option.value);\n\t      if (value == null) return;\n\t      if (!value && !settings.allowEmptyOption) return; // if the option already exists, it's probably been\n\t      // duplicated in another optgroup. in this case, push\n\t      // the current group to the \"optgroup\" property on the\n\t      // existing option so that it's rendered in both places.\n\n\t      if (optionsMap.hasOwnProperty(value)) {\n\t        if (group) {\n\t          var arr = optionsMap[value][field_optgroup];\n\n\t          if (!arr) {\n\t            optionsMap[value][field_optgroup] = group;\n\t          } else if (!Array.isArray(arr)) {\n\t            optionsMap[value][field_optgroup] = [arr, group];\n\t          } else {\n\t            arr.push(group);\n\t          }\n\t        }\n\t      } else {\n\t        var option_data = readData(option);\n\t        option_data[field_label] = option_data[field_label] || option.textContent;\n\t        option_data[field_value] = option_data[field_value] || value;\n\t        option_data[field_disabled] = option_data[field_disabled] || option.disabled;\n\t        option_data[field_optgroup] = option_data[field_optgroup] || group;\n\t        option_data.$option = option;\n\t        optionsMap[value] = option_data;\n\t        options.push(option_data);\n\t      }\n\n\t      if (option.selected) {\n\t        settings_element.items.push(value);\n\t      }\n\t    };\n\n\t    var addGroup = optgroup => {\n\t      var id, optgroup_data;\n\t      optgroup_data = readData(optgroup);\n\t      optgroup_data[field_optgroup_label] = optgroup_data[field_optgroup_label] || optgroup.getAttribute('label') || '';\n\t      optgroup_data[field_optgroup_value] = optgroup_data[field_optgroup_value] || group_count++;\n\t      optgroup_data[field_disabled] = optgroup_data[field_disabled] || optgroup.disabled;\n\t      settings_element.optgroups.push(optgroup_data);\n\t      id = optgroup_data[field_optgroup_value];\n\t      iterate(optgroup.children, option => {\n\t        addOption(option, id);\n\t      });\n\t    };\n\n\t    settings_element.maxItems = input.hasAttribute('multiple') ? null : 1;\n\t    iterate(input.children, child => {\n\t      tagName = child.tagName.toLowerCase();\n\n\t      if (tagName === 'optgroup') {\n\t        addGroup(child);\n\t      } else if (tagName === 'option') {\n\t        addOption(child);\n\t      }\n\t    });\n\t  };\n\t  /**\n\t   * Initialize from a <input type=\"text\"> element.\n\t   *\n\t   */\n\n\n\t  var init_textbox = () => {\n\t    const data_raw = input.getAttribute(attr_data);\n\n\t    if (!data_raw) {\n\t      var value = input.value.trim() || '';\n\t      if (!settings.allowEmptyOption && !value.length) return;\n\t      const values = value.split(settings.delimiter);\n\t      iterate(values, value => {\n\t        const option = {};\n\t        option[field_label] = value;\n\t        option[field_value] = value;\n\t        settings_element.options.push(option);\n\t      });\n\t      settings_element.items = values;\n\t    } else {\n\t      settings_element.options = JSON.parse(data_raw);\n\t      iterate(settings_element.options, opt => {\n\t        settings_element.items.push(opt[field_value]);\n\t      });\n\t    }\n\t  };\n\n\t  if (tag_name === 'select') {\n\t    init_select();\n\t  } else {\n\t    init_textbox();\n\t  }\n\n\t  return Object.assign({}, defaults, settings_element, settings_user);\n\t}\n\n\tvar instance_i = 0;\n\tclass TomSelect extends MicroPlugin(MicroEvent) {\n\t  // @deprecated 1.8\n\t  constructor(input_arg, user_settings) {\n\t    super();\n\t    this.control_input = void 0;\n\t    this.wrapper = void 0;\n\t    this.dropdown = void 0;\n\t    this.control = void 0;\n\t    this.dropdown_content = void 0;\n\t    this.focus_node = void 0;\n\t    this.order = 0;\n\t    this.settings = void 0;\n\t    this.input = void 0;\n\t    this.tabIndex = void 0;\n\t    this.is_select_tag = void 0;\n\t    this.rtl = void 0;\n\t    this.inputId = void 0;\n\t    this._destroy = void 0;\n\t    this.sifter = void 0;\n\t    this.isOpen = false;\n\t    this.isDisabled = false;\n\t    this.isRequired = void 0;\n\t    this.isInvalid = false;\n\t    this.isValid = true;\n\t    this.isLocked = false;\n\t    this.isFocused = false;\n\t    this.isInputHidden = false;\n\t    this.isSetup = false;\n\t    this.ignoreFocus = false;\n\t    this.ignoreHover = false;\n\t    this.hasOptions = false;\n\t    this.currentResults = void 0;\n\t    this.lastValue = '';\n\t    this.caretPos = 0;\n\t    this.loading = 0;\n\t    this.loadedSearches = {};\n\t    this.activeOption = null;\n\t    this.activeItems = [];\n\t    this.optgroups = {};\n\t    this.options = {};\n\t    this.userOptions = {};\n\t    this.items = [];\n\t    instance_i++;\n\t    var dir;\n\t    var input = getDom(input_arg);\n\n\t    if (input.tomselect) {\n\t      throw new Error('Tom Select already initialized on this element');\n\t    }\n\n\t    input.tomselect = this; // detect rtl environment\n\n\t    var computedStyle = window.getComputedStyle && window.getComputedStyle(input, null);\n\t    dir = computedStyle.getPropertyValue('direction'); // setup default state\n\n\t    const settings = getSettings(input, user_settings);\n\t    this.settings = settings;\n\t    this.input = input;\n\t    this.tabIndex = input.tabIndex || 0;\n\t    this.is_select_tag = input.tagName.toLowerCase() === 'select';\n\t    this.rtl = /rtl/i.test(dir);\n\t    this.inputId = getId(input, 'tomselect-' + instance_i);\n\t    this.isRequired = input.required; // search system\n\n\t    this.sifter = new Sifter(this.options, {\n\t      diacritics: settings.diacritics\n\t    }); // option-dependent defaults\n\n\t    settings.mode = settings.mode || (settings.maxItems === 1 ? 'single' : 'multi');\n\n\t    if (typeof settings.hideSelected !== 'boolean') {\n\t      settings.hideSelected = settings.mode === 'multi';\n\t    }\n\n\t    if (typeof settings.hidePlaceholder !== 'boolean') {\n\t      settings.hidePlaceholder = settings.mode !== 'multi';\n\t    } // set up createFilter callback\n\n\n\t    var filter = settings.createFilter;\n\n\t    if (typeof filter !== 'function') {\n\t      if (typeof filter === 'string') {\n\t        filter = new RegExp(filter);\n\t      }\n\n\t      if (filter instanceof RegExp) {\n\t        settings.createFilter = input => filter.test(input);\n\t      } else {\n\t        settings.createFilter = value => {\n\t          return this.settings.duplicates || !this.options[value];\n\t        };\n\t      }\n\t    }\n\n\t    this.initializePlugins(settings.plugins);\n\t    this.setupCallbacks();\n\t    this.setupTemplates(); // Create all elements\n\n\t    const wrapper = getDom('<div>');\n\t    const control = getDom('<div>');\n\n\t    const dropdown = this._render('dropdown');\n\n\t    const dropdown_content = getDom(`<div role=\"listbox\" tabindex=\"-1\">`);\n\t    const classes = this.input.getAttribute('class') || '';\n\t    const inputMode = settings.mode;\n\t    var control_input;\n\t    addClasses(wrapper, settings.wrapperClass, classes, inputMode);\n\t    addClasses(control, settings.controlClass);\n\t    append(wrapper, control);\n\t    addClasses(dropdown, settings.dropdownClass, inputMode);\n\n\t    if (settings.copyClassesToDropdown) {\n\t      addClasses(dropdown, classes);\n\t    }\n\n\t    addClasses(dropdown_content, settings.dropdownContentClass);\n\t    append(dropdown, dropdown_content);\n\t    getDom(settings.dropdownParent || wrapper).appendChild(dropdown); // default controlInput\n\n\t    if (isHtmlString(settings.controlInput)) {\n\t      control_input = getDom(settings.controlInput); // set attributes\n\n\t      var attrs = ['autocorrect', 'autocapitalize', 'autocomplete'];\n\t      iterate$1(attrs, attr => {\n\t        if (input.getAttribute(attr)) {\n\t          setAttr(control_input, {\n\t            [attr]: input.getAttribute(attr)\n\t          });\n\t        }\n\t      });\n\t      control_input.tabIndex = -1;\n\t      control.appendChild(control_input);\n\t      this.focus_node = control_input; // dom element\n\t    } else if (settings.controlInput) {\n\t      control_input = getDom(settings.controlInput);\n\t      this.focus_node = control_input;\n\t    } else {\n\t      control_input = getDom('<input/>');\n\t      this.focus_node = control;\n\t    }\n\n\t    this.wrapper = wrapper;\n\t    this.dropdown = dropdown;\n\t    this.dropdown_content = dropdown_content;\n\t    this.control = control;\n\t    this.control_input = control_input;\n\t    this.setup();\n\t  }\n\t  /**\n\t   * set up event bindings.\n\t   *\n\t   */\n\n\n\t  setup() {\n\t    const self = this;\n\t    const settings = self.settings;\n\t    const control_input = self.control_input;\n\t    const dropdown = self.dropdown;\n\t    const dropdown_content = self.dropdown_content;\n\t    const wrapper = self.wrapper;\n\t    const control = self.control;\n\t    const input = self.input;\n\t    const focus_node = self.focus_node;\n\t    const passive_event = {\n\t      passive: true\n\t    };\n\t    const listboxId = self.inputId + '-ts-dropdown';\n\t    setAttr(dropdown_content, {\n\t      id: listboxId\n\t    });\n\t    setAttr(focus_node, {\n\t      role: 'combobox',\n\t      'aria-haspopup': 'listbox',\n\t      'aria-expanded': 'false',\n\t      'aria-controls': listboxId\n\t    });\n\t    const control_id = getId(focus_node, self.inputId + '-ts-control');\n\t    const query = \"label[for='\" + escapeQuery(self.inputId) + \"']\";\n\t    const label = document.querySelector(query);\n\t    const label_click = self.focus.bind(self);\n\n\t    if (label) {\n\t      addEvent(label, 'click', label_click);\n\t      setAttr(label, {\n\t        for: control_id\n\t      });\n\t      const label_id = getId(label, self.inputId + '-ts-label');\n\t      setAttr(focus_node, {\n\t        'aria-labelledby': label_id\n\t      });\n\t      setAttr(dropdown_content, {\n\t        'aria-labelledby': label_id\n\t      });\n\t    }\n\n\t    wrapper.style.width = input.style.width;\n\n\t    if (self.plugins.names.length) {\n\t      const classes_plugins = 'plugin-' + self.plugins.names.join(' plugin-');\n\t      addClasses([wrapper, dropdown], classes_plugins);\n\t    }\n\n\t    if ((settings.maxItems === null || settings.maxItems > 1) && self.is_select_tag) {\n\t      setAttr(input, {\n\t        multiple: 'multiple'\n\t      });\n\t    }\n\n\t    if (settings.placeholder) {\n\t      setAttr(control_input, {\n\t        placeholder: settings.placeholder\n\t      });\n\t    } // if splitOn was not passed in, construct it from the delimiter to allow pasting universally\n\n\n\t    if (!settings.splitOn && settings.delimiter) {\n\t      settings.splitOn = new RegExp('\\\\s*' + escape_regex(settings.delimiter) + '+\\\\s*');\n\t    } // debounce user defined load() if loadThrottle > 0\n\t    // after initializePlugins() so plugins can create/modify user defined loaders\n\n\n\t    if (settings.load && settings.loadThrottle) {\n\t      settings.load = loadDebounce(settings.load, settings.loadThrottle);\n\t    }\n\n\t    self.control_input.type = input.type;\n\t    addEvent(dropdown, 'mousemove', () => {\n\t      self.ignoreHover = false;\n\t    });\n\t    addEvent(dropdown, 'mouseenter', e => {\n\t      var target_match = parentMatch(e.target, '[data-selectable]', dropdown);\n\t      if (target_match) self.onOptionHover(e, target_match);\n\t    }, {\n\t      capture: true\n\t    }); // clicking on an option should select it\n\n\t    addEvent(dropdown, 'click', evt => {\n\t      const option = parentMatch(evt.target, '[data-selectable]');\n\n\t      if (option) {\n\t        self.onOptionSelect(evt, option);\n\t        preventDefault(evt, true);\n\t      }\n\t    });\n\t    addEvent(control, 'click', evt => {\n\t      var target_match = parentMatch(evt.target, '[data-ts-item]', control);\n\n\t      if (target_match && self.onItemSelect(evt, target_match)) {\n\t        preventDefault(evt, true);\n\t        return;\n\t      } // retain focus (see control_input mousedown)\n\n\n\t      if (control_input.value != '') {\n\t        return;\n\t      }\n\n\t      self.onClick();\n\t      preventDefault(evt, true);\n\t    }); // keydown on focus_node for arrow_down/arrow_up\n\n\t    addEvent(focus_node, 'keydown', e => self.onKeyDown(e)); // keypress and input/keyup\n\n\t    addEvent(control_input, 'keypress', e => self.onKeyPress(e));\n\t    addEvent(control_input, 'input', e => self.onInput(e));\n\t    addEvent(focus_node, 'blur', e => self.onBlur(e));\n\t    addEvent(focus_node, 'focus', e => self.onFocus(e));\n\t    addEvent(control_input, 'paste', e => self.onPaste(e));\n\n\t    const doc_mousedown = evt => {\n\t      // blur if target is outside of this instance\n\t      // dropdown is not always inside wrapper\n\t      const target = evt.composedPath()[0];\n\n\t      if (!wrapper.contains(target) && !dropdown.contains(target)) {\n\t        if (self.isFocused) {\n\t          self.blur();\n\t        }\n\n\t        self.inputState();\n\t        return;\n\t      } // retain focus by preventing native handling. if the\n\t      // event target is the input it should not be modified.\n\t      // otherwise, text selection within the input won't work.\n\t      // Fixes bug #212 which is no covered by tests\n\n\n\t      if (target == control_input && self.isOpen) {\n\t        evt.stopPropagation(); // clicking anywhere in the control should not blur the control_input (which would close the dropdown)\n\t      } else {\n\t        preventDefault(evt, true);\n\t      }\n\t    };\n\n\t    const win_scroll = () => {\n\t      if (self.isOpen) {\n\t        self.positionDropdown();\n\t      }\n\t    };\n\n\t    addEvent(document, 'mousedown', doc_mousedown);\n\t    addEvent(window, 'scroll', win_scroll, passive_event);\n\t    addEvent(window, 'resize', win_scroll, passive_event);\n\n\t    this._destroy = () => {\n\t      document.removeEventListener('mousedown', doc_mousedown);\n\t      window.removeEventListener('scroll', win_scroll);\n\t      window.removeEventListener('resize', win_scroll);\n\t      if (label) label.removeEventListener('click', label_click);\n\t    }; // store original html and tab index so that they can be\n\t    // restored when the destroy() method is called.\n\n\n\t    this.revertSettings = {\n\t      innerHTML: input.innerHTML,\n\t      tabIndex: input.tabIndex\n\t    };\n\t    input.tabIndex = -1;\n\t    input.insertAdjacentElement('afterend', self.wrapper);\n\t    self.sync(false);\n\t    settings.items = [];\n\t    delete settings.optgroups;\n\t    delete settings.options;\n\t    addEvent(input, 'invalid', () => {\n\t      if (self.isValid) {\n\t        self.isValid = false;\n\t        self.isInvalid = true;\n\t        self.refreshState();\n\t      }\n\t    });\n\t    self.updateOriginalInput();\n\t    self.refreshItems();\n\t    self.close(false);\n\t    self.inputState();\n\t    self.isSetup = true;\n\n\t    if (input.disabled) {\n\t      self.disable();\n\t    } else {\n\t      self.enable(); //sets tabIndex\n\t    }\n\n\t    self.on('change', this.onChange);\n\t    addClasses(input, 'tomselected', 'ts-hidden-accessible');\n\t    self.trigger('initialize'); // preload options\n\n\t    if (settings.preload === true) {\n\t      self.preload();\n\t    }\n\t  }\n\t  /**\n\t   * Register options and optgroups\n\t   *\n\t   */\n\n\n\t  setupOptions(options = [], optgroups = []) {\n\t    // build options table\n\t    this.addOptions(options); // build optgroup table\n\n\t    iterate$1(optgroups, optgroup => {\n\t      this.registerOptionGroup(optgroup);\n\t    });\n\t  }\n\t  /**\n\t   * Sets up default rendering functions.\n\t   */\n\n\n\t  setupTemplates() {\n\t    var self = this;\n\t    var field_label = self.settings.labelField;\n\t    var field_optgroup = self.settings.optgroupLabelField;\n\t    var templates = {\n\t      'optgroup': data => {\n\t        let optgroup = document.createElement('div');\n\t        optgroup.className = 'optgroup';\n\t        optgroup.appendChild(data.options);\n\t        return optgroup;\n\t      },\n\t      'optgroup_header': (data, escape) => {\n\t        return '<div class=\"optgroup-header\">' + escape(data[field_optgroup]) + '</div>';\n\t      },\n\t      'option': (data, escape) => {\n\t        return '<div>' + escape(data[field_label]) + '</div>';\n\t      },\n\t      'item': (data, escape) => {\n\t        return '<div>' + escape(data[field_label]) + '</div>';\n\t      },\n\t      'option_create': (data, escape) => {\n\t        return '<div class=\"create\">Add <strong>' + escape(data.input) + '</strong>&hellip;</div>';\n\t      },\n\t      'no_results': () => {\n\t        return '<div class=\"no-results\">No results found</div>';\n\t      },\n\t      'loading': () => {\n\t        return '<div class=\"spinner\"></div>';\n\t      },\n\t      'not_loading': () => {},\n\t      'dropdown': () => {\n\t        return '<div></div>';\n\t      }\n\t    };\n\t    self.settings.render = Object.assign({}, templates, self.settings.render);\n\t  }\n\t  /**\n\t   * Maps fired events to callbacks provided\n\t   * in the settings used when creating the control.\n\t   */\n\n\n\t  setupCallbacks() {\n\t    var key, fn;\n\t    var callbacks = {\n\t      'initialize': 'onInitialize',\n\t      'change': 'onChange',\n\t      'item_add': 'onItemAdd',\n\t      'item_remove': 'onItemRemove',\n\t      'item_select': 'onItemSelect',\n\t      'clear': 'onClear',\n\t      'option_add': 'onOptionAdd',\n\t      'option_remove': 'onOptionRemove',\n\t      'option_clear': 'onOptionClear',\n\t      'optgroup_add': 'onOptionGroupAdd',\n\t      'optgroup_remove': 'onOptionGroupRemove',\n\t      'optgroup_clear': 'onOptionGroupClear',\n\t      'dropdown_open': 'onDropdownOpen',\n\t      'dropdown_close': 'onDropdownClose',\n\t      'type': 'onType',\n\t      'load': 'onLoad',\n\t      'focus': 'onFocus',\n\t      'blur': 'onBlur'\n\t    };\n\n\t    for (key in callbacks) {\n\t      fn = this.settings[callbacks[key]];\n\t      if (fn) this.on(key, fn);\n\t    }\n\t  }\n\t  /**\n\t   * Sync the Tom Select instance with the original input or select\n\t   *\n\t   */\n\n\n\t  sync(get_settings = true) {\n\t    const self = this;\n\t    const settings = get_settings ? getSettings(self.input, {\n\t      delimiter: self.settings.delimiter\n\t    }) : self.settings;\n\t    self.setupOptions(settings.options, settings.optgroups);\n\t    self.setValue(settings.items || [], true); // silent prevents recursion\n\n\t    self.lastQuery = null; // so updated options will be displayed in dropdown\n\t  }\n\t  /**\n\t   * Triggered when the main control element\n\t   * has a click event.\n\t   *\n\t   */\n\n\n\t  onClick() {\n\t    var self = this;\n\n\t    if (self.activeItems.length > 0) {\n\t      self.clearActiveItems();\n\t      self.focus();\n\t      return;\n\t    }\n\n\t    if (self.isFocused && self.isOpen) {\n\t      self.blur();\n\t    } else {\n\t      self.focus();\n\t    }\n\t  }\n\t  /**\n\t   * @deprecated v1.7\n\t   *\n\t   */\n\n\n\t  onMouseDown() {}\n\t  /**\n\t   * Triggered when the value of the control has been changed.\n\t   * This should propagate the event to the original DOM\n\t   * input / select element.\n\t   */\n\n\n\t  onChange() {\n\t    triggerEvent(this.input, 'input');\n\t    triggerEvent(this.input, 'change');\n\t  }\n\t  /**\n\t   * Triggered on <input> paste.\n\t   *\n\t   */\n\n\n\t  onPaste(e) {\n\t    var self = this;\n\n\t    if (self.isInputHidden || self.isLocked) {\n\t      preventDefault(e);\n\t      return;\n\t    } // If a regex or string is included, this will split the pasted\n\t    // input and create Items for each separate value\n\n\n\t    if (!self.settings.splitOn) {\n\t      return;\n\t    } // Wait for pasted text to be recognized in value\n\n\n\t    setTimeout(() => {\n\t      var pastedText = self.inputValue();\n\n\t      if (!pastedText.match(self.settings.splitOn)) {\n\t        return;\n\t      }\n\n\t      var splitInput = pastedText.trim().split(self.settings.splitOn);\n\t      iterate$1(splitInput, piece => {\n\t        const hash = hash_key(piece);\n\n\t        if (hash) {\n\t          if (this.options[piece]) {\n\t            self.addItem(piece);\n\t          } else {\n\t            self.createItem(piece);\n\t          }\n\t        }\n\t      });\n\t    }, 0);\n\t  }\n\t  /**\n\t   * Triggered on <input> keypress.\n\t   *\n\t   */\n\n\n\t  onKeyPress(e) {\n\t    var self = this;\n\n\t    if (self.isLocked) {\n\t      preventDefault(e);\n\t      return;\n\t    }\n\n\t    var character = String.fromCharCode(e.keyCode || e.which);\n\n\t    if (self.settings.create && self.settings.mode === 'multi' && character === self.settings.delimiter) {\n\t      self.createItem();\n\t      preventDefault(e);\n\t      return;\n\t    }\n\t  }\n\t  /**\n\t   * Triggered on <input> keydown.\n\t   *\n\t   */\n\n\n\t  onKeyDown(e) {\n\t    var self = this;\n\t    self.ignoreHover = true;\n\n\t    if (self.isLocked) {\n\t      if (e.keyCode !== KEY_TAB) {\n\t        preventDefault(e);\n\t      }\n\n\t      return;\n\t    }\n\n\t    switch (e.keyCode) {\n\t      // ctrl+A: select all\n\t      case KEY_A:\n\t        if (isKeyDown(KEY_SHORTCUT, e)) {\n\t          if (self.control_input.value == '') {\n\t            preventDefault(e);\n\t            self.selectAll();\n\t            return;\n\t          }\n\t        }\n\n\t        break;\n\t      // esc: close dropdown\n\n\t      case KEY_ESC:\n\t        if (self.isOpen) {\n\t          preventDefault(e, true);\n\t          self.close();\n\t        }\n\n\t        self.clearActiveItems();\n\t        return;\n\t      // down: open dropdown or move selection down\n\n\t      case KEY_DOWN:\n\t        if (!self.isOpen && self.hasOptions) {\n\t          self.open();\n\t        } else if (self.activeOption) {\n\t          let next = self.getAdjacent(self.activeOption, 1);\n\t          if (next) self.setActiveOption(next);\n\t        }\n\n\t        preventDefault(e);\n\t        return;\n\t      // up: move selection up\n\n\t      case KEY_UP:\n\t        if (self.activeOption) {\n\t          let prev = self.getAdjacent(self.activeOption, -1);\n\t          if (prev) self.setActiveOption(prev);\n\t        }\n\n\t        preventDefault(e);\n\t        return;\n\t      // return: select active option\n\n\t      case KEY_RETURN:\n\t        if (self.canSelect(self.activeOption)) {\n\t          self.onOptionSelect(e, self.activeOption);\n\t          preventDefault(e); // if the option_create=null, the dropdown might be closed\n\t        } else if (self.settings.create && self.createItem()) {\n\t          preventDefault(e); // don't submit form when searching for a value\n\t        } else if (document.activeElement == self.control_input && self.isOpen) {\n\t          preventDefault(e);\n\t        }\n\n\t        return;\n\t      // left: modifiy item selection to the left\n\n\t      case KEY_LEFT:\n\t        self.advanceSelection(-1, e);\n\t        return;\n\t      // right: modifiy item selection to the right\n\n\t      case KEY_RIGHT:\n\t        self.advanceSelection(1, e);\n\t        return;\n\t      // tab: select active option and/or create item\n\n\t      case KEY_TAB:\n\t        if (self.settings.selectOnTab) {\n\t          if (self.canSelect(self.activeOption)) {\n\t            self.onOptionSelect(e, self.activeOption); // prevent default [tab] behaviour of jump to the next field\n\t            // if select isFull, then the dropdown won't be open and [tab] will work normally\n\n\t            preventDefault(e);\n\t          }\n\n\t          if (self.settings.create && self.createItem()) {\n\t            preventDefault(e);\n\t          }\n\t        }\n\n\t        return;\n\t      // delete|backspace: delete items\n\n\t      case KEY_BACKSPACE:\n\t      case KEY_DELETE:\n\t        self.deleteSelection(e);\n\t        return;\n\t    } // don't enter text in the control_input when active items are selected\n\n\n\t    if (self.isInputHidden && !isKeyDown(KEY_SHORTCUT, e)) {\n\t      preventDefault(e);\n\t    }\n\t  }\n\t  /**\n\t   * Triggered on <input> keyup.\n\t   *\n\t   */\n\n\n\t  onInput(e) {\n\t    var self = this;\n\n\t    if (self.isLocked) {\n\t      return;\n\t    }\n\n\t    var value = self.inputValue();\n\n\t    if (self.lastValue !== value) {\n\t      self.lastValue = value;\n\n\t      if (self.settings.shouldLoad.call(self, value)) {\n\t        self.load(value);\n\t      }\n\n\t      self.refreshOptions();\n\t      self.trigger('type', value);\n\t    }\n\t  }\n\t  /**\n\t   * Triggered when the user rolls over\n\t   * an option in the autocomplete dropdown menu.\n\t   *\n\t   */\n\n\n\t  onOptionHover(evt, option) {\n\t    if (this.ignoreHover) return;\n\t    this.setActiveOption(option, false);\n\t  }\n\t  /**\n\t   * Triggered on <input> focus.\n\t   *\n\t   */\n\n\n\t  onFocus(e) {\n\t    var self = this;\n\t    var wasFocused = self.isFocused;\n\n\t    if (self.isDisabled) {\n\t      self.blur();\n\t      preventDefault(e);\n\t      return;\n\t    }\n\n\t    if (self.ignoreFocus) return;\n\t    self.isFocused = true;\n\t    if (self.settings.preload === 'focus') self.preload();\n\t    if (!wasFocused) self.trigger('focus');\n\n\t    if (!self.activeItems.length) {\n\t      self.showInput();\n\t      self.refreshOptions(!!self.settings.openOnFocus);\n\t    }\n\n\t    self.refreshState();\n\t  }\n\t  /**\n\t   * Triggered on <input> blur.\n\t   *\n\t   */\n\n\n\t  onBlur(e) {\n\t    if (document.hasFocus() === false) return;\n\t    var self = this;\n\t    if (!self.isFocused) return;\n\t    self.isFocused = false;\n\t    self.ignoreFocus = false;\n\n\t    var deactivate = () => {\n\t      self.close();\n\t      self.setActiveItem();\n\t      self.setCaret(self.items.length);\n\t      self.trigger('blur');\n\t    };\n\n\t    if (self.settings.create && self.settings.createOnBlur) {\n\t      self.createItem(null, deactivate);\n\t    } else {\n\t      deactivate();\n\t    }\n\t  }\n\t  /**\n\t   * Triggered when the user clicks on an option\n\t   * in the autocomplete dropdown menu.\n\t   *\n\t   */\n\n\n\t  onOptionSelect(evt, option) {\n\t    var value,\n\t        self = this; // should not be possible to trigger a option under a disabled optgroup\n\n\t    if (option.parentElement && option.parentElement.matches('[data-disabled]')) {\n\t      return;\n\t    }\n\n\t    if (option.classList.contains('create')) {\n\t      self.createItem(null, () => {\n\t        if (self.settings.closeAfterSelect) {\n\t          self.close();\n\t        }\n\t      });\n\t    } else {\n\t      value = option.dataset.value;\n\n\t      if (typeof value !== 'undefined') {\n\t        self.lastQuery = null;\n\t        self.addItem(value);\n\n\t        if (self.settings.closeAfterSelect) {\n\t          self.close();\n\t        }\n\n\t        if (!self.settings.hideSelected && evt.type && /click/.test(evt.type)) {\n\t          self.setActiveOption(option);\n\t        }\n\t      }\n\t    }\n\t  }\n\t  /**\n\t   * Return true if the given option can be selected\n\t   *\n\t   */\n\n\n\t  canSelect(option) {\n\t    if (this.isOpen && option && this.dropdown_content.contains(option)) {\n\t      return true;\n\t    }\n\n\t    return false;\n\t  }\n\t  /**\n\t   * Triggered when the user clicks on an item\n\t   * that has been selected.\n\t   *\n\t   */\n\n\n\t  onItemSelect(evt, item) {\n\t    var self = this;\n\n\t    if (!self.isLocked && self.settings.mode === 'multi') {\n\t      preventDefault(evt);\n\t      self.setActiveItem(item, evt);\n\t      return true;\n\t    }\n\n\t    return false;\n\t  }\n\t  /**\n\t   * Determines whether or not to invoke\n\t   * the user-provided option provider / loader\n\t   *\n\t   * Note, there is a subtle difference between\n\t   * this.canLoad() and this.settings.shouldLoad();\n\t   *\n\t   *\t- settings.shouldLoad() is a user-input validator.\n\t   *\tWhen false is returned, the not_loading template\n\t   *\twill be added to the dropdown\n\t   *\n\t   *\t- canLoad() is lower level validator that checks\n\t   * \tthe Tom Select instance. There is no inherent user\n\t   *\tfeedback when canLoad returns false\n\t   *\n\t   */\n\n\n\t  canLoad(value) {\n\t    if (!this.settings.load) return false;\n\t    if (this.loadedSearches.hasOwnProperty(value)) return false;\n\t    return true;\n\t  }\n\t  /**\n\t   * Invokes the user-provided option provider / loader.\n\t   *\n\t   */\n\n\n\t  load(value) {\n\t    const self = this;\n\t    if (!self.canLoad(value)) return;\n\t    addClasses(self.wrapper, self.settings.loadingClass);\n\t    self.loading++;\n\t    const callback = self.loadCallback.bind(self);\n\t    self.settings.load.call(self, value, callback);\n\t  }\n\t  /**\n\t   * Invoked by the user-provided option provider\n\t   *\n\t   */\n\n\n\t  loadCallback(options, optgroups) {\n\t    const self = this;\n\t    self.loading = Math.max(self.loading - 1, 0);\n\t    self.lastQuery = null;\n\t    self.clearActiveOption(); // when new results load, focus should be on first option\n\n\t    self.setupOptions(options, optgroups);\n\t    self.refreshOptions(self.isFocused && !self.isInputHidden);\n\n\t    if (!self.loading) {\n\t      removeClasses(self.wrapper, self.settings.loadingClass);\n\t    }\n\n\t    self.trigger('load', options, optgroups);\n\t  }\n\n\t  preload() {\n\t    var classList = this.wrapper.classList;\n\t    if (classList.contains('preloaded')) return;\n\t    classList.add('preloaded');\n\t    this.load('');\n\t  }\n\t  /**\n\t   * Sets the input field of the control to the specified value.\n\t   *\n\t   */\n\n\n\t  setTextboxValue(value = '') {\n\t    var input = this.control_input;\n\t    var changed = input.value !== value;\n\n\t    if (changed) {\n\t      input.value = value;\n\t      triggerEvent(input, 'update');\n\t      this.lastValue = value;\n\t    }\n\t  }\n\t  /**\n\t   * Returns the value of the control. If multiple items\n\t   * can be selected (e.g. <select multiple>), this returns\n\t   * an array. If only one item can be selected, this\n\t   * returns a string.\n\t   *\n\t   */\n\n\n\t  getValue() {\n\t    if (this.is_select_tag && this.input.hasAttribute('multiple')) {\n\t      return this.items;\n\t    }\n\n\t    return this.items.join(this.settings.delimiter);\n\t  }\n\t  /**\n\t   * Resets the selected items to the given value.\n\t   *\n\t   */\n\n\n\t  setValue(value, silent) {\n\t    var events = silent ? [] : ['change'];\n\t    debounce_events(this, events, () => {\n\t      this.clear(silent);\n\t      this.addItems(value, silent);\n\t    });\n\t  }\n\t  /**\n\t   * Resets the number of max items to the given value\n\t   *\n\t   */\n\n\n\t  setMaxItems(value) {\n\t    if (value === 0) value = null; //reset to unlimited items.\n\n\t    this.settings.maxItems = value;\n\t    this.refreshState();\n\t  }\n\t  /**\n\t   * Sets the selected item.\n\t   *\n\t   */\n\n\n\t  setActiveItem(item, e) {\n\t    var self = this;\n\t    var eventName;\n\t    var i, begin, end, swap;\n\t    var last;\n\t    if (self.settings.mode === 'single') return; // clear the active selection\n\n\t    if (!item) {\n\t      self.clearActiveItems();\n\n\t      if (self.isFocused) {\n\t        self.showInput();\n\t      }\n\n\t      return;\n\t    } // modify selection\n\n\n\t    eventName = e && e.type.toLowerCase();\n\n\t    if (eventName === 'click' && isKeyDown('shiftKey', e) && self.activeItems.length) {\n\t      last = self.getLastActive();\n\t      begin = Array.prototype.indexOf.call(self.control.children, last);\n\t      end = Array.prototype.indexOf.call(self.control.children, item);\n\n\t      if (begin > end) {\n\t        swap = begin;\n\t        begin = end;\n\t        end = swap;\n\t      }\n\n\t      for (i = begin; i <= end; i++) {\n\t        item = self.control.children[i];\n\n\t        if (self.activeItems.indexOf(item) === -1) {\n\t          self.setActiveItemClass(item);\n\t        }\n\t      }\n\n\t      preventDefault(e);\n\t    } else if (eventName === 'click' && isKeyDown(KEY_SHORTCUT, e) || eventName === 'keydown' && isKeyDown('shiftKey', e)) {\n\t      if (item.classList.contains('active')) {\n\t        self.removeActiveItem(item);\n\t      } else {\n\t        self.setActiveItemClass(item);\n\t      }\n\t    } else {\n\t      self.clearActiveItems();\n\t      self.setActiveItemClass(item);\n\t    } // ensure control has focus\n\n\n\t    self.hideInput();\n\n\t    if (!self.isFocused) {\n\t      self.focus();\n\t    }\n\t  }\n\t  /**\n\t   * Set the active and last-active classes\n\t   *\n\t   */\n\n\n\t  setActiveItemClass(item) {\n\t    const self = this;\n\t    const last_active = self.control.querySelector('.last-active');\n\t    if (last_active) removeClasses(last_active, 'last-active');\n\t    addClasses(item, 'active last-active');\n\t    self.trigger('item_select', item);\n\n\t    if (self.activeItems.indexOf(item) == -1) {\n\t      self.activeItems.push(item);\n\t    }\n\t  }\n\t  /**\n\t   * Remove active item\n\t   *\n\t   */\n\n\n\t  removeActiveItem(item) {\n\t    var idx = this.activeItems.indexOf(item);\n\t    this.activeItems.splice(idx, 1);\n\t    removeClasses(item, 'active');\n\t  }\n\t  /**\n\t   * Clears all the active items\n\t   *\n\t   */\n\n\n\t  clearActiveItems() {\n\t    removeClasses(this.activeItems, 'active');\n\t    this.activeItems = [];\n\t  }\n\t  /**\n\t   * Sets the selected item in the dropdown menu\n\t   * of available options.\n\t   *\n\t   */\n\n\n\t  setActiveOption(option, scroll = true) {\n\t    if (option === this.activeOption) {\n\t      return;\n\t    }\n\n\t    this.clearActiveOption();\n\t    if (!option) return;\n\t    this.activeOption = option;\n\t    setAttr(this.focus_node, {\n\t      'aria-activedescendant': option.getAttribute('id')\n\t    });\n\t    setAttr(option, {\n\t      'aria-selected': 'true'\n\t    });\n\t    addClasses(option, 'active');\n\t    if (scroll) this.scrollToOption(option);\n\t  }\n\t  /**\n\t   * Sets the dropdown_content scrollTop to display the option\n\t   *\n\t   */\n\n\n\t  scrollToOption(option, behavior) {\n\t    if (!option) return;\n\t    const content = this.dropdown_content;\n\t    const height_menu = content.clientHeight;\n\t    const scrollTop = content.scrollTop || 0;\n\t    const height_item = option.offsetHeight;\n\t    const y = option.getBoundingClientRect().top - content.getBoundingClientRect().top + scrollTop;\n\n\t    if (y + height_item > height_menu + scrollTop) {\n\t      this.scroll(y - height_menu + height_item, behavior);\n\t    } else if (y < scrollTop) {\n\t      this.scroll(y, behavior);\n\t    }\n\t  }\n\t  /**\n\t   * Scroll the dropdown to the given position\n\t   *\n\t   */\n\n\n\t  scroll(scrollTop, behavior) {\n\t    const content = this.dropdown_content;\n\n\t    if (behavior) {\n\t      content.style.scrollBehavior = behavior;\n\t    }\n\n\t    content.scrollTop = scrollTop;\n\t    content.style.scrollBehavior = '';\n\t  }\n\t  /**\n\t   * Clears the active option\n\t   *\n\t   */\n\n\n\t  clearActiveOption() {\n\t    if (this.activeOption) {\n\t      removeClasses(this.activeOption, 'active');\n\t      setAttr(this.activeOption, {\n\t        'aria-selected': null\n\t      });\n\t    }\n\n\t    this.activeOption = null;\n\t    setAttr(this.focus_node, {\n\t      'aria-activedescendant': null\n\t    });\n\t  }\n\t  /**\n\t   * Selects all items (CTRL + A).\n\t   */\n\n\n\t  selectAll() {\n\t    const self = this;\n\t    if (self.settings.mode === 'single') return;\n\t    const activeItems = self.controlChildren();\n\t    if (!activeItems.length) return;\n\t    self.hideInput();\n\t    self.close();\n\t    self.activeItems = activeItems;\n\t    iterate$1(activeItems, item => {\n\t      self.setActiveItemClass(item);\n\t    });\n\t  }\n\t  /**\n\t   * Determines if the control_input should be in a hidden or visible state\n\t   *\n\t   */\n\n\n\t  inputState() {\n\t    var self = this;\n\t    if (!self.control.contains(self.control_input)) return;\n\t    setAttr(self.control_input, {\n\t      placeholder: self.settings.placeholder\n\t    });\n\n\t    if (self.activeItems.length > 0 || !self.isFocused && self.settings.hidePlaceholder && self.items.length > 0) {\n\t      self.setTextboxValue();\n\t      self.isInputHidden = true;\n\t    } else {\n\t      if (self.settings.hidePlaceholder && self.items.length > 0) {\n\t        setAttr(self.control_input, {\n\t          placeholder: ''\n\t        });\n\t      }\n\n\t      self.isInputHidden = false;\n\t    }\n\n\t    self.wrapper.classList.toggle('input-hidden', self.isInputHidden);\n\t  }\n\t  /**\n\t   * Hides the input element out of view, while\n\t   * retaining its focus.\n\t   * @deprecated 1.3\n\t   */\n\n\n\t  hideInput() {\n\t    this.inputState();\n\t  }\n\t  /**\n\t   * Restores input visibility.\n\t   * @deprecated 1.3\n\t   */\n\n\n\t  showInput() {\n\t    this.inputState();\n\t  }\n\t  /**\n\t   * Get the input value\n\t   */\n\n\n\t  inputValue() {\n\t    return this.control_input.value.trim();\n\t  }\n\t  /**\n\t   * Gives the control focus.\n\t   */\n\n\n\t  focus() {\n\t    var self = this;\n\t    if (self.isDisabled) return;\n\t    self.ignoreFocus = true;\n\n\t    if (self.control_input.offsetWidth) {\n\t      self.control_input.focus();\n\t    } else {\n\t      self.focus_node.focus();\n\t    }\n\n\t    setTimeout(() => {\n\t      self.ignoreFocus = false;\n\t      self.onFocus();\n\t    }, 0);\n\t  }\n\t  /**\n\t   * Forces the control out of focus.\n\t   *\n\t   */\n\n\n\t  blur() {\n\t    this.focus_node.blur();\n\t    this.onBlur();\n\t  }\n\t  /**\n\t   * Returns a function that scores an object\n\t   * to show how good of a match it is to the\n\t   * provided query.\n\t   *\n\t   * @return {function}\n\t   */\n\n\n\t  getScoreFunction(query) {\n\t    return this.sifter.getScoreFunction(query, this.getSearchOptions());\n\t  }\n\t  /**\n\t   * Returns search options for sifter (the system\n\t   * for scoring and sorting results).\n\t   *\n\t   * @see https://github.com/orchidjs/sifter.js\n\t   * @return {object}\n\t   */\n\n\n\t  getSearchOptions() {\n\t    var settings = this.settings;\n\t    var sort = settings.sortField;\n\n\t    if (typeof settings.sortField === 'string') {\n\t      sort = [{\n\t        field: settings.sortField\n\t      }];\n\t    }\n\n\t    return {\n\t      fields: settings.searchField,\n\t      conjunction: settings.searchConjunction,\n\t      sort: sort,\n\t      nesting: settings.nesting\n\t    };\n\t  }\n\t  /**\n\t   * Searches through available options and returns\n\t   * a sorted array of matches.\n\t   *\n\t   */\n\n\n\t  search(query) {\n\t    var result, calculateScore;\n\t    var self = this;\n\t    var options = this.getSearchOptions(); // validate user-provided result scoring function\n\n\t    if (self.settings.score) {\n\t      calculateScore = self.settings.score.call(self, query);\n\n\t      if (typeof calculateScore !== 'function') {\n\t        throw new Error('Tom Select \"score\" setting must be a function that returns a function');\n\t      }\n\t    } // perform search\n\n\n\t    if (query !== self.lastQuery) {\n\t      self.lastQuery = query;\n\t      result = self.sifter.search(query, Object.assign(options, {\n\t        score: calculateScore\n\t      }));\n\t      self.currentResults = result;\n\t    } else {\n\t      result = Object.assign({}, self.currentResults);\n\t    } // filter out selected items\n\n\n\t    if (self.settings.hideSelected) {\n\t      result.items = result.items.filter(item => {\n\t        let hashed = hash_key(item.id);\n\t        return !(hashed && self.items.indexOf(hashed) !== -1);\n\t      });\n\t    }\n\n\t    return result;\n\t  }\n\t  /**\n\t   * Refreshes the list of available options shown\n\t   * in the autocomplete dropdown menu.\n\t   *\n\t   */\n\n\n\t  refreshOptions(triggerDropdown = true) {\n\t    var i, j, k, n, optgroup, optgroups, html, has_create_option, active_group;\n\t    var create;\n\t    const groups = {};\n\t    const groups_order = [];\n\t    var self = this;\n\t    var query = self.inputValue();\n\t    const same_query = query === self.lastQuery || query == '' && self.lastQuery == null;\n\t    var results = self.search(query);\n\t    var active_option = null;\n\t    var show_dropdown = self.settings.shouldOpen || false;\n\t    var dropdown_content = self.dropdown_content;\n\n\t    if (same_query) {\n\t      active_option = self.activeOption;\n\n\t      if (active_option) {\n\t        active_group = active_option.closest('[data-group]');\n\t      }\n\t    } // build markup\n\n\n\t    n = results.items.length;\n\n\t    if (typeof self.settings.maxOptions === 'number') {\n\t      n = Math.min(n, self.settings.maxOptions);\n\t    }\n\n\t    if (n > 0) {\n\t      show_dropdown = true;\n\t    } // render and group available options individually\n\n\n\t    for (i = 0; i < n; i++) {\n\t      // get option dom element\n\t      let item = results.items[i];\n\t      if (!item) continue;\n\t      let opt_value = item.id;\n\t      let option = self.options[opt_value];\n\t      if (option === undefined) continue;\n\t      let opt_hash = get_hash(opt_value);\n\t      let option_el = self.getOption(opt_hash, true); // toggle 'selected' class\n\n\t      if (!self.settings.hideSelected) {\n\t        option_el.classList.toggle('selected', self.items.includes(opt_hash));\n\t      }\n\n\t      optgroup = option[self.settings.optgroupField] || '';\n\t      optgroups = Array.isArray(optgroup) ? optgroup : [optgroup];\n\n\t      for (j = 0, k = optgroups && optgroups.length; j < k; j++) {\n\t        optgroup = optgroups[j];\n\n\t        if (!self.optgroups.hasOwnProperty(optgroup)) {\n\t          optgroup = '';\n\t        }\n\n\t        let group_fragment = groups[optgroup];\n\n\t        if (group_fragment === undefined) {\n\t          group_fragment = document.createDocumentFragment();\n\t          groups_order.push(optgroup);\n\t        } // nodes can only have one parent, so if the option is in mutple groups, we need a clone\n\n\n\t        if (j > 0) {\n\t          option_el = option_el.cloneNode(true);\n\t          setAttr(option_el, {\n\t            id: option.$id + '-clone-' + j,\n\t            'aria-selected': null\n\t          });\n\t          option_el.classList.add('ts-cloned');\n\t          removeClasses(option_el, 'active'); // make sure we keep the activeOption in the same group\n\n\t          if (self.activeOption && self.activeOption.dataset.value == opt_value) {\n\t            if (active_group && active_group.dataset.group === optgroup.toString()) {\n\t              active_option = option_el;\n\t            }\n\t          }\n\t        }\n\n\t        group_fragment.appendChild(option_el);\n\t        groups[optgroup] = group_fragment;\n\t      }\n\t    } // sort optgroups\n\n\n\t    if (self.settings.lockOptgroupOrder) {\n\t      groups_order.sort((a, b) => {\n\t        const grp_a = self.optgroups[a];\n\t        const grp_b = self.optgroups[b];\n\t        const a_order = grp_a && grp_a.$order || 0;\n\t        const b_order = grp_b && grp_b.$order || 0;\n\t        return a_order - b_order;\n\t      });\n\t    } // render optgroup headers & join groups\n\n\n\t    html = document.createDocumentFragment();\n\t    iterate$1(groups_order, optgroup => {\n\t      let group_fragment = groups[optgroup];\n\t      if (!group_fragment || !group_fragment.children.length) return;\n\t      let group_heading = self.optgroups[optgroup];\n\n\t      if (group_heading !== undefined) {\n\t        let group_options = document.createDocumentFragment();\n\t        let header = self.render('optgroup_header', group_heading);\n\t        append(group_options, header);\n\t        append(group_options, group_fragment);\n\t        let group_html = self.render('optgroup', {\n\t          group: group_heading,\n\t          options: group_options\n\t        });\n\t        append(html, group_html);\n\t      } else {\n\t        append(html, group_fragment);\n\t      }\n\t    });\n\t    dropdown_content.innerHTML = '';\n\t    append(dropdown_content, html); // highlight matching terms inline\n\n\t    if (self.settings.highlight) {\n\t      removeHighlight(dropdown_content);\n\n\t      if (results.query.length && results.tokens.length) {\n\t        iterate$1(results.tokens, tok => {\n\t          highlight(dropdown_content, tok.regex);\n\t        });\n\t      }\n\t    } // helper method for adding templates to dropdown\n\n\n\t    var add_template = template => {\n\t      let content = self.render(template, {\n\t        input: query\n\t      });\n\n\t      if (content) {\n\t        show_dropdown = true;\n\t        dropdown_content.insertBefore(content, dropdown_content.firstChild);\n\t      }\n\n\t      return content;\n\t    }; // add loading message\n\n\n\t    if (self.loading) {\n\t      add_template('loading'); // invalid query\n\t    } else if (!self.settings.shouldLoad.call(self, query)) {\n\t      add_template('not_loading'); // add no_results message\n\t    } else if (results.items.length === 0) {\n\t      add_template('no_results');\n\t    } // add create option\n\n\n\t    has_create_option = self.canCreate(query);\n\n\t    if (has_create_option) {\n\t      create = add_template('option_create');\n\t    } // activate\n\n\n\t    self.hasOptions = results.items.length > 0 || has_create_option;\n\n\t    if (show_dropdown) {\n\t      if (results.items.length > 0) {\n\t        if (!active_option && self.settings.mode === 'single' && self.items[0] != undefined) {\n\t          active_option = self.getOption(self.items[0]);\n\t        }\n\n\t        if (!dropdown_content.contains(active_option)) {\n\t          let active_index = 0;\n\n\t          if (create && !self.settings.addPrecedence) {\n\t            active_index = 1;\n\t          }\n\n\t          active_option = self.selectable()[active_index];\n\t        }\n\t      } else if (create) {\n\t        active_option = create;\n\t      }\n\n\t      if (triggerDropdown && !self.isOpen) {\n\t        self.open();\n\t        self.scrollToOption(active_option, 'auto');\n\t      }\n\n\t      self.setActiveOption(active_option);\n\t    } else {\n\t      self.clearActiveOption();\n\n\t      if (triggerDropdown && self.isOpen) {\n\t        self.close(false); // if create_option=null, we want the dropdown to close but not reset the textbox value\n\t      }\n\t    }\n\t  }\n\t  /**\n\t   * Return list of selectable options\n\t   *\n\t   */\n\n\n\t  selectable() {\n\t    return this.dropdown_content.querySelectorAll('[data-selectable]');\n\t  }\n\t  /**\n\t   * Adds an available option. If it already exists,\n\t   * nothing will happen. Note: this does not refresh\n\t   * the options list dropdown (use `refreshOptions`\n\t   * for that).\n\t   *\n\t   * Usage:\n\t   *\n\t   *   this.addOption(data)\n\t   *\n\t   */\n\n\n\t  addOption(data, user_created = false) {\n\t    const self = this; // @deprecated 1.7.7\n\t    // use addOptions( array, user_created ) for adding multiple options\n\n\t    if (Array.isArray(data)) {\n\t      self.addOptions(data, user_created);\n\t      return false;\n\t    }\n\n\t    const key = hash_key(data[self.settings.valueField]);\n\n\t    if (key === null || self.options.hasOwnProperty(key)) {\n\t      return false;\n\t    }\n\n\t    data.$order = data.$order || ++self.order;\n\t    data.$id = self.inputId + '-opt-' + data.$order;\n\t    self.options[key] = data;\n\t    self.lastQuery = null;\n\n\t    if (user_created) {\n\t      self.userOptions[key] = user_created;\n\t      self.trigger('option_add', key, data);\n\t    }\n\n\t    return key;\n\t  }\n\t  /**\n\t   * Add multiple options\n\t   *\n\t   */\n\n\n\t  addOptions(data, user_created = false) {\n\t    iterate$1(data, dat => {\n\t      this.addOption(dat, user_created);\n\t    });\n\t  }\n\t  /**\n\t   * @deprecated 1.7.7\n\t   */\n\n\n\t  registerOption(data) {\n\t    return this.addOption(data);\n\t  }\n\t  /**\n\t   * Registers an option group to the pool of option groups.\n\t   *\n\t   * @return {boolean|string}\n\t   */\n\n\n\t  registerOptionGroup(data) {\n\t    var key = hash_key(data[this.settings.optgroupValueField]);\n\t    if (key === null) return false;\n\t    data.$order = data.$order || ++this.order;\n\t    this.optgroups[key] = data;\n\t    return key;\n\t  }\n\t  /**\n\t   * Registers a new optgroup for options\n\t   * to be bucketed into.\n\t   *\n\t   */\n\n\n\t  addOptionGroup(id, data) {\n\t    var hashed_id;\n\t    data[this.settings.optgroupValueField] = id;\n\n\t    if (hashed_id = this.registerOptionGroup(data)) {\n\t      this.trigger('optgroup_add', hashed_id, data);\n\t    }\n\t  }\n\t  /**\n\t   * Removes an existing option group.\n\t   *\n\t   */\n\n\n\t  removeOptionGroup(id) {\n\t    if (this.optgroups.hasOwnProperty(id)) {\n\t      delete this.optgroups[id];\n\t      this.clearCache();\n\t      this.trigger('optgroup_remove', id);\n\t    }\n\t  }\n\t  /**\n\t   * Clears all existing option groups.\n\t   */\n\n\n\t  clearOptionGroups() {\n\t    this.optgroups = {};\n\t    this.clearCache();\n\t    this.trigger('optgroup_clear');\n\t  }\n\t  /**\n\t   * Updates an option available for selection. If\n\t   * it is visible in the selected items or options\n\t   * dropdown, it will be re-rendered automatically.\n\t   *\n\t   */\n\n\n\t  updateOption(value, data) {\n\t    const self = this;\n\t    var item_new;\n\t    var index_item;\n\t    const value_old = hash_key(value);\n\t    const value_new = hash_key(data[self.settings.valueField]); // sanity checks\n\n\t    if (value_old === null) return;\n\t    const data_old = self.options[value_old];\n\t    if (data_old == undefined) return;\n\t    if (typeof value_new !== 'string') throw new Error('Value must be set in option data');\n\t    const option = self.getOption(value_old);\n\t    const item = self.getItem(value_old);\n\t    data.$order = data.$order || data_old.$order;\n\t    delete self.options[value_old]; // invalidate render cache\n\t    // don't remove existing node yet, we'll remove it after replacing it\n\n\t    self.uncacheValue(value_new);\n\t    self.options[value_new] = data; // update the option if it's in the dropdown\n\n\t    if (option) {\n\t      if (self.dropdown_content.contains(option)) {\n\t        const option_new = self._render('option', data);\n\n\t        replaceNode(option, option_new);\n\n\t        if (self.activeOption === option) {\n\t          self.setActiveOption(option_new);\n\t        }\n\t      }\n\n\t      option.remove();\n\t    } // update the item if we have one\n\n\n\t    if (item) {\n\t      index_item = self.items.indexOf(value_old);\n\n\t      if (index_item !== -1) {\n\t        self.items.splice(index_item, 1, value_new);\n\t      }\n\n\t      item_new = self._render('item', data);\n\t      if (item.classList.contains('active')) addClasses(item_new, 'active');\n\t      replaceNode(item, item_new);\n\t    } // invalidate last query because we might have updated the sortField\n\n\n\t    self.lastQuery = null;\n\t  }\n\t  /**\n\t   * Removes a single option.\n\t   *\n\t   */\n\n\n\t  removeOption(value, silent) {\n\t    const self = this;\n\t    value = get_hash(value);\n\t    self.uncacheValue(value);\n\t    delete self.userOptions[value];\n\t    delete self.options[value];\n\t    self.lastQuery = null;\n\t    self.trigger('option_remove', value);\n\t    self.removeItem(value, silent);\n\t  }\n\t  /**\n\t   * Clears all options.\n\t   */\n\n\n\t  clearOptions(filter) {\n\t    const boundFilter = (filter || this.clearFilter).bind(this);\n\t    this.loadedSearches = {};\n\t    this.userOptions = {};\n\t    this.clearCache();\n\t    const selected = {};\n\t    iterate$1(this.options, (option, key) => {\n\t      if (boundFilter(option, key)) {\n\t        selected[key] = option;\n\t      }\n\t    });\n\t    this.options = this.sifter.items = selected;\n\t    this.lastQuery = null;\n\t    this.trigger('option_clear');\n\t  }\n\t  /**\n\t   * Used by clearOptions() to decide whether or not an option should be removed\n\t   * Return true to keep an option, false to remove\n\t   *\n\t   */\n\n\n\t  clearFilter(option, value) {\n\t    if (this.items.indexOf(value) >= 0) {\n\t      return true;\n\t    }\n\n\t    return false;\n\t  }\n\t  /**\n\t   * Returns the dom element of the option\n\t   * matching the given value.\n\t   *\n\t   */\n\n\n\t  getOption(value, create = false) {\n\t    const hashed = hash_key(value);\n\t    if (hashed === null) return null;\n\t    const option = this.options[hashed];\n\n\t    if (option != undefined) {\n\t      if (option.$div) {\n\t        return option.$div;\n\t      }\n\n\t      if (create) {\n\t        return this._render('option', option);\n\t      }\n\t    }\n\n\t    return null;\n\t  }\n\t  /**\n\t   * Returns the dom element of the next or previous dom element of the same type\n\t   * Note: adjacent options may not be adjacent DOM elements (optgroups)\n\t   *\n\t   */\n\n\n\t  getAdjacent(option, direction, type = 'option') {\n\t    var self = this,\n\t        all;\n\n\t    if (!option) {\n\t      return null;\n\t    }\n\n\t    if (type == 'item') {\n\t      all = self.controlChildren();\n\t    } else {\n\t      all = self.dropdown_content.querySelectorAll('[data-selectable]');\n\t    }\n\n\t    for (let i = 0; i < all.length; i++) {\n\t      if (all[i] != option) {\n\t        continue;\n\t      }\n\n\t      if (direction > 0) {\n\t        return all[i + 1];\n\t      }\n\n\t      return all[i - 1];\n\t    }\n\n\t    return null;\n\t  }\n\t  /**\n\t   * Returns the dom element of the item\n\t   * matching the given value.\n\t   *\n\t   */\n\n\n\t  getItem(item) {\n\t    if (typeof item == 'object') {\n\t      return item;\n\t    }\n\n\t    var value = hash_key(item);\n\t    return value !== null ? this.control.querySelector(`[data-value=\"${addSlashes(value)}\"]`) : null;\n\t  }\n\t  /**\n\t   * \"Selects\" multiple items at once. Adds them to the list\n\t   * at the current caret position.\n\t   *\n\t   */\n\n\n\t  addItems(values, silent) {\n\t    var self = this;\n\t    var items = Array.isArray(values) ? values : [values];\n\t    items = items.filter(x => self.items.indexOf(x) === -1);\n\t    const last_item = items[items.length - 1];\n\t    items.forEach(item => {\n\t      self.isPending = item !== last_item;\n\t      self.addItem(item, silent);\n\t    });\n\t  }\n\t  /**\n\t   * \"Selects\" an item. Adds it to the list\n\t   * at the current caret position.\n\t   *\n\t   */\n\n\n\t  addItem(value, silent) {\n\t    var events = silent ? [] : ['change', 'dropdown_close'];\n\t    debounce_events(this, events, () => {\n\t      var item, wasFull;\n\t      const self = this;\n\t      const inputMode = self.settings.mode;\n\t      const hashed = hash_key(value);\n\n\t      if (hashed && self.items.indexOf(hashed) !== -1) {\n\t        if (inputMode === 'single') {\n\t          self.close();\n\t        }\n\n\t        if (inputMode === 'single' || !self.settings.duplicates) {\n\t          return;\n\t        }\n\t      }\n\n\t      if (hashed === null || !self.options.hasOwnProperty(hashed)) return;\n\t      if (inputMode === 'single') self.clear(silent);\n\t      if (inputMode === 'multi' && self.isFull()) return;\n\t      item = self._render('item', self.options[hashed]);\n\n\t      if (self.control.contains(item)) {\n\t        // duplicates\n\t        item = item.cloneNode(true);\n\t      }\n\n\t      wasFull = self.isFull();\n\t      self.items.splice(self.caretPos, 0, hashed);\n\t      self.insertAtCaret(item);\n\n\t      if (self.isSetup) {\n\t        // update menu / remove the option (if this is not one item being added as part of series)\n\t        if (!self.isPending && self.settings.hideSelected) {\n\t          let option = self.getOption(hashed);\n\t          let next = self.getAdjacent(option, 1);\n\n\t          if (next) {\n\t            self.setActiveOption(next);\n\t          }\n\t        } // refreshOptions after setActiveOption(),\n\t        // otherwise setActiveOption() will be called by refreshOptions() with the wrong value\n\n\n\t        if (!self.isPending && !self.settings.closeAfterSelect) {\n\t          self.refreshOptions(self.isFocused && inputMode !== 'single');\n\t        } // hide the menu if the maximum number of items have been selected or no options are left\n\n\n\t        if (self.settings.closeAfterSelect != false && self.isFull()) {\n\t          self.close();\n\t        } else if (!self.isPending) {\n\t          self.positionDropdown();\n\t        }\n\n\t        self.trigger('item_add', hashed, item);\n\n\t        if (!self.isPending) {\n\t          self.updateOriginalInput({\n\t            silent: silent\n\t          });\n\t        }\n\t      }\n\n\t      if (!self.isPending || !wasFull && self.isFull()) {\n\t        self.inputState();\n\t        self.refreshState();\n\t      }\n\t    });\n\t  }\n\t  /**\n\t   * Removes the selected item matching\n\t   * the provided value.\n\t   *\n\t   */\n\n\n\t  removeItem(item = null, silent) {\n\t    const self = this;\n\t    item = self.getItem(item);\n\t    if (!item) return;\n\t    var i, idx;\n\t    const value = item.dataset.value;\n\t    i = nodeIndex(item);\n\t    item.remove();\n\n\t    if (item.classList.contains('active')) {\n\t      idx = self.activeItems.indexOf(item);\n\t      self.activeItems.splice(idx, 1);\n\t      removeClasses(item, 'active');\n\t    }\n\n\t    self.items.splice(i, 1);\n\t    self.lastQuery = null;\n\n\t    if (!self.settings.persist && self.userOptions.hasOwnProperty(value)) {\n\t      self.removeOption(value, silent);\n\t    }\n\n\t    if (i < self.caretPos) {\n\t      self.setCaret(self.caretPos - 1);\n\t    }\n\n\t    self.updateOriginalInput({\n\t      silent: silent\n\t    });\n\t    self.refreshState();\n\t    self.positionDropdown();\n\t    self.trigger('item_remove', value, item);\n\t  }\n\t  /**\n\t   * Invokes the `create` method provided in the\n\t   * TomSelect options that should provide the data\n\t   * for the new item, given the user input.\n\t   *\n\t   * Once this completes, it will be added\n\t   * to the item list.\n\t   *\n\t   */\n\n\n\t  createItem(input = null, callback = () => {}) {\n\t    // triggerDropdown parameter @deprecated 2.1.1\n\t    if (arguments.length === 3) {\n\t      callback = arguments[2];\n\t    }\n\n\t    if (typeof callback != 'function') {\n\t      callback = () => {};\n\t    }\n\n\t    var self = this;\n\t    var caret = self.caretPos;\n\t    var output;\n\t    input = input || self.inputValue();\n\n\t    if (!self.canCreate(input)) {\n\t      callback();\n\t      return false;\n\t    }\n\n\t    self.lock();\n\t    var created = false;\n\n\t    var create = data => {\n\t      self.unlock();\n\t      if (!data || typeof data !== 'object') return callback();\n\t      var value = hash_key(data[self.settings.valueField]);\n\n\t      if (typeof value !== 'string') {\n\t        return callback();\n\t      }\n\n\t      self.setTextboxValue();\n\t      self.addOption(data, true);\n\t      self.setCaret(caret);\n\t      self.addItem(value);\n\t      callback(data);\n\t      created = true;\n\t    };\n\n\t    if (typeof self.settings.create === 'function') {\n\t      output = self.settings.create.call(this, input, create);\n\t    } else {\n\t      output = {\n\t        [self.settings.labelField]: input,\n\t        [self.settings.valueField]: input\n\t      };\n\t    }\n\n\t    if (!created) {\n\t      create(output);\n\t    }\n\n\t    return true;\n\t  }\n\t  /**\n\t   * Re-renders the selected item lists.\n\t   */\n\n\n\t  refreshItems() {\n\t    var self = this;\n\t    self.lastQuery = null;\n\n\t    if (self.isSetup) {\n\t      self.addItems(self.items);\n\t    }\n\n\t    self.updateOriginalInput();\n\t    self.refreshState();\n\t  }\n\t  /**\n\t   * Updates all state-dependent attributes\n\t   * and CSS classes.\n\t   */\n\n\n\t  refreshState() {\n\t    const self = this;\n\t    self.refreshValidityState();\n\t    const isFull = self.isFull();\n\t    const isLocked = self.isLocked;\n\t    self.wrapper.classList.toggle('rtl', self.rtl);\n\t    const wrap_classList = self.wrapper.classList;\n\t    wrap_classList.toggle('focus', self.isFocused);\n\t    wrap_classList.toggle('disabled', self.isDisabled);\n\t    wrap_classList.toggle('required', self.isRequired);\n\t    wrap_classList.toggle('invalid', !self.isValid);\n\t    wrap_classList.toggle('locked', isLocked);\n\t    wrap_classList.toggle('full', isFull);\n\t    wrap_classList.toggle('input-active', self.isFocused && !self.isInputHidden);\n\t    wrap_classList.toggle('dropdown-active', self.isOpen);\n\t    wrap_classList.toggle('has-options', isEmptyObject(self.options));\n\t    wrap_classList.toggle('has-items', self.items.length > 0);\n\t  }\n\t  /**\n\t   * Update the `required` attribute of both input and control input.\n\t   *\n\t   * The `required` property needs to be activated on the control input\n\t   * for the error to be displayed at the right place. `required` also\n\t   * needs to be temporarily deactivated on the input since the input is\n\t   * hidden and can't show errors.\n\t   */\n\n\n\t  refreshValidityState() {\n\t    var self = this;\n\n\t    if (!self.input.validity) {\n\t      return;\n\t    }\n\n\t    self.isValid = self.input.validity.valid;\n\t    self.isInvalid = !self.isValid;\n\t  }\n\t  /**\n\t   * Determines whether or not more items can be added\n\t   * to the control without exceeding the user-defined maximum.\n\t   *\n\t   * @returns {boolean}\n\t   */\n\n\n\t  isFull() {\n\t    return this.settings.maxItems !== null && this.items.length >= this.settings.maxItems;\n\t  }\n\t  /**\n\t   * Refreshes the original <select> or <input>\n\t   * element to reflect the current state.\n\t   *\n\t   */\n\n\n\t  updateOriginalInput(opts = {}) {\n\t    const self = this;\n\t    var option, label;\n\t    const empty_option = self.input.querySelector('option[value=\"\"]');\n\n\t    if (self.is_select_tag) {\n\t      const selected = [];\n\t      const has_selected = self.input.querySelectorAll('option:checked').length;\n\n\t      function AddSelected(option_el, value, label) {\n\t        if (!option_el) {\n\t          option_el = getDom('<option value=\"' + escape_html(value) + '\">' + escape_html(label) + '</option>');\n\t        } // don't move empty option from top of list\n\t        // fixes bug in firefox https://bugzilla.mozilla.org/show_bug.cgi?id=1725293\n\n\n\t        if (option_el != empty_option) {\n\t          self.input.append(option_el);\n\t        }\n\n\t        selected.push(option_el); // marking empty option as selected can break validation\n\t        // fixes https://github.com/orchidjs/tom-select/issues/303\n\n\t        if (option_el != empty_option || has_selected > 0) {\n\t          option_el.selected = true;\n\t        }\n\n\t        return option_el;\n\t      } // unselect all selected options\n\n\n\t      self.input.querySelectorAll('option:checked').forEach(option_el => {\n\t        option_el.selected = false;\n\t      }); // nothing selected?\n\n\t      if (self.items.length == 0 && self.settings.mode == 'single') {\n\t        AddSelected(empty_option, \"\", \"\"); // order selected <option> tags for values in self.items\n\t      } else {\n\t        self.items.forEach(value => {\n\t          option = self.options[value];\n\t          label = option[self.settings.labelField] || '';\n\n\t          if (selected.includes(option.$option)) {\n\t            const reuse_opt = self.input.querySelector(`option[value=\"${addSlashes(value)}\"]:not(:checked)`);\n\t            AddSelected(reuse_opt, value, label);\n\t          } else {\n\t            option.$option = AddSelected(option.$option, value, label);\n\t          }\n\t        });\n\t      }\n\t    } else {\n\t      self.input.value = self.getValue();\n\t    }\n\n\t    if (self.isSetup) {\n\t      if (!opts.silent) {\n\t        self.trigger('change', self.getValue());\n\t      }\n\t    }\n\t  }\n\t  /**\n\t   * Shows the autocomplete dropdown containing\n\t   * the available options.\n\t   */\n\n\n\t  open() {\n\t    var self = this;\n\t    if (self.isLocked || self.isOpen || self.settings.mode === 'multi' && self.isFull()) return;\n\t    self.isOpen = true;\n\t    setAttr(self.focus_node, {\n\t      'aria-expanded': 'true'\n\t    });\n\t    self.refreshState();\n\t    applyCSS(self.dropdown, {\n\t      visibility: 'hidden',\n\t      display: 'block'\n\t    });\n\t    self.positionDropdown();\n\t    applyCSS(self.dropdown, {\n\t      visibility: 'visible',\n\t      display: 'block'\n\t    });\n\t    self.focus();\n\t    self.trigger('dropdown_open', self.dropdown);\n\t  }\n\t  /**\n\t   * Closes the autocomplete dropdown menu.\n\t   */\n\n\n\t  close(setTextboxValue = true) {\n\t    var self = this;\n\t    var trigger = self.isOpen;\n\n\t    if (setTextboxValue) {\n\t      // before blur() to prevent form onchange event\n\t      self.setTextboxValue();\n\n\t      if (self.settings.mode === 'single' && self.items.length) {\n\t        self.hideInput();\n\t      }\n\t    }\n\n\t    self.isOpen = false;\n\t    setAttr(self.focus_node, {\n\t      'aria-expanded': 'false'\n\t    });\n\t    applyCSS(self.dropdown, {\n\t      display: 'none'\n\t    });\n\n\t    if (self.settings.hideSelected) {\n\t      self.clearActiveOption();\n\t    }\n\n\t    self.refreshState();\n\t    if (trigger) self.trigger('dropdown_close', self.dropdown);\n\t  }\n\t  /**\n\t   * Calculates and applies the appropriate\n\t   * position of the dropdown if dropdownParent = 'body'.\n\t   * Otherwise, position is determined by css\n\t   */\n\n\n\t  positionDropdown() {\n\t    if (this.settings.dropdownParent !== 'body') {\n\t      return;\n\t    }\n\n\t    var context = this.control;\n\t    var rect = context.getBoundingClientRect();\n\t    var top = context.offsetHeight + rect.top + window.scrollY;\n\t    var left = rect.left + window.scrollX;\n\t    applyCSS(this.dropdown, {\n\t      width: rect.width + 'px',\n\t      top: top + 'px',\n\t      left: left + 'px'\n\t    });\n\t  }\n\t  /**\n\t   * Resets / clears all selected items\n\t   * from the control.\n\t   *\n\t   */\n\n\n\t  clear(silent) {\n\t    var self = this;\n\t    if (!self.items.length) return;\n\t    var items = self.controlChildren();\n\t    iterate$1(items, item => {\n\t      self.removeItem(item, true);\n\t    });\n\t    self.showInput();\n\t    if (!silent) self.updateOriginalInput();\n\t    self.trigger('clear');\n\t  }\n\t  /**\n\t   * A helper method for inserting an element\n\t   * at the current caret position.\n\t   *\n\t   */\n\n\n\t  insertAtCaret(el) {\n\t    const self = this;\n\t    const caret = self.caretPos;\n\t    const target = self.control;\n\t    target.insertBefore(el, target.children[caret] || null);\n\t    self.setCaret(caret + 1);\n\t  }\n\t  /**\n\t   * Removes the current selected item(s).\n\t   *\n\t   */\n\n\n\t  deleteSelection(e) {\n\t    var direction, selection, caret, tail;\n\t    var self = this;\n\t    direction = e && e.keyCode === KEY_BACKSPACE ? -1 : 1;\n\t    selection = getSelection(self.control_input); // determine items that will be removed\n\n\t    const rm_items = [];\n\n\t    if (self.activeItems.length) {\n\t      tail = getTail(self.activeItems, direction);\n\t      caret = nodeIndex(tail);\n\n\t      if (direction > 0) {\n\t        caret++;\n\t      }\n\n\t      iterate$1(self.activeItems, item => rm_items.push(item));\n\t    } else if ((self.isFocused || self.settings.mode === 'single') && self.items.length) {\n\t      const items = self.controlChildren();\n\t      let rm_item;\n\n\t      if (direction < 0 && selection.start === 0 && selection.length === 0) {\n\t        rm_item = items[self.caretPos - 1];\n\t      } else if (direction > 0 && selection.start === self.inputValue().length) {\n\t        rm_item = items[self.caretPos];\n\t      }\n\n\t      if (rm_item !== undefined) {\n\t        rm_items.push(rm_item);\n\t      }\n\t    }\n\n\t    if (!self.shouldDelete(rm_items, e)) {\n\t      return false;\n\t    }\n\n\t    preventDefault(e, true); // perform removal\n\n\t    if (typeof caret !== 'undefined') {\n\t      self.setCaret(caret);\n\t    }\n\n\t    while (rm_items.length) {\n\t      self.removeItem(rm_items.pop());\n\t    }\n\n\t    self.showInput();\n\t    self.positionDropdown();\n\t    self.refreshOptions(false);\n\t    return true;\n\t  }\n\t  /**\n\t   * Return true if the items should be deleted\n\t   */\n\n\n\t  shouldDelete(items, evt) {\n\t    const values = items.map(item => item.dataset.value); // allow the callback to abort\n\n\t    if (!values.length || typeof this.settings.onDelete === 'function' && this.settings.onDelete(values, evt) === false) {\n\t      return false;\n\t    }\n\n\t    return true;\n\t  }\n\t  /**\n\t   * Selects the previous / next item (depending on the `direction` argument).\n\t   *\n\t   * > 0 - right\n\t   * < 0 - left\n\t   *\n\t   */\n\n\n\t  advanceSelection(direction, e) {\n\t    var last_active,\n\t        adjacent,\n\t        self = this;\n\t    if (self.rtl) direction *= -1;\n\t    if (self.inputValue().length) return; // add or remove to active items\n\n\t    if (isKeyDown(KEY_SHORTCUT, e) || isKeyDown('shiftKey', e)) {\n\t      last_active = self.getLastActive(direction);\n\n\t      if (last_active) {\n\t        if (!last_active.classList.contains('active')) {\n\t          adjacent = last_active;\n\t        } else {\n\t          adjacent = self.getAdjacent(last_active, direction, 'item');\n\t        } // if no active item, get items adjacent to the control input\n\n\t      } else if (direction > 0) {\n\t        adjacent = self.control_input.nextElementSibling;\n\t      } else {\n\t        adjacent = self.control_input.previousElementSibling;\n\t      }\n\n\t      if (adjacent) {\n\t        if (adjacent.classList.contains('active')) {\n\t          self.removeActiveItem(last_active);\n\t        }\n\n\t        self.setActiveItemClass(adjacent); // mark as last_active !! after removeActiveItem() on last_active\n\t      } // move caret to the left or right\n\n\t    } else {\n\t      self.moveCaret(direction);\n\t    }\n\t  }\n\n\t  moveCaret(direction) {}\n\t  /**\n\t   * Get the last active item\n\t   *\n\t   */\n\n\n\t  getLastActive(direction) {\n\t    let last_active = this.control.querySelector('.last-active');\n\n\t    if (last_active) {\n\t      return last_active;\n\t    }\n\n\t    var result = this.control.querySelectorAll('.active');\n\n\t    if (result) {\n\t      return getTail(result, direction);\n\t    }\n\t  }\n\t  /**\n\t   * Moves the caret to the specified index.\n\t   *\n\t   * The input must be moved by leaving it in place and moving the\n\t   * siblings, due to the fact that focus cannot be restored once lost\n\t   * on mobile webkit devices\n\t   *\n\t   */\n\n\n\t  setCaret(new_pos) {\n\t    this.caretPos = this.items.length;\n\t  }\n\t  /**\n\t   * Return list of item dom elements\n\t   *\n\t   */\n\n\n\t  controlChildren() {\n\t    return Array.from(this.control.querySelectorAll('[data-ts-item]'));\n\t  }\n\t  /**\n\t   * Disables user input on the control. Used while\n\t   * items are being asynchronously created.\n\t   */\n\n\n\t  lock() {\n\t    this.isLocked = true;\n\t    this.refreshState();\n\t  }\n\t  /**\n\t   * Re-enables user input on the control.\n\t   */\n\n\n\t  unlock() {\n\t    this.isLocked = false;\n\t    this.refreshState();\n\t  }\n\t  /**\n\t   * Disables user input on the control completely.\n\t   * While disabled, it cannot receive focus.\n\t   */\n\n\n\t  disable() {\n\t    var self = this;\n\t    self.input.disabled = true;\n\t    self.control_input.disabled = true;\n\t    self.focus_node.tabIndex = -1;\n\t    self.isDisabled = true;\n\t    this.close();\n\t    self.lock();\n\t  }\n\t  /**\n\t   * Enables the control so that it can respond\n\t   * to focus and user input.\n\t   */\n\n\n\t  enable() {\n\t    var self = this;\n\t    self.input.disabled = false;\n\t    self.control_input.disabled = false;\n\t    self.focus_node.tabIndex = self.tabIndex;\n\t    self.isDisabled = false;\n\t    self.unlock();\n\t  }\n\t  /**\n\t   * Completely destroys the control and\n\t   * unbinds all event listeners so that it can\n\t   * be garbage collected.\n\t   */\n\n\n\t  destroy() {\n\t    var self = this;\n\t    var revertSettings = self.revertSettings;\n\t    self.trigger('destroy');\n\t    self.off();\n\t    self.wrapper.remove();\n\t    self.dropdown.remove();\n\t    self.input.innerHTML = revertSettings.innerHTML;\n\t    self.input.tabIndex = revertSettings.tabIndex;\n\t    removeClasses(self.input, 'tomselected', 'ts-hidden-accessible');\n\n\t    self._destroy();\n\n\t    delete self.input.tomselect;\n\t  }\n\t  /**\n\t   * A helper method for rendering \"item\" and\n\t   * \"option\" templates, given the data.\n\t   *\n\t   */\n\n\n\t  render(templateName, data) {\n\t    var id, html;\n\t    const self = this;\n\n\t    if (typeof this.settings.render[templateName] !== 'function') {\n\t      return null;\n\t    } // render markup\n\n\n\t    html = self.settings.render[templateName].call(this, data, escape_html);\n\n\t    if (!html) {\n\t      return null;\n\t    }\n\n\t    html = getDom(html); // add mandatory attributes\n\n\t    if (templateName === 'option' || templateName === 'option_create') {\n\t      if (data[self.settings.disabledField]) {\n\t        setAttr(html, {\n\t          'aria-disabled': 'true'\n\t        });\n\t      } else {\n\t        setAttr(html, {\n\t          'data-selectable': ''\n\t        });\n\t      }\n\t    } else if (templateName === 'optgroup') {\n\t      id = data.group[self.settings.optgroupValueField];\n\t      setAttr(html, {\n\t        'data-group': id\n\t      });\n\n\t      if (data.group[self.settings.disabledField]) {\n\t        setAttr(html, {\n\t          'data-disabled': ''\n\t        });\n\t      }\n\t    }\n\n\t    if (templateName === 'option' || templateName === 'item') {\n\t      const value = get_hash(data[self.settings.valueField]);\n\t      setAttr(html, {\n\t        'data-value': value\n\t      }); // make sure we have some classes if a template is overwritten\n\n\t      if (templateName === 'item') {\n\t        addClasses(html, self.settings.itemClass);\n\t        setAttr(html, {\n\t          'data-ts-item': ''\n\t        });\n\t      } else {\n\t        addClasses(html, self.settings.optionClass);\n\t        setAttr(html, {\n\t          role: 'option',\n\t          id: data.$id\n\t        }); // update cache\n\n\t        data.$div = html;\n\t        self.options[value] = data;\n\t      }\n\t    }\n\n\t    return html;\n\t  }\n\t  /**\n\t   * Type guarded rendering\n\t   *\n\t   */\n\n\n\t  _render(templateName, data) {\n\t    const html = this.render(templateName, data);\n\n\t    if (html == null) {\n\t      throw 'HTMLElement expected';\n\t    }\n\n\t    return html;\n\t  }\n\t  /**\n\t   * Clears the render cache for a template. If\n\t   * no template is given, clears all render\n\t   * caches.\n\t   *\n\t   */\n\n\n\t  clearCache() {\n\t    iterate$1(this.options, option => {\n\t      if (option.$div) {\n\t        option.$div.remove();\n\t        delete option.$div;\n\t      }\n\t    });\n\t  }\n\t  /**\n\t   * Removes a value from item and option caches\n\t   *\n\t   */\n\n\n\t  uncacheValue(value) {\n\t    const option_el = this.getOption(value);\n\t    if (option_el) option_el.remove();\n\t  }\n\t  /**\n\t   * Determines whether or not to display the\n\t   * create item prompt, given a user input.\n\t   *\n\t   */\n\n\n\t  canCreate(input) {\n\t    return this.settings.create && input.length > 0 && this.settings.createFilter.call(this, input);\n\t  }\n\t  /**\n\t   * Wraps this.`method` so that `new_fn` can be invoked 'before', 'after', or 'instead' of the original method\n\t   *\n\t   * this.hook('instead','onKeyDown',function( arg1, arg2 ...){\n\t   *\n\t   * });\n\t   */\n\n\n\t  hook(when, method, new_fn) {\n\t    var self = this;\n\t    var orig_method = self[method];\n\n\t    self[method] = function () {\n\t      var result, result_new;\n\n\t      if (when === 'after') {\n\t        result = orig_method.apply(self, arguments);\n\t      }\n\n\t      result_new = new_fn.apply(self, arguments);\n\n\t      if (when === 'instead') {\n\t        return result_new;\n\t      }\n\n\t      if (when === 'before') {\n\t        result = orig_method.apply(self, arguments);\n\t      }\n\n\t      return result;\n\t    };\n\t  }\n\n\t}\n\n\t/**\n\t * Plugin: \"change_listener\" (Tom Select)\n\t * Copyright (c) contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\tfunction change_listener () {\n\t  addEvent(this.input, 'change', () => {\n\t    this.sync();\n\t  });\n\t}\n\n\t/**\n\t * Plugin: \"restore_on_backspace\" (Tom Select)\n\t * Copyright (c) contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\tfunction checkbox_options () {\n\t  var self = this;\n\t  var orig_onOptionSelect = self.onOptionSelect;\n\t  self.settings.hideSelected = false; // update the checkbox for an option\n\n\t  var UpdateCheckbox = function UpdateCheckbox(option) {\n\t    setTimeout(() => {\n\t      var checkbox = option.querySelector('input');\n\n\t      if (checkbox instanceof HTMLInputElement) {\n\t        if (option.classList.contains('selected')) {\n\t          checkbox.checked = true;\n\t        } else {\n\t          checkbox.checked = false;\n\t        }\n\t      }\n\t    }, 1);\n\t  }; // add checkbox to option template\n\n\n\t  self.hook('after', 'setupTemplates', () => {\n\t    var orig_render_option = self.settings.render.option;\n\n\t    self.settings.render.option = (data, escape_html) => {\n\t      var rendered = getDom(orig_render_option.call(self, data, escape_html));\n\t      var checkbox = document.createElement('input');\n\t      checkbox.addEventListener('click', function (evt) {\n\t        preventDefault(evt);\n\t      });\n\t      checkbox.type = 'checkbox';\n\t      const hashed = hash_key(data[self.settings.valueField]);\n\n\t      if (hashed && self.items.indexOf(hashed) > -1) {\n\t        checkbox.checked = true;\n\t      }\n\n\t      rendered.prepend(checkbox);\n\t      return rendered;\n\t    };\n\t  }); // uncheck when item removed\n\n\t  self.on('item_remove', value => {\n\t    var option = self.getOption(value);\n\n\t    if (option) {\n\t      // if dropdown hasn't been opened yet, the option won't exist\n\t      option.classList.remove('selected'); // selected class won't be removed yet\n\n\t      UpdateCheckbox(option);\n\t    }\n\t  }); // check when item added\n\n\t  self.on('item_add', value => {\n\t    var option = self.getOption(value);\n\n\t    if (option) {\n\t      // if dropdown hasn't been opened yet, the option won't exist\n\t      UpdateCheckbox(option);\n\t    }\n\t  }); // remove items when selected option is clicked\n\n\t  self.hook('instead', 'onOptionSelect', (evt, option) => {\n\t    if (option.classList.contains('selected')) {\n\t      option.classList.remove('selected');\n\t      self.removeItem(option.dataset.value);\n\t      self.refreshOptions();\n\t      preventDefault(evt, true);\n\t      return;\n\t    }\n\n\t    orig_onOptionSelect.call(self, evt, option);\n\t    UpdateCheckbox(option);\n\t  });\n\t}\n\n\t/**\n\t * Plugin: \"dropdown_header\" (Tom Select)\n\t * Copyright (c) contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\tfunction clear_button (userOptions) {\n\t  const self = this;\n\t  const options = Object.assign({\n\t    className: 'clear-button',\n\t    title: 'Clear All',\n\t    html: data => {\n\t      return `<div class=\"${data.className}\" title=\"${data.title}\">&#10799;</div>`;\n\t    }\n\t  }, userOptions);\n\t  self.on('initialize', () => {\n\t    var button = getDom(options.html(options));\n\t    button.addEventListener('click', evt => {\n\t      if (self.isDisabled) {\n\t        return;\n\t      }\n\n\t      self.clear();\n\n\t      if (self.settings.mode === 'single' && self.settings.allowEmptyOption) {\n\t        self.addItem('');\n\t      }\n\n\t      evt.preventDefault();\n\t      evt.stopPropagation();\n\t    });\n\t    self.control.appendChild(button);\n\t  });\n\t}\n\n\t/**\n\t * Plugin: \"drag_drop\" (Tom Select)\n\t * Copyright (c) contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\tfunction drag_drop () {\n\t  var self = this;\n\t  if (!$.fn.sortable) throw new Error('The \"drag_drop\" plugin requires jQuery UI \"sortable\".');\n\t  if (self.settings.mode !== 'multi') return;\n\t  var orig_lock = self.lock;\n\t  var orig_unlock = self.unlock;\n\t  self.hook('instead', 'lock', () => {\n\t    var sortable = $(self.control).data('sortable');\n\t    if (sortable) sortable.disable();\n\t    return orig_lock.call(self);\n\t  });\n\t  self.hook('instead', 'unlock', () => {\n\t    var sortable = $(self.control).data('sortable');\n\t    if (sortable) sortable.enable();\n\t    return orig_unlock.call(self);\n\t  });\n\t  self.on('initialize', () => {\n\t    var $control = $(self.control).sortable({\n\t      items: '[data-value]',\n\t      forcePlaceholderSize: true,\n\t      disabled: self.isLocked,\n\t      start: (e, ui) => {\n\t        ui.placeholder.css('width', ui.helper.css('width'));\n\t        $control.css({\n\t          overflow: 'visible'\n\t        });\n\t      },\n\t      stop: () => {\n\t        $control.css({\n\t          overflow: 'hidden'\n\t        });\n\t        var values = [];\n\t        $control.children('[data-value]').each(function () {\n\t          if (this.dataset.value) values.push(this.dataset.value);\n\t        });\n\t        self.setValue(values);\n\t      }\n\t    });\n\t  });\n\t}\n\n\t/**\n\t * Plugin: \"dropdown_header\" (Tom Select)\n\t * Copyright (c) contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\tfunction dropdown_header (userOptions) {\n\t  const self = this;\n\t  const options = Object.assign({\n\t    title: 'Untitled',\n\t    headerClass: 'dropdown-header',\n\t    titleRowClass: 'dropdown-header-title',\n\t    labelClass: 'dropdown-header-label',\n\t    closeClass: 'dropdown-header-close',\n\t    html: data => {\n\t      return '<div class=\"' + data.headerClass + '\">' + '<div class=\"' + data.titleRowClass + '\">' + '<span class=\"' + data.labelClass + '\">' + data.title + '</span>' + '<a class=\"' + data.closeClass + '\">&times;</a>' + '</div>' + '</div>';\n\t    }\n\t  }, userOptions);\n\t  self.on('initialize', () => {\n\t    var header = getDom(options.html(options));\n\t    var close_link = header.querySelector('.' + options.closeClass);\n\n\t    if (close_link) {\n\t      close_link.addEventListener('click', evt => {\n\t        preventDefault(evt, true);\n\t        self.close();\n\t      });\n\t    }\n\n\t    self.dropdown.insertBefore(header, self.dropdown.firstChild);\n\t  });\n\t}\n\n\t/**\n\t * Plugin: \"dropdown_input\" (Tom Select)\n\t * Copyright (c) contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\tfunction caret_position () {\n\t  var self = this;\n\t  /**\n\t   * Moves the caret to the specified index.\n\t   *\n\t   * The input must be moved by leaving it in place and moving the\n\t   * siblings, due to the fact that focus cannot be restored once lost\n\t   * on mobile webkit devices\n\t   *\n\t   */\n\n\t  self.hook('instead', 'setCaret', new_pos => {\n\t    if (self.settings.mode === 'single' || !self.control.contains(self.control_input)) {\n\t      new_pos = self.items.length;\n\t    } else {\n\t      new_pos = Math.max(0, Math.min(self.items.length, new_pos));\n\n\t      if (new_pos != self.caretPos && !self.isPending) {\n\t        self.controlChildren().forEach((child, j) => {\n\t          if (j < new_pos) {\n\t            self.control_input.insertAdjacentElement('beforebegin', child);\n\t          } else {\n\t            self.control.appendChild(child);\n\t          }\n\t        });\n\t      }\n\t    }\n\n\t    self.caretPos = new_pos;\n\t  });\n\t  self.hook('instead', 'moveCaret', direction => {\n\t    if (!self.isFocused) return; // move caret before or after selected items\n\n\t    const last_active = self.getLastActive(direction);\n\n\t    if (last_active) {\n\t      const idx = nodeIndex(last_active);\n\t      self.setCaret(direction > 0 ? idx + 1 : idx);\n\t      self.setActiveItem();\n\t      removeClasses(last_active, 'last-active'); // move caret left or right of current position\n\t    } else {\n\t      self.setCaret(self.caretPos + direction);\n\t    }\n\t  });\n\t}\n\n\t/**\n\t * Plugin: \"dropdown_input\" (Tom Select)\n\t * Copyright (c) contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\tfunction dropdown_input () {\n\t  const self = this;\n\t  self.settings.shouldOpen = true; // make sure the input is shown even if there are no options to display in the dropdown\n\n\t  self.hook('before', 'setup', () => {\n\t    self.focus_node = self.control;\n\t    addClasses(self.control_input, 'dropdown-input');\n\t    const div = getDom('<div class=\"dropdown-input-wrap\">');\n\t    div.append(self.control_input);\n\t    self.dropdown.insertBefore(div, self.dropdown.firstChild); // set a placeholder in the select control\n\n\t    const placeholder = getDom('<input class=\"items-placeholder\" tabindex=\"-1\" />');\n\t    placeholder.placeholder = self.settings.placeholder || '';\n\t    self.control.append(placeholder);\n\t  });\n\t  self.on('initialize', () => {\n\t    // set tabIndex on control to -1, otherwise [shift+tab] will put focus right back on control_input\n\t    self.control_input.addEventListener('keydown', evt => {\n\t      //addEvent(self.control_input,'keydown' as const,(evt:KeyboardEvent) =>{\n\t      switch (evt.keyCode) {\n\t        case KEY_ESC:\n\t          if (self.isOpen) {\n\t            preventDefault(evt, true);\n\t            self.close();\n\t          }\n\n\t          self.clearActiveItems();\n\t          return;\n\n\t        case KEY_TAB:\n\t          self.focus_node.tabIndex = -1;\n\t          break;\n\t      }\n\n\t      return self.onKeyDown.call(self, evt);\n\t    });\n\t    self.on('blur', () => {\n\t      self.focus_node.tabIndex = self.isDisabled ? -1 : self.tabIndex;\n\t    }); // give the control_input focus when the dropdown is open\n\n\t    self.on('dropdown_open', () => {\n\t      self.control_input.focus();\n\t    }); // prevent onBlur from closing when focus is on the control_input\n\n\t    const orig_onBlur = self.onBlur;\n\t    self.hook('instead', 'onBlur', evt => {\n\t      if (evt && evt.relatedTarget == self.control_input) return;\n\t      return orig_onBlur.call(self);\n\t    });\n\t    addEvent(self.control_input, 'blur', () => self.onBlur()); // return focus to control to allow further keyboard input\n\n\t    self.hook('before', 'close', () => {\n\t      if (!self.isOpen) return;\n\t      self.focus_node.focus({\n\t        preventScroll: true\n\t      });\n\t    });\n\t  });\n\t}\n\n\t/**\n\t * Plugin: \"input_autogrow\" (Tom Select)\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\tfunction input_autogrow () {\n\t  var self = this;\n\t  self.on('initialize', () => {\n\t    var test_input = document.createElement('span');\n\t    var control = self.control_input;\n\t    test_input.style.cssText = 'position:absolute; top:-99999px; left:-99999px; width:auto; padding:0; white-space:pre; ';\n\t    self.wrapper.appendChild(test_input);\n\t    var transfer_styles = ['letterSpacing', 'fontSize', 'fontFamily', 'fontWeight', 'textTransform'];\n\n\t    for (const style_name of transfer_styles) {\n\t      // @ts-ignore TS7015 https://stackoverflow.com/a/50506154/697576\n\t      test_input.style[style_name] = control.style[style_name];\n\t    }\n\t    /**\n\t     * Set the control width\n\t     *\n\t     */\n\n\n\t    var resize = () => {\n\t      test_input.textContent = control.value;\n\t      control.style.width = test_input.clientWidth + 'px';\n\t    };\n\n\t    resize();\n\t    self.on('update item_add item_remove', resize);\n\t    addEvent(control, 'input', resize);\n\t    addEvent(control, 'keyup', resize);\n\t    addEvent(control, 'blur', resize);\n\t    addEvent(control, 'update', resize);\n\t  });\n\t}\n\n\t/**\n\t * Plugin: \"input_autogrow\" (Tom Select)\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\tfunction no_backspace_delete () {\n\t  var self = this;\n\t  var orig_deleteSelection = self.deleteSelection;\n\t  this.hook('instead', 'deleteSelection', evt => {\n\t    if (self.activeItems.length) {\n\t      return orig_deleteSelection.call(self, evt);\n\t    }\n\n\t    return false;\n\t  });\n\t}\n\n\t/**\n\t * Plugin: \"no_active_items\" (Tom Select)\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\tfunction no_active_items () {\n\t  this.hook('instead', 'setActiveItem', () => {});\n\t  this.hook('instead', 'selectAll', () => {});\n\t}\n\n\t/**\n\t * Plugin: \"optgroup_columns\" (Tom Select.js)\n\t * Copyright (c) contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\tfunction optgroup_columns () {\n\t  var self = this;\n\t  var orig_keydown = self.onKeyDown;\n\t  self.hook('instead', 'onKeyDown', evt => {\n\t    var index, option, options, optgroup;\n\n\t    if (!self.isOpen || !(evt.keyCode === KEY_LEFT || evt.keyCode === KEY_RIGHT)) {\n\t      return orig_keydown.call(self, evt);\n\t    }\n\n\t    self.ignoreHover = true;\n\t    optgroup = parentMatch(self.activeOption, '[data-group]');\n\t    index = nodeIndex(self.activeOption, '[data-selectable]');\n\n\t    if (!optgroup) {\n\t      return;\n\t    }\n\n\t    if (evt.keyCode === KEY_LEFT) {\n\t      optgroup = optgroup.previousSibling;\n\t    } else {\n\t      optgroup = optgroup.nextSibling;\n\t    }\n\n\t    if (!optgroup) {\n\t      return;\n\t    }\n\n\t    options = optgroup.querySelectorAll('[data-selectable]');\n\t    option = options[Math.min(options.length - 1, index)];\n\n\t    if (option) {\n\t      self.setActiveOption(option);\n\t    }\n\t  });\n\t}\n\n\t/**\n\t * Plugin: \"remove_button\" (Tom Select)\n\t * Copyright (c) contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\tfunction remove_button (userOptions) {\n\t  const options = Object.assign({\n\t    label: '&times;',\n\t    title: 'Remove',\n\t    className: 'remove',\n\t    append: true\n\t  }, userOptions); //options.className = 'remove-single';\n\n\t  var self = this; // override the render method to add remove button to each item\n\n\t  if (!options.append) {\n\t    return;\n\t  }\n\n\t  var html = '<a href=\"javascript:void(0)\" class=\"' + options.className + '\" tabindex=\"-1\" title=\"' + escape_html(options.title) + '\">' + options.label + '</a>';\n\t  self.hook('after', 'setupTemplates', () => {\n\t    var orig_render_item = self.settings.render.item;\n\n\t    self.settings.render.item = (data, escape) => {\n\t      var item = getDom(orig_render_item.call(self, data, escape));\n\t      var close_button = getDom(html);\n\t      item.appendChild(close_button);\n\t      addEvent(close_button, 'mousedown', evt => {\n\t        preventDefault(evt, true);\n\t      });\n\t      addEvent(close_button, 'click', evt => {\n\t        // propagating will trigger the dropdown to show for single mode\n\t        preventDefault(evt, true);\n\t        if (self.isLocked) return;\n\t        if (!self.shouldDelete([item], evt)) return;\n\t        self.removeItem(item);\n\t        self.refreshOptions(false);\n\t        self.inputState();\n\t      });\n\t      return item;\n\t    };\n\t  });\n\t}\n\n\t/**\n\t * Plugin: \"restore_on_backspace\" (Tom Select)\n\t * Copyright (c) contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\tfunction restore_on_backspace (userOptions) {\n\t  const self = this;\n\t  const options = Object.assign({\n\t    text: option => {\n\t      return option[self.settings.labelField];\n\t    }\n\t  }, userOptions);\n\t  self.on('item_remove', function (value) {\n\t    if (!self.isFocused) {\n\t      return;\n\t    }\n\n\t    if (self.control_input.value.trim() === '') {\n\t      var option = self.options[value];\n\n\t      if (option) {\n\t        self.setTextboxValue(options.text.call(self, option));\n\t      }\n\t    }\n\t  });\n\t}\n\n\t/**\n\t * Plugin: \"restore_on_backspace\" (Tom Select)\n\t * Copyright (c) contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\tfunction virtual_scroll () {\n\t  const self = this;\n\t  const orig_canLoad = self.canLoad;\n\t  const orig_clearActiveOption = self.clearActiveOption;\n\t  const orig_loadCallback = self.loadCallback;\n\t  var pagination = {};\n\t  var dropdown_content;\n\t  var loading_more = false;\n\t  var load_more_opt;\n\t  var default_values = [];\n\n\t  if (!self.settings.shouldLoadMore) {\n\t    // return true if additional results should be loaded\n\t    self.settings.shouldLoadMore = () => {\n\t      const scroll_percent = dropdown_content.clientHeight / (dropdown_content.scrollHeight - dropdown_content.scrollTop);\n\n\t      if (scroll_percent > 0.9) {\n\t        return true;\n\t      }\n\n\t      if (self.activeOption) {\n\t        var selectable = self.selectable();\n\t        var index = Array.from(selectable).indexOf(self.activeOption);\n\n\t        if (index >= selectable.length - 2) {\n\t          return true;\n\t        }\n\t      }\n\n\t      return false;\n\t    };\n\t  }\n\n\t  if (!self.settings.firstUrl) {\n\t    throw 'virtual_scroll plugin requires a firstUrl() method';\n\t  } // in order for virtual scrolling to work,\n\t  // options need to be ordered the same way they're returned from the remote data source\n\n\n\t  self.settings.sortField = [{\n\t    field: '$order'\n\t  }, {\n\t    field: '$score'\n\t  }]; // can we load more results for given query?\n\n\t  const canLoadMore = query => {\n\t    if (typeof self.settings.maxOptions === 'number' && dropdown_content.children.length >= self.settings.maxOptions) {\n\t      return false;\n\t    }\n\n\t    if (query in pagination && pagination[query]) {\n\t      return true;\n\t    }\n\n\t    return false;\n\t  };\n\n\t  const clearFilter = (option, value) => {\n\t    if (self.items.indexOf(value) >= 0 || default_values.indexOf(value) >= 0) {\n\t      return true;\n\t    }\n\n\t    return false;\n\t  }; // set the next url that will be\n\n\n\t  self.setNextUrl = (value, next_url) => {\n\t    pagination[value] = next_url;\n\t  }; // getUrl() to be used in settings.load()\n\n\n\t  self.getUrl = query => {\n\t    if (query in pagination) {\n\t      const next_url = pagination[query];\n\t      pagination[query] = false;\n\t      return next_url;\n\t    } // if the user goes back to a previous query\n\t    // we need to load the first page again\n\n\n\t    pagination = {};\n\t    return self.settings.firstUrl.call(self, query);\n\t  }; // don't clear the active option (and cause unwanted dropdown scroll)\n\t  // while loading more results\n\n\n\t  self.hook('instead', 'clearActiveOption', () => {\n\t    if (loading_more) {\n\t      return;\n\t    }\n\n\t    return orig_clearActiveOption.call(self);\n\t  }); // override the canLoad method\n\n\t  self.hook('instead', 'canLoad', query => {\n\t    // first time the query has been seen\n\t    if (!(query in pagination)) {\n\t      return orig_canLoad.call(self, query);\n\t    }\n\n\t    return canLoadMore(query);\n\t  }); // wrap the load\n\n\t  self.hook('instead', 'loadCallback', (options, optgroups) => {\n\t    if (!loading_more) {\n\t      self.clearOptions(clearFilter);\n\t    } else if (load_more_opt) {\n\t      const first_option = options[0];\n\n\t      if (first_option !== undefined) {\n\t        load_more_opt.dataset.value = first_option[self.settings.valueField];\n\t      }\n\t    }\n\n\t    orig_loadCallback.call(self, options, optgroups);\n\t    loading_more = false;\n\t  }); // add templates to dropdown\n\t  //\tloading_more if we have another url in the queue\n\t  //\tno_more_results if we don't have another url in the queue\n\n\t  self.hook('after', 'refreshOptions', () => {\n\t    const query = self.lastValue;\n\t    var option;\n\n\t    if (canLoadMore(query)) {\n\t      option = self.render('loading_more', {\n\t        query: query\n\t      });\n\n\t      if (option) {\n\t        option.setAttribute('data-selectable', ''); // so that navigating dropdown with [down] keypresses can navigate to this node\n\n\t        load_more_opt = option;\n\t      }\n\t    } else if (query in pagination && !dropdown_content.querySelector('.no-results')) {\n\t      option = self.render('no_more_results', {\n\t        query: query\n\t      });\n\t    }\n\n\t    if (option) {\n\t      addClasses(option, self.settings.optionClass);\n\t      dropdown_content.append(option);\n\t    }\n\t  }); // add scroll listener and default templates\n\n\t  self.on('initialize', () => {\n\t    default_values = Object.keys(self.options);\n\t    dropdown_content = self.dropdown_content; // default templates\n\n\t    self.settings.render = Object.assign({}, {\n\t      loading_more: () => {\n\t        return `<div class=\"loading-more-results\">Loading more results ... </div>`;\n\t      },\n\t      no_more_results: () => {\n\t        return `<div class=\"no-more-results\">No more results</div>`;\n\t      }\n\t    }, self.settings.render); // watch dropdown content scroll position\n\n\t    dropdown_content.addEventListener('scroll', () => {\n\t      if (!self.settings.shouldLoadMore.call(self)) {\n\t        return;\n\t      } // !important: this will get checked again in load() but we still need to check here otherwise loading_more will be set to true\n\n\n\t      if (!canLoadMore(self.lastValue)) {\n\t        return;\n\t      } // don't call load() too much\n\n\n\t      if (loading_more) return;\n\t      loading_more = true;\n\t      self.load.call(self, self.lastValue);\n\t    });\n\t  });\n\t}\n\n\tTomSelect.define('change_listener', change_listener);\n\tTomSelect.define('checkbox_options', checkbox_options);\n\tTomSelect.define('clear_button', clear_button);\n\tTomSelect.define('drag_drop', drag_drop);\n\tTomSelect.define('dropdown_header', dropdown_header);\n\tTomSelect.define('caret_position', caret_position);\n\tTomSelect.define('dropdown_input', dropdown_input);\n\tTomSelect.define('input_autogrow', input_autogrow);\n\tTomSelect.define('no_backspace_delete', no_backspace_delete);\n\tTomSelect.define('no_active_items', no_active_items);\n\tTomSelect.define('optgroup_columns', optgroup_columns);\n\tTomSelect.define('remove_button', remove_button);\n\tTomSelect.define('restore_on_backspace', restore_on_backspace);\n\tTomSelect.define('virtual_scroll', virtual_scroll);\n\n\treturn TomSelect;\n\n}));\nvar tomSelect=function(el,opts){return new TomSelect(el,opts);} \n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,CAAC,UAAUA,MAAM,EAAEC,OAAO,EAAE;EAC3B,OAAOC,OAAO,KAAK,QAAQ,IAAI,OAAOC,MAAM,KAAK,WAAW,GAAGA,MAAM,CAACD,OAAO,GAAGD,OAAO,EAAE,GACzF,OAAOG,MAAM,KAAK,UAAU,IAAIA,MAAM,CAACC,GAAG,GAAGD,MAAM,CAACH,OAAO,CAAC,IAC3DD,MAAM,GAAG,OAAOM,UAAU,KAAK,WAAW,GAAGA,UAAU,GAAGN,MAAM,IAAIO,IAAI,EAAEP,MAAM,CAACQ,SAAS,GAAGP,OAAO,EAAE,CAAC;AACzG,CAAC,EAAE,IAAI,EAAG,YAAY;EAAE,YAAY;;EAEnC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEC;AACD;AACA;AACA;EACC,SAASQ,SAAS,CAACC,MAAM,EAAEC,QAAQ,EAAE;IACnCD,MAAM,CAACE,KAAK,CAAC,KAAK,CAAC,CAACC,OAAO,CAACC,KAAK,IAAI;MACnCH,QAAQ,CAACG,KAAK,CAAC;IACjB,CAAC,CAAC;EACJ;EAEA,MAAMC,UAAU,CAAC;IACfC,WAAW,GAAG;MACZ,IAAI,CAACC,OAAO,GAAG,KAAK,CAAC;MACrB,IAAI,CAACA,OAAO,GAAG,CAAC,CAAC;IACnB;IAEAC,EAAE,CAACR,MAAM,EAAES,GAAG,EAAE;MACdV,SAAS,CAACC,MAAM,EAAEI,KAAK,IAAI;QACzB,MAAMM,WAAW,GAAG,IAAI,CAACH,OAAO,CAACH,KAAK,CAAC,IAAI,EAAE;QAC7CM,WAAW,CAACC,IAAI,CAACF,GAAG,CAAC;QACrB,IAAI,CAACF,OAAO,CAACH,KAAK,CAAC,GAAGM,WAAW;MACnC,CAAC,CAAC;IACJ;IAEAE,GAAG,CAACZ,MAAM,EAAES,GAAG,EAAE;MACf,IAAII,CAAC,GAAGC,SAAS,CAACC,MAAM;MAExB,IAAIF,CAAC,KAAK,CAAC,EAAE;QACX,IAAI,CAACN,OAAO,GAAG,CAAC,CAAC;QACjB;MACF;MAEAR,SAAS,CAACC,MAAM,EAAEI,KAAK,IAAI;QACzB,IAAIS,CAAC,KAAK,CAAC,EAAE;UACX,OAAO,IAAI,CAACN,OAAO,CAACH,KAAK,CAAC;UAC1B;QACF;QAEA,MAAMM,WAAW,GAAG,IAAI,CAACH,OAAO,CAACH,KAAK,CAAC;QACvC,IAAIM,WAAW,KAAKM,SAAS,EAAE;QAC/BN,WAAW,CAACO,MAAM,CAACP,WAAW,CAACQ,OAAO,CAACT,GAAG,CAAC,EAAE,CAAC,CAAC;QAC/C,IAAI,CAACF,OAAO,CAACH,KAAK,CAAC,GAAGM,WAAW;MACnC,CAAC,CAAC;IACJ;IAEAS,OAAO,CAACnB,MAAM,EAAE,GAAGoB,IAAI,EAAE;MACvB,IAAIvB,IAAI,GAAG,IAAI;MACfE,SAAS,CAACC,MAAM,EAAEI,KAAK,IAAI;QACzB,MAAMM,WAAW,GAAGb,IAAI,CAACU,OAAO,CAACH,KAAK,CAAC;QACvC,IAAIM,WAAW,KAAKM,SAAS,EAAE;QAC/BN,WAAW,CAACP,OAAO,CAACM,GAAG,IAAI;UACzBA,GAAG,CAACY,KAAK,CAACxB,IAAI,EAAEuB,IAAI,CAAC;QACvB,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ;EAEF;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,SAASE,WAAW,CAACC,SAAS,EAAE;IAC9BA,SAAS,CAACC,OAAO,GAAG,CAAC,CAAC;IACtB,OAAO,cAAcD,SAAS,CAAC;MAC7BjB,WAAW,CAAC,GAAGc,IAAI,EAAE;QACnB,KAAK,CAAC,GAAGA,IAAI,CAAC;QACd,IAAI,CAACI,OAAO,GAAG;UACbC,KAAK,EAAE,EAAE;UACTC,QAAQ,EAAE,CAAC,CAAC;UACZC,SAAS,EAAE,CAAC,CAAC;UACbC,MAAM,EAAE,CAAC;QACX,CAAC;MACH;;MAEA;AACL;AACA;AACA;AACA;MACK,OAAOlC,MAAM,CAACmC,IAAI,EAAEC,EAAE,EAAE;QACtBP,SAAS,CAACC,OAAO,CAACK,IAAI,CAAC,GAAG;UACxB,MAAM,EAAEA,IAAI;UACZ,IAAI,EAAEC;QACR,CAAC;MACH;MACA;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;MAGKC,iBAAiB,CAACP,OAAO,EAAE;QACzB,IAAIQ,GAAG,EAAEH,IAAI;QACb,MAAMhC,IAAI,GAAG,IAAI;QACjB,MAAMoC,KAAK,GAAG,EAAE;QAEhB,IAAIC,KAAK,CAACC,OAAO,CAACX,OAAO,CAAC,EAAE;UAC1BA,OAAO,CAACrB,OAAO,CAACiC,MAAM,IAAI;YACxB,IAAI,OAAOA,MAAM,KAAK,QAAQ,EAAE;cAC9BH,KAAK,CAACtB,IAAI,CAACyB,MAAM,CAAC;YACpB,CAAC,MAAM;cACLvC,IAAI,CAAC2B,OAAO,CAACE,QAAQ,CAACU,MAAM,CAACP,IAAI,CAAC,GAAGO,MAAM,CAACC,OAAO;cACnDJ,KAAK,CAACtB,IAAI,CAACyB,MAAM,CAACP,IAAI,CAAC;YACzB;UACF,CAAC,CAAC;QACJ,CAAC,MAAM,IAAIL,OAAO,EAAE;UAClB,KAAKQ,GAAG,IAAIR,OAAO,EAAE;YACnB,IAAIA,OAAO,CAACc,cAAc,CAACN,GAAG,CAAC,EAAE;cAC/BnC,IAAI,CAAC2B,OAAO,CAACE,QAAQ,CAACM,GAAG,CAAC,GAAGR,OAAO,CAACQ,GAAG,CAAC;cACzCC,KAAK,CAACtB,IAAI,CAACqB,GAAG,CAAC;YACjB;UACF;QACF;QAEA,OAAOH,IAAI,GAAGI,KAAK,CAACM,KAAK,EAAE,EAAE;UAC3B1C,IAAI,CAAC2C,OAAO,CAACX,IAAI,CAAC;QACpB;MACF;MAEAY,UAAU,CAACZ,IAAI,EAAE;QACf,IAAIhC,IAAI,GAAG,IAAI;QACf,IAAI2B,OAAO,GAAG3B,IAAI,CAAC2B,OAAO;QAC1B,IAAIY,MAAM,GAAGb,SAAS,CAACC,OAAO,CAACK,IAAI,CAAC;QAEpC,IAAI,CAACN,SAAS,CAACC,OAAO,CAACc,cAAc,CAACT,IAAI,CAAC,EAAE;UAC3C,MAAM,IAAIa,KAAK,CAAC,kBAAkB,GAAGb,IAAI,GAAG,UAAU,CAAC;QACzD;QAEAL,OAAO,CAACG,SAAS,CAACE,IAAI,CAAC,GAAG,IAAI;QAC9BL,OAAO,CAACI,MAAM,CAACC,IAAI,CAAC,GAAGO,MAAM,CAACN,EAAE,CAACT,KAAK,CAACxB,IAAI,EAAE,CAACA,IAAI,CAAC2B,OAAO,CAACE,QAAQ,CAACG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACjFL,OAAO,CAACC,KAAK,CAACd,IAAI,CAACkB,IAAI,CAAC;MAC1B;MACA;AACL;AACA;AACA;;MAGKW,OAAO,CAACX,IAAI,EAAE;QACZ,IAAIhC,IAAI,GAAG,IAAI;QACf,IAAI2B,OAAO,GAAG3B,IAAI,CAAC2B,OAAO;QAE1B,IAAI,CAAC3B,IAAI,CAAC2B,OAAO,CAACI,MAAM,CAACU,cAAc,CAACT,IAAI,CAAC,EAAE;UAC7C,IAAIL,OAAO,CAACG,SAAS,CAACE,IAAI,CAAC,EAAE;YAC3B,MAAM,IAAIa,KAAK,CAAC,mCAAmC,GAAGb,IAAI,GAAG,IAAI,CAAC;UACpE;UAEAhC,IAAI,CAAC4C,UAAU,CAACZ,IAAI,CAAC;QACvB;QAEA,OAAOL,OAAO,CAACI,MAAM,CAACC,IAAI,CAAC;MAC7B;IAEF,CAAC;EACH;;EAEA;EACA;AACD;AACA;AACA;AACA;AACA;AACA;EACC,MAAMc,cAAc,GAAGC,KAAK,IAAI;IAC9BA,KAAK,GAAGA,KAAK,CAACC,MAAM,CAACC,OAAO,CAAC;IAE7B,IAAIF,KAAK,CAAC7B,MAAM,GAAG,CAAC,EAAE;MACpB,OAAO6B,KAAK,CAAC,CAAC,CAAC,IAAI,EAAE;IACvB;IAEA,OAAOG,cAAc,CAACH,KAAK,CAAC,IAAI,CAAC,GAAG,GAAG,GAAGA,KAAK,CAACI,IAAI,CAAC,EAAE,CAAC,GAAG,GAAG,GAAG,KAAK,GAAGJ,KAAK,CAACI,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG;EAChG,CAAC;EACD;AACD;AACA;AACA;;EAEC,MAAMC,eAAe,GAAGC,KAAK,IAAI;IAC/B,IAAI,CAACC,aAAa,CAACD,KAAK,CAAC,EAAE;MACzB,OAAOA,KAAK,CAACF,IAAI,CAAC,EAAE,CAAC;IACvB;IAEA,IAAII,OAAO,GAAG,EAAE;IAChB,IAAIC,eAAe,GAAG,CAAC;IAEvB,MAAMC,YAAY,GAAG,MAAM;MACzB,IAAID,eAAe,GAAG,CAAC,EAAE;QACvBD,OAAO,IAAI,GAAG,GAAGC,eAAe,GAAG,GAAG;MACxC;IACF,CAAC;IAEDH,KAAK,CAAC/C,OAAO,CAAC,CAACoD,IAAI,EAAEC,CAAC,KAAK;MACzB,IAAID,IAAI,KAAKL,KAAK,CAACM,CAAC,GAAG,CAAC,CAAC,EAAE;QACzBH,eAAe,EAAE;QACjB;MACF;MAEAC,YAAY,EAAE;MACdF,OAAO,IAAIG,IAAI;MACfF,eAAe,GAAG,CAAC;IACrB,CAAC,CAAC;IACFC,YAAY,EAAE;IACd,OAAOF,OAAO;EAChB,CAAC;EACD;AACD;AACA;AACA;AACA;AACA;AACA;;EAEC,MAAMK,YAAY,GAAGb,KAAK,IAAI;IAC5B,IAAIM,KAAK,GAAGQ,OAAO,CAACd,KAAK,CAAC;IAC1B,OAAOD,cAAc,CAACO,KAAK,CAAC;EAC9B,CAAC;EACD;AACD;AACA;AACA;AACA;;EAEC,MAAMC,aAAa,GAAGD,KAAK,IAAI;IAC7B,OAAO,IAAIS,GAAG,CAACT,KAAK,CAAC,CAACU,IAAI,KAAKV,KAAK,CAACnC,MAAM;EAC7C,CAAC;EACD;AACD;AACA;AACA;AACA;;EAEC,MAAM8C,YAAY,GAAGC,GAAG,IAAI;IAC1B,OAAO,CAACA,GAAG,GAAG,EAAE,EAAEC,OAAO,CAAC,oCAAoC,EAAE,MAAM,CAAC;EACzE,CAAC;EACD;AACD;AACA;AACA;AACA;;EAEC,MAAMhB,cAAc,GAAGG,KAAK,IAAI;IAC9B,OAAOA,KAAK,CAACc,MAAM,CAAC,CAACC,OAAO,EAAEC,KAAK,KAAKC,IAAI,CAACC,GAAG,CAACH,OAAO,EAAEI,aAAa,CAACH,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;EACrF,CAAC;EACD;AACD;AACA;;EAEC,MAAMG,aAAa,GAAGP,GAAG,IAAI;IAC3B,OAAOJ,OAAO,CAACI,GAAG,CAAC,CAAC/C,MAAM;EAC5B,CAAC;EACD;AACD;AACA;AACA;;EAEC,MAAM2C,OAAO,GAAGY,CAAC,IAAIpC,KAAK,CAACqC,IAAI,CAACD,CAAC,CAAC;;EAElC;EACA;AACD;AACA;AACA;AACA;AACA;EACC,MAAME,aAAa,GAAGC,KAAK,IAAI;IAC7B,IAAIA,KAAK,CAAC1D,MAAM,KAAK,CAAC,EAAE,OAAO,CAAC,CAAC0D,KAAK,CAAC,CAAC;IACxC;;IAEA,IAAIC,MAAM,GAAG,EAAE;IACf,MAAMC,KAAK,GAAGF,KAAK,CAACG,SAAS,CAAC,CAAC,CAAC;IAChC,MAAMC,IAAI,GAAGL,aAAa,CAACG,KAAK,CAAC;IACjCE,IAAI,CAAC1E,OAAO,CAAC,UAAU2E,SAAS,EAAE;MAChC,IAAIC,GAAG,GAAGD,SAAS,CAACE,KAAK,CAAC,CAAC,CAAC;MAC5BD,GAAG,CAAC,CAAC,CAAC,GAAGN,KAAK,CAACQ,MAAM,CAAC,CAAC,CAAC,GAAGF,GAAG,CAAC,CAAC,CAAC;MACjCL,MAAM,CAAC/D,IAAI,CAACoE,GAAG,CAAC;MAChBA,GAAG,GAAGD,SAAS,CAACE,KAAK,CAAC,CAAC,CAAC;MACxBD,GAAG,CAACG,OAAO,CAACT,KAAK,CAACQ,MAAM,CAAC,CAAC,CAAC,CAAC;MAC5BP,MAAM,CAAC/D,IAAI,CAACoE,GAAG,CAAC;IAClB,CAAC,CAAC;IACF,OAAOL,MAAM;EACf,CAAC;;EAED;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;EACC;;EAEA,MAAMS,WAAW,GAAG,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;EAChC,MAAMC,UAAU,GAAG,qCAAqC;EACxD;;EAEA,IAAIC,WAAW;EACf;;EAEA,IAAIC,cAAc;EAClB,MAAMC,eAAe,GAAG,CAAC;EACzB;;EAEA,MAAMC,aAAa,GAAG,CAAC,CAAC;EACxB;;EAEA,MAAMC,eAAe,GAAG;IACtB,GAAG,EAAE,IAAI;IACT,GAAG,EAAE,GAAG;IACR,GAAG,EAAE,KAAK;IACV,IAAI,EAAE,GAAG;IACT,IAAI,EAAE,KAAK;IACX,IAAI,EAAE,GAAG;IACT,IAAI,EAAE,GAAG;IACT,IAAI,EAAE,IAAI;IACV,IAAI,EAAE,GAAG;IACT,GAAG,EAAE,KAAK;IACV,GAAG,EAAE,MAAM;IACX,GAAG,EAAE,UAAU;IACf,GAAG,EAAE,MAAM;IACX,GAAG,EAAE,IAAI;IACT,GAAG,EAAE,QAAQ;IACb,GAAG,EAAE,MAAM;IACX,GAAG,EAAE,IAAI;IACT,GAAG,EAAE,IAAI;IACT,GAAG,EAAE,QAAQ;IACb,GAAG,EAAE,UAAU;IACf,GAAG,EAAE,KAAK;IACV,GAAG,EAAE,SAAS;IACd,GAAG,EAAE,SAAS;IACd,IAAI,EAAE,GAAG;IACT,IAAI,EAAE,GAAG;IACT,IAAI,EAAE,GAAG;IACT,IAAI,EAAE,GAAG;IACT,GAAG,EAAE,QAAQ;IACb,GAAG,EAAE,KAAK;IACV,GAAG,EAAE,OAAO;IACZ,GAAG,EAAE,OAAO;IACZ,GAAG,EAAE,OAAO;IACZ,IAAI,EAAE,GAAG;IACT,IAAI,EAAE,GAAG;IACT,GAAG,EAAE,GAAG;IACR,GAAG,EAAE,KAAK;IACV,IAAI,EAAE,GAAG;IACT,GAAG,EAAE,GAAG;IACR,GAAG,EAAE,KAAK;IACV,GAAG,EAAE,OAAO;IACZ,IAAI,EAAE;EACR,CAAC;EAED,KAAK,IAAIC,KAAK,IAAID,eAAe,EAAE;IACjC,IAAIE,OAAO,GAAGF,eAAe,CAACC,KAAK,CAAC,IAAI,EAAE;IAE1C,KAAK,IAAIlC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGmC,OAAO,CAAC5E,MAAM,EAAEyC,CAAC,EAAE,EAAE;MACvC,IAAID,IAAI,GAAGoC,OAAO,CAACf,SAAS,CAACpB,CAAC,EAAEA,CAAC,GAAG,CAAC,CAAC;MACtCgC,aAAa,CAACjC,IAAI,CAAC,GAAGmC,KAAK;IAC7B;EACF;EAEA,MAAME,WAAW,GAAG,IAAIC,MAAM,CAACC,MAAM,CAACC,IAAI,CAACP,aAAa,CAAC,CAACxC,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,GAAGoC,UAAU,EAAE,IAAI,CAAC;EAC7F;AACD;AACA;AACA;AACA;;EAEC,MAAMY,UAAU,GAAGC,YAAY,IAAI;IACjC,IAAIZ,WAAW,KAAKrE,SAAS,EAAE;IAC/BqE,WAAW,GAAGa,WAAW,CAACD,YAAY,IAAId,WAAW,CAAC;EACxD,CAAC;EACD;AACD;AACA;AACA;AACA;AACA;;EAEC,MAAMgB,SAAS,GAAG,CAACrC,GAAG,EAAEsC,IAAI,GAAG,MAAM,KAAKtC,GAAG,CAACqC,SAAS,CAACC,IAAI,CAAC;EAC7D;AACD;AACA;AACA;AACA;AACA;AACA;;EAEC,MAAMC,SAAS,GAAGvC,GAAG,IAAI;IACvB,OAAOJ,OAAO,CAACI,GAAG,CAAC,CAACE,MAAM;IAC1B;AACH;AACA;AACA;IACG,CAACU,MAAM,EAAEnB,IAAI,KAAK;MAChB,OAAOmB,MAAM,GAAG4B,UAAU,CAAC/C,IAAI,CAAC;IAClC,CAAC,EAAE,EAAE,CAAC;EACR,CAAC;EACD;AACD;AACA;AACA;;EAEC,MAAM+C,UAAU,GAAGxC,GAAG,IAAI;IACxBA,GAAG,GAAGqC,SAAS,CAACrC,GAAG,CAAC,CAACyC,WAAW,EAAE,CAACxC,OAAO,CAAC6B,WAAW,EAAE,EACxD;IACArC,IAAI,KAAK;MACP,OAAOiC,aAAa,CAACjC,IAAI,CAAC,IAAI,EAAE;IAClC,CAAC,CAAC,CAAC,CAAC;;IAEJ,OAAO4C,SAAS,CAACrC,GAAG,EAAE,KAAK,CAAC;EAC9B,CAAC;EACD;AACD;AACA;AACA;AACA;;EAEC,UAAU0C,SAAS,CAACrB,WAAW,EAAE;IAC/B,KAAK,MAAM,CAACsB,cAAc,EAAEC,cAAc,CAAC,IAAIvB,WAAW,EAAE;MAC1D,KAAK,IAAI3B,CAAC,GAAGiD,cAAc,EAAEjD,CAAC,IAAIkD,cAAc,EAAElD,CAAC,EAAE,EAAE;QACrD,IAAImD,QAAQ,GAAGC,MAAM,CAACC,YAAY,CAACrD,CAAC,CAAC;QACrC,IAAIsD,MAAM,GAAGT,SAAS,CAACM,QAAQ,CAAC;QAEhC,IAAIG,MAAM,IAAIH,QAAQ,CAACJ,WAAW,EAAE,EAAE;UACpC;QACF,CAAC,CAAC;QACF;QACA;QACA;QACA;;QAGA,IAAIO,MAAM,CAAC/F,MAAM,GAAGwE,eAAe,EAAE;UACnC;QACF;QAEA,IAAIuB,MAAM,CAAC/F,MAAM,IAAI,CAAC,EAAE;UACtB;QACF;QAEA,MAAM;UACJ+F,MAAM,EAAEA,MAAM;UACdH,QAAQ,EAAEA,QAAQ;UAClBI,UAAU,EAAEvD;QACd,CAAC;MACH;IACF;EACF;EACA;AACD;AACA;AACA;AACA;;EAEC,MAAMwD,YAAY,GAAG7B,WAAW,IAAI;IAClC;IACA,MAAM8B,YAAY,GAAG,CAAC,CAAC;IACvB;AACH;AACA;AACA;;IAEG,MAAMC,WAAW,GAAG,CAACJ,MAAM,EAAEK,MAAM,KAAK;MACtC;MACA,MAAMC,UAAU,GAAGH,YAAY,CAACH,MAAM,CAAC,IAAI,IAAInD,GAAG,EAAE;MACpD,MAAM0D,IAAI,GAAG,IAAIxB,MAAM,CAAC,GAAG,GAAGpC,YAAY,CAAC2D,UAAU,CAAC,GAAG,GAAG,EAAE,IAAI,CAAC;MAEnE,IAAID,MAAM,CAACG,KAAK,CAACD,IAAI,CAAC,EAAE;QACtB;MACF;MAEAD,UAAU,CAACG,GAAG,CAAC1D,YAAY,CAACsD,MAAM,CAAC,CAAC;MACpCF,YAAY,CAACH,MAAM,CAAC,GAAGM,UAAU;IACnC,CAAC;IAED,KAAK,IAAIlD,KAAK,IAAIsC,SAAS,CAACrB,WAAW,CAAC,EAAE;MACxC+B,WAAW,CAAChD,KAAK,CAAC4C,MAAM,EAAE5C,KAAK,CAAC4C,MAAM,CAAC;MACvCI,WAAW,CAAChD,KAAK,CAAC4C,MAAM,EAAE5C,KAAK,CAACyC,QAAQ,CAAC;IAC3C;IAEA,OAAOM,YAAY;EACrB,CAAC;EACD;AACD;AACA;AACA;AACA;AACA;AACA;;EAEC,MAAMf,WAAW,GAAGf,WAAW,IAAI;IACjC;IACA,MAAM8B,YAAY,GAAGD,YAAY,CAAC7B,WAAW,CAAC;IAC9C;;IAEA,MAAME,WAAW,GAAG,CAAC,CAAC;IACtB;;IAEA,IAAImC,UAAU,GAAG,EAAE;IAEnB,KAAK,IAAIV,MAAM,IAAIG,YAAY,EAAE;MAC/B,IAAIQ,GAAG,GAAGR,YAAY,CAACH,MAAM,CAAC;MAE9B,IAAIW,GAAG,EAAE;QACPpC,WAAW,CAACyB,MAAM,CAAC,GAAGrD,YAAY,CAACgE,GAAG,CAAC;MACzC;MAEA,IAAIX,MAAM,CAAC/F,MAAM,GAAG,CAAC,EAAE;QACrByG,UAAU,CAAC7G,IAAI,CAACkD,YAAY,CAACiD,MAAM,CAAC,CAAC;MACvC;IACF;IAEAU,UAAU,CAACE,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAAC7G,MAAM,GAAG4G,CAAC,CAAC5G,MAAM,CAAC;IAC9C,MAAM8G,eAAe,GAAGlF,cAAc,CAAC6E,UAAU,CAAC;IAClDlC,cAAc,GAAG,IAAIO,MAAM,CAAC,GAAG,GAAGgC,eAAe,EAAE,GAAG,CAAC;IACvD,OAAOxC,WAAW;EACpB,CAAC;EACD;AACD;AACA;AACA;AACA;AACA;;EAEC,MAAMyC,WAAW,GAAG,CAACC,OAAO,EAAEC,eAAe,GAAG,CAAC,KAAK;IACpD,IAAIC,cAAc,GAAG,CAAC;IACtBF,OAAO,GAAGA,OAAO,CAACG,GAAG,CAACpE,GAAG,IAAI;MAC3B,IAAIuB,WAAW,CAACvB,GAAG,CAAC,EAAE;QACpBmE,cAAc,IAAInE,GAAG,CAAC/C,MAAM;MAC9B;MAEA,OAAOsE,WAAW,CAACvB,GAAG,CAAC,IAAIA,GAAG;IAChC,CAAC,CAAC;IAEF,IAAImE,cAAc,IAAID,eAAe,EAAE;MACrC,OAAO/E,eAAe,CAAC8E,OAAO,CAAC;IACjC;IAEA,OAAO,EAAE;EACX,CAAC;EACD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEC,MAAMI,mBAAmB,GAAG,CAACrE,GAAG,EAAEkE,eAAe,GAAG,CAAC,KAAK;IACxDA,eAAe,GAAG7D,IAAI,CAACC,GAAG,CAAC4D,eAAe,EAAElE,GAAG,CAAC/C,MAAM,GAAG,CAAC,CAAC;IAC3D,OAAO4B,cAAc,CAAC6B,aAAa,CAACV,GAAG,CAAC,CAACoE,GAAG,CAACE,OAAO,IAAI;MACtD,OAAON,WAAW,CAACM,OAAO,EAAEJ,eAAe,CAAC;IAC9C,CAAC,CAAC,CAAC;EACL,CAAC;EACD;AACD;AACA;AACA;AACA;AACA;AACA;;EAEC,MAAMK,kBAAkB,GAAG,CAACC,SAAS,EAAEC,GAAG,GAAG,IAAI,KAAK;IACpD,IAAIP,eAAe,GAAGM,SAAS,CAACvH,MAAM,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC;IAClD,OAAO4B,cAAc,CAAC2F,SAAS,CAACJ,GAAG,CAACM,QAAQ,IAAI;MAC9C,IAAIC,GAAG,GAAG,EAAE;MACZ,MAAMC,GAAG,GAAGH,GAAG,GAAGC,QAAQ,CAACzH,MAAM,EAAE,GAAGyH,QAAQ,CAACzH,MAAM,EAAE,GAAG,CAAC;MAE3D,KAAK,IAAI4H,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,GAAG,EAAEC,CAAC,EAAE,EAAE;QAC5BF,GAAG,CAAC9H,IAAI,CAACwH,mBAAmB,CAACK,QAAQ,CAACI,OAAO,CAACD,CAAC,CAAC,IAAI,EAAE,EAAEX,eAAe,CAAC,CAAC;MAC3E;MAEA,OAAO/E,eAAe,CAACwF,GAAG,CAAC;IAC7B,CAAC,CAAC,CAAC;EACL,CAAC;EACD;AACD;AACA;AACA;AACA;;EAGC,MAAMI,WAAW,GAAG,CAACC,UAAU,EAAER,SAAS,KAAK;IAC7C,KAAK,MAAMG,GAAG,IAAIH,SAAS,EAAE;MAC3B,IAAIG,GAAG,CAAC9D,KAAK,IAAImE,UAAU,CAACnE,KAAK,IAAI8D,GAAG,CAACM,GAAG,IAAID,UAAU,CAACC,GAAG,EAAE;QAC9D;MACF;MAEA,IAAIN,GAAG,CAACG,OAAO,CAAC5F,IAAI,CAAC,EAAE,CAAC,KAAK8F,UAAU,CAACF,OAAO,CAAC5F,IAAI,CAAC,EAAE,CAAC,EAAE;QACxD;MACF;MAEA,IAAIgG,YAAY,GAAGF,UAAU,CAACG,KAAK;MACnC;AACL;AACA;;MAEK,MAAMpG,MAAM,GAAGqG,IAAI,IAAI;QACrB,KAAK,MAAMC,WAAW,IAAIH,YAAY,EAAE;UACtC,IAAIG,WAAW,CAACxE,KAAK,KAAKuE,IAAI,CAACvE,KAAK,IAAIwE,WAAW,CAACC,MAAM,KAAKF,IAAI,CAACE,MAAM,EAAE;YAC1E,OAAO,KAAK;UACd;UAEA,IAAIF,IAAI,CAACnI,MAAM,IAAI,CAAC,IAAIoI,WAAW,CAACpI,MAAM,IAAI,CAAC,EAAE;YAC/C;UACF,CAAC,CAAC;UACF;UACA;UACA;UACA;;UAGA,IAAImI,IAAI,CAACvE,KAAK,GAAGwE,WAAW,CAACxE,KAAK,IAAIuE,IAAI,CAACH,GAAG,GAAGI,WAAW,CAACxE,KAAK,EAAE;YAClE,OAAO,IAAI;UACb;UAEA,IAAIwE,WAAW,CAACxE,KAAK,GAAGuE,IAAI,CAACvE,KAAK,IAAIwE,WAAW,CAACJ,GAAG,GAAGG,IAAI,CAACvE,KAAK,EAAE;YAClE,OAAO,IAAI;UACb;QACF;QAEA,OAAO,KAAK;MACd,CAAC;MAED,IAAI0E,QAAQ,GAAGZ,GAAG,CAACQ,KAAK,CAACpG,MAAM,CAACA,MAAM,CAAC;MAEvC,IAAIwG,QAAQ,CAACtI,MAAM,GAAG,CAAC,EAAE;QACvB;MACF;MAEA,OAAO,IAAI;IACb;IAEA,OAAO,KAAK;EACd,CAAC;EAED,MAAMuI,QAAQ,CAAC;IACbhJ,WAAW,GAAG;MACZ;MACA,IAAI,CAAC2I,KAAK,GAAG,EAAE;MACf;;MAEA,IAAI,CAACL,OAAO,GAAG,EAAE;MACjB,IAAI,CAACjE,KAAK,GAAG,CAAC;MACd,IAAI,CAACoE,GAAG,GAAG,CAAC;IACd;IACA;AACH;AACA;;IAGGxB,GAAG,CAAC2B,IAAI,EAAE;MACR,IAAIA,IAAI,EAAE;QACR,IAAI,CAACD,KAAK,CAACtI,IAAI,CAACuI,IAAI,CAAC;QACrB,IAAI,CAACN,OAAO,CAACjI,IAAI,CAACuI,IAAI,CAACE,MAAM,CAAC;QAC9B,IAAI,CAACzE,KAAK,GAAGR,IAAI,CAACoF,GAAG,CAACL,IAAI,CAACvE,KAAK,EAAE,IAAI,CAACA,KAAK,CAAC;QAC7C,IAAI,CAACoE,GAAG,GAAG5E,IAAI,CAACC,GAAG,CAAC8E,IAAI,CAACH,GAAG,EAAE,IAAI,CAACA,GAAG,CAAC;MACzC;IACF;IAEAS,IAAI,GAAG;MACL,OAAO,IAAI,CAACP,KAAK,CAAC,IAAI,CAACA,KAAK,CAAClI,MAAM,GAAG,CAAC,CAAC;IAC1C;IAEAA,MAAM,GAAG;MACP,OAAO,IAAI,CAACkI,KAAK,CAAClI,MAAM;IAC1B;IACA;AACH;AACA;AACA;;IAGG0I,KAAK,CAACC,QAAQ,EAAEC,UAAU,EAAE;MAC1B,IAAIF,KAAK,GAAG,IAAIH,QAAQ,EAAE;MAC1B,IAAIL,KAAK,GAAGW,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAAC,IAAI,CAACb,KAAK,CAAC,CAAC;MAClD,IAAIc,SAAS,GAAGd,KAAK,CAACe,GAAG,EAAE;MAE3B,KAAK,MAAMd,IAAI,IAAID,KAAK,EAAE;QACxBQ,KAAK,CAAClC,GAAG,CAAC2B,IAAI,CAAC;MACjB;MAEA,IAAIe,WAAW,GAAGN,UAAU,CAACP,MAAM,CAACxE,SAAS,CAAC,CAAC,EAAE8E,QAAQ,GAAGK,SAAS,CAACpF,KAAK,CAAC;MAC5E,IAAIuF,cAAc,GAAGD,WAAW,CAAClJ,MAAM;MACvC0I,KAAK,CAAClC,GAAG,CAAC;QACR5C,KAAK,EAAEoF,SAAS,CAACpF,KAAK;QACtBoE,GAAG,EAAEgB,SAAS,CAACpF,KAAK,GAAGuF,cAAc;QACrCnJ,MAAM,EAAEmJ,cAAc;QACtBd,MAAM,EAAEa;MACV,CAAC,CAAC;MACF,OAAOR,KAAK;IACd;EAEF;EACA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAGC,MAAMU,UAAU,GAAGrG,GAAG,IAAI;IACxBkC,UAAU,EAAE;IACZlC,GAAG,GAAGuC,SAAS,CAACvC,GAAG,CAAC;IACpB,IAAIV,OAAO,GAAG,EAAE;IAChB,IAAIkF,SAAS,GAAG,CAAC,IAAIgB,QAAQ,EAAE,CAAC;IAEhC,KAAK,IAAI9F,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGM,GAAG,CAAC/C,MAAM,EAAEyC,CAAC,EAAE,EAAE;MACnC,IAAI4F,MAAM,GAAGtF,GAAG,CAACc,SAAS,CAACpB,CAAC,CAAC;MAC7B,IAAI8D,KAAK,GAAG8B,MAAM,CAAC9B,KAAK,CAAChC,cAAc,CAAC;MACxC,MAAM/B,IAAI,GAAGO,GAAG,CAACc,SAAS,CAACpB,CAAC,EAAEA,CAAC,GAAG,CAAC,CAAC;MACpC,MAAM4G,SAAS,GAAG9C,KAAK,GAAGA,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;MAC3C;;MAEA,IAAI+C,WAAW,GAAG,EAAE;MACpB,IAAIC,WAAW,GAAG,IAAI3G,GAAG,EAAE;MAE3B,KAAK,MAAM6E,QAAQ,IAAIF,SAAS,EAAE;QAChC,MAAMqB,UAAU,GAAGnB,QAAQ,CAACgB,IAAI,EAAE;QAElC,IAAI,CAACG,UAAU,IAAIA,UAAU,CAAC5I,MAAM,IAAI,CAAC,IAAI4I,UAAU,CAACZ,GAAG,IAAIvF,CAAC,EAAE;UAChE;UACA,IAAI4G,SAAS,EAAE;YACb,MAAM1B,GAAG,GAAG0B,SAAS,CAACrJ,MAAM;YAC5ByH,QAAQ,CAACjB,GAAG,CAAC;cACX5C,KAAK,EAAEnB,CAAC;cACRuF,GAAG,EAAEvF,CAAC,GAAGkF,GAAG;cACZ3H,MAAM,EAAE2H,GAAG;cACXU,MAAM,EAAEgB;YACV,CAAC,CAAC;YACFE,WAAW,CAAC/C,GAAG,CAAC,GAAG,CAAC;UACtB,CAAC,MAAM;YACLiB,QAAQ,CAACjB,GAAG,CAAC;cACX5C,KAAK,EAAEnB,CAAC;cACRuF,GAAG,EAAEvF,CAAC,GAAG,CAAC;cACVzC,MAAM,EAAE,CAAC;cACTqI,MAAM,EAAE7F;YACV,CAAC,CAAC;YACF+G,WAAW,CAAC/C,GAAG,CAAC,GAAG,CAAC;UACtB;QACF,CAAC,MAAM,IAAI6C,SAAS,EAAE;UACpB,IAAIX,KAAK,GAAGjB,QAAQ,CAACiB,KAAK,CAACjG,CAAC,EAAEmG,UAAU,CAAC;UACzC,MAAMjB,GAAG,GAAG0B,SAAS,CAACrJ,MAAM;UAC5B0I,KAAK,CAAClC,GAAG,CAAC;YACR5C,KAAK,EAAEnB,CAAC;YACRuF,GAAG,EAAEvF,CAAC,GAAGkF,GAAG;YACZ3H,MAAM,EAAE2H,GAAG;YACXU,MAAM,EAAEgB;UACV,CAAC,CAAC;UACFC,WAAW,CAAC1J,IAAI,CAAC8I,KAAK,CAAC;QACzB,CAAC,MAAM;UACL;UACA;UACAa,WAAW,CAAC/C,GAAG,CAAC,GAAG,CAAC;QACtB;MACF,CAAC,CAAC;;MAGF,IAAI8C,WAAW,CAACtJ,MAAM,GAAG,CAAC,EAAE;QAC1B;QACAsJ,WAAW,GAAGA,WAAW,CAAC3C,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;UACvC,OAAOD,CAAC,CAAC5G,MAAM,EAAE,GAAG6G,CAAC,CAAC7G,MAAM,EAAE;QAChC,CAAC,CAAC;QAEF,KAAK,IAAI0I,KAAK,IAAIY,WAAW,EAAE;UAC7B;UACA,IAAIxB,WAAW,CAACY,KAAK,EAAEnB,SAAS,CAAC,EAAE;YACjC;UACF;UAEAA,SAAS,CAAC3H,IAAI,CAAC8I,KAAK,CAAC;QACvB;QAEA;MACF,CAAC,CAAC;MACF;MACA;MACA;;MAGA,IAAIjG,CAAC,GAAG,CAAC,IAAI8G,WAAW,CAAC1G,IAAI,IAAI,CAAC,IAAI,CAAC0G,WAAW,CAACC,GAAG,CAAC,GAAG,CAAC,EAAE;QAC3DnH,OAAO,IAAIiF,kBAAkB,CAACC,SAAS,EAAE,KAAK,CAAC;QAC/C,IAAIkC,OAAO,GAAG,IAAIlB,QAAQ,EAAE;QAC5B,MAAMmB,OAAO,GAAGnC,SAAS,CAAC,CAAC,CAAC;QAE5B,IAAImC,OAAO,EAAE;UACXD,OAAO,CAACjD,GAAG,CAACkD,OAAO,CAACjB,IAAI,EAAE,CAAC;QAC7B;QAEAlB,SAAS,GAAG,CAACkC,OAAO,CAAC;MACvB;IACF;IAEApH,OAAO,IAAIiF,kBAAkB,CAACC,SAAS,EAAE,IAAI,CAAC;IAC9C,OAAOlF,OAAO;EAChB,CAAC;;EAED;;EAEA;AACD;AACA;AACA;AACA;AACA;EACC,MAAMsH,OAAO,GAAG,CAACC,GAAG,EAAE9I,IAAI,KAAK;IAC7B,IAAI,CAAC8I,GAAG,EAAE;IACV,OAAOA,GAAG,CAAC9I,IAAI,CAAC;EAClB,CAAC;EACD;AACD;AACA;AACA;AACA;AACA;;EAEC,MAAM+I,cAAc,GAAG,CAACD,GAAG,EAAE9I,IAAI,KAAK;IACpC,IAAI,CAAC8I,GAAG,EAAE;IACV,IAAIzB,IAAI;MACJzH,KAAK,GAAGI,IAAI,CAAC3B,KAAK,CAAC,GAAG,CAAC;IAE3B,OAAO,CAACgJ,IAAI,GAAGzH,KAAK,CAACc,KAAK,EAAE,MAAMoI,GAAG,GAAGA,GAAG,CAACzB,IAAI,CAAC,CAAC,CAAC;IAEnD,OAAOyB,GAAG;EACZ,CAAC;EACD;AACD;AACA;AACA;AACA;;EAEC,MAAME,UAAU,GAAG,CAAC3G,KAAK,EAAE4G,KAAK,EAAEC,MAAM,KAAK;IAC3C,IAAIC,KAAK,EAAEC,GAAG;IACd,IAAI,CAAC/G,KAAK,EAAE,OAAO,CAAC;IACpBA,KAAK,GAAGA,KAAK,GAAG,EAAE;IAClB,IAAI4G,KAAK,CAACI,KAAK,IAAI,IAAI,EAAE,OAAO,CAAC;IACjCD,GAAG,GAAG/G,KAAK,CAACiH,MAAM,CAACL,KAAK,CAACI,KAAK,CAAC;IAC/B,IAAID,GAAG,KAAK,CAAC,CAAC,EAAE,OAAO,CAAC;IACxBD,KAAK,GAAGF,KAAK,CAACM,MAAM,CAACrK,MAAM,GAAGmD,KAAK,CAACnD,MAAM;IAC1C,IAAIkK,GAAG,KAAK,CAAC,EAAED,KAAK,IAAI,GAAG;IAC3B,OAAOA,KAAK,GAAGD,MAAM;EACvB,CAAC;EACD;AACD;AACA;AACA;;EAEC,MAAMM,WAAW,GAAG,CAACV,GAAG,EAAE3I,GAAG,KAAK;IAChC,IAAIkC,KAAK,GAAGyG,GAAG,CAAC3I,GAAG,CAAC;IACpB,IAAI,OAAOkC,KAAK,IAAI,UAAU,EAAE,OAAOA,KAAK;IAE5C,IAAIA,KAAK,IAAI,CAAChC,KAAK,CAACC,OAAO,CAAC+B,KAAK,CAAC,EAAE;MAClCyG,GAAG,CAAC3I,GAAG,CAAC,GAAG,CAACkC,KAAK,CAAC;IACpB;EACF,CAAC;EACD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEC,MAAMoH,SAAS,GAAG,CAACC,MAAM,EAAEtL,QAAQ,KAAK;IACtC,IAAIiC,KAAK,CAACC,OAAO,CAACoJ,MAAM,CAAC,EAAE;MACzBA,MAAM,CAACpL,OAAO,CAACF,QAAQ,CAAC;IAC1B,CAAC,MAAM;MACL,KAAK,IAAI+B,GAAG,IAAIuJ,MAAM,EAAE;QACtB,IAAIA,MAAM,CAACjJ,cAAc,CAACN,GAAG,CAAC,EAAE;UAC9B/B,QAAQ,CAACsL,MAAM,CAACvJ,GAAG,CAAC,EAAEA,GAAG,CAAC;QAC5B;MACF;IACF;EACF,CAAC;EACD,MAAMwJ,GAAG,GAAG,CAAC7D,CAAC,EAAEC,CAAC,KAAK;IACpB,IAAI,OAAOD,CAAC,KAAK,QAAQ,IAAI,OAAOC,CAAC,KAAK,QAAQ,EAAE;MAClD,OAAOD,CAAC,GAAGC,CAAC,GAAG,CAAC,GAAGD,CAAC,GAAGC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;IACnC;IAEAD,CAAC,GAAGtB,SAAS,CAACsB,CAAC,GAAG,EAAE,CAAC,CAACpB,WAAW,EAAE;IACnCqB,CAAC,GAAGvB,SAAS,CAACuB,CAAC,GAAG,EAAE,CAAC,CAACrB,WAAW,EAAE;IACnC,IAAIoB,CAAC,GAAGC,CAAC,EAAE,OAAO,CAAC;IACnB,IAAIA,CAAC,GAAGD,CAAC,EAAE,OAAO,CAAC,CAAC;IACpB,OAAO,CAAC;EACV,CAAC;;EAED;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEC,MAAM8D,MAAM,CAAC;IACX;;IAEA;AACH;AACA;AACA;AACA;AACA;IACGnL,WAAW,CAACoL,KAAK,EAAEhK,QAAQ,EAAE;MAC3B,IAAI,CAACgK,KAAK,GAAG,KAAK,CAAC;MACnB,IAAI,CAAChK,QAAQ,GAAG,KAAK,CAAC;MACtB,IAAI,CAACgK,KAAK,GAAGA,KAAK;MAClB,IAAI,CAAChK,QAAQ,GAAGA,QAAQ,IAAI;QAC1BiK,UAAU,EAAE;MACd,CAAC;IACH;;IAEA;AACH;AACA;AACA;AACA;IACGC,QAAQ,CAACC,KAAK,EAAEC,uBAAuB,EAAEC,OAAO,EAAE;MAChD,IAAI,CAACF,KAAK,IAAI,CAACA,KAAK,CAAC9K,MAAM,EAAE,OAAO,EAAE;MACtC,MAAMiL,MAAM,GAAG,EAAE;MACjB,MAAMC,KAAK,GAAGJ,KAAK,CAAC3L,KAAK,CAAC,KAAK,CAAC;MAChC,IAAIgM,WAAW;MAEf,IAAIH,OAAO,EAAE;QACXG,WAAW,GAAG,IAAIrG,MAAM,CAAC,IAAI,GAAGC,MAAM,CAACC,IAAI,CAACgG,OAAO,CAAC,CAAC7D,GAAG,CAACrE,YAAY,CAAC,CAACb,IAAI,CAAC,GAAG,CAAC,GAAG,UAAU,CAAC;MAChG;MAEAiJ,KAAK,CAAC9L,OAAO,CAACgM,IAAI,IAAI;QACpB,IAAIC,WAAW;QACf,IAAIC,KAAK,GAAG,IAAI;QAChB,IAAInB,KAAK,GAAG,IAAI,CAAC,CAAC;;QAElB,IAAIgB,WAAW,KAAKE,WAAW,GAAGD,IAAI,CAAC7E,KAAK,CAAC4E,WAAW,CAAC,CAAC,EAAE;UAC1DG,KAAK,GAAGD,WAAW,CAAC,CAAC,CAAC;UACtBD,IAAI,GAAGC,WAAW,CAAC,CAAC,CAAC;QACvB;QAEA,IAAID,IAAI,CAACpL,MAAM,GAAG,CAAC,EAAE;UACnB,IAAI,IAAI,CAACW,QAAQ,CAACiK,UAAU,EAAE;YAC5BT,KAAK,GAAGf,UAAU,CAACgC,IAAI,CAAC,IAAI,IAAI;UAClC,CAAC,MAAM;YACLjB,KAAK,GAAGrH,YAAY,CAACsI,IAAI,CAAC;UAC5B;UAEA,IAAIjB,KAAK,IAAIY,uBAAuB,EAAEZ,KAAK,GAAG,KAAK,GAAGA,KAAK;QAC7D;QAEAc,MAAM,CAACrL,IAAI,CAAC;UACVyK,MAAM,EAAEe,IAAI;UACZjB,KAAK,EAAEA,KAAK,GAAG,IAAIrF,MAAM,CAACqF,KAAK,EAAE,IAAI,CAAC,GAAG,IAAI;UAC7CmB,KAAK,EAAEA;QACT,CAAC,CAAC;MACJ,CAAC,CAAC;MACF,OAAOL,MAAM;IACf;;IAEA;AACH;AACA;AACA;AACA;AACA;AACA;AACA;IACGM,gBAAgB,CAACT,KAAK,EAAExJ,OAAO,EAAE;MAC/B,IAAI8I,MAAM,GAAG,IAAI,CAACoB,aAAa,CAACV,KAAK,EAAExJ,OAAO,CAAC;MAC/C,OAAO,IAAI,CAACmK,iBAAiB,CAACrB,MAAM,CAAC;IACvC;IACA;AACH;AACA;AACA;;IAGGqB,iBAAiB,CAACrB,MAAM,EAAE;MACxB,MAAMa,MAAM,GAAGb,MAAM,CAACa,MAAM;QACtBS,WAAW,GAAGT,MAAM,CAACjL,MAAM;MAEjC,IAAI,CAAC0L,WAAW,EAAE;QAChB,OAAO,YAAY;UACjB,OAAO,CAAC;QACV,CAAC;MACH;MAEA,MAAMC,MAAM,GAAGvB,MAAM,CAAC9I,OAAO,CAACqK,MAAM;QAC9BX,OAAO,GAAGZ,MAAM,CAACY,OAAO;QACxBY,WAAW,GAAGD,MAAM,CAAC3L,MAAM;QAC3B6L,SAAS,GAAGzB,MAAM,CAACyB,SAAS;MAElC,IAAI,CAACD,WAAW,EAAE;QAChB,OAAO,YAAY;UACjB,OAAO,CAAC;QACV,CAAC;MACH;MACA;AACL;AACA;AACA;AACA;;MAGK,MAAME,WAAW,GAAG,YAAY;QAC9B,IAAIF,WAAW,KAAK,CAAC,EAAE;UACrB,OAAO,UAAU7B,KAAK,EAAEgC,IAAI,EAAE;YAC5B,MAAMT,KAAK,GAAGK,MAAM,CAAC,CAAC,CAAC,CAACL,KAAK;YAC7B,OAAOxB,UAAU,CAAC+B,SAAS,CAACE,IAAI,EAAET,KAAK,CAAC,EAAEvB,KAAK,EAAEiB,OAAO,CAACM,KAAK,CAAC,IAAI,CAAC,CAAC;UACvE,CAAC;QACH;QAEA,OAAO,UAAUvB,KAAK,EAAEgC,IAAI,EAAE;UAC5B,IAAIC,GAAG,GAAG,CAAC,CAAC,CAAC;;UAEb,IAAIjC,KAAK,CAACuB,KAAK,EAAE;YACf,MAAMnI,KAAK,GAAG0I,SAAS,CAACE,IAAI,EAAEhC,KAAK,CAACuB,KAAK,CAAC;YAE1C,IAAI,CAACvB,KAAK,CAACI,KAAK,IAAIhH,KAAK,EAAE;cACzB6I,GAAG,IAAI,CAAC,GAAGJ,WAAW;YACxB,CAAC,MAAM;cACLI,GAAG,IAAIlC,UAAU,CAAC3G,KAAK,EAAE4G,KAAK,EAAE,CAAC,CAAC;YACpC;UACF,CAAC,MAAM;YACLQ,SAAS,CAACS,OAAO,EAAE,CAAChB,MAAM,EAAEsB,KAAK,KAAK;cACpCU,GAAG,IAAIlC,UAAU,CAAC+B,SAAS,CAACE,IAAI,EAAET,KAAK,CAAC,EAAEvB,KAAK,EAAEC,MAAM,CAAC;YAC1D,CAAC,CAAC;UACJ;UAEA,OAAOgC,GAAG,GAAGJ,WAAW;QAC1B,CAAC;MACH,CAAC,EAAE;MAEH,IAAIF,WAAW,KAAK,CAAC,EAAE;QACrB,OAAO,UAAUK,IAAI,EAAE;UACrB,OAAOD,WAAW,CAACb,MAAM,CAAC,CAAC,CAAC,EAAEc,IAAI,CAAC;QACrC,CAAC;MACH;MAEA,IAAI3B,MAAM,CAAC9I,OAAO,CAAC2K,WAAW,KAAK,KAAK,EAAE;QACxC,OAAO,UAAUF,IAAI,EAAE;UACrB,IAAI9B,KAAK;YACL+B,GAAG,GAAG,CAAC;UAEX,KAAK,IAAIjC,KAAK,IAAIkB,MAAM,EAAE;YACxBhB,KAAK,GAAG6B,WAAW,CAAC/B,KAAK,EAAEgC,IAAI,CAAC;YAChC,IAAI9B,KAAK,IAAI,CAAC,EAAE,OAAO,CAAC;YACxB+B,GAAG,IAAI/B,KAAK;UACd;UAEA,OAAO+B,GAAG,GAAGN,WAAW;QAC1B,CAAC;MACH,CAAC,MAAM;QACL,OAAO,UAAUK,IAAI,EAAE;UACrB,IAAIC,GAAG,GAAG,CAAC;UACXzB,SAAS,CAACU,MAAM,EAAElB,KAAK,IAAI;YACzBiC,GAAG,IAAIF,WAAW,CAAC/B,KAAK,EAAEgC,IAAI,CAAC;UACjC,CAAC,CAAC;UACF,OAAOC,GAAG,GAAGN,WAAW;QAC1B,CAAC;MACH;IACF;;IAEA;AACH;AACA;AACA;AACA;AACA;AACA;IACGQ,eAAe,CAACpB,KAAK,EAAExJ,OAAO,EAAE;MAC9B,IAAI8I,MAAM,GAAG,IAAI,CAACoB,aAAa,CAACV,KAAK,EAAExJ,OAAO,CAAC;MAC/C,OAAO,IAAI,CAAC6K,gBAAgB,CAAC/B,MAAM,CAAC;IACtC;IAEA+B,gBAAgB,CAAC/B,MAAM,EAAE;MACvB,IAAIgC,cAAc;QACdC,SAAS,GAAG,EAAE;MAClB,MAAMvN,IAAI,GAAG,IAAI;QACXwC,OAAO,GAAG8I,MAAM,CAAC9I,OAAO;QACxBqF,IAAI,GAAG,CAACyD,MAAM,CAACU,KAAK,IAAIxJ,OAAO,CAACgL,UAAU,GAAGhL,OAAO,CAACgL,UAAU,GAAGhL,OAAO,CAACqF,IAAI;MAEpF,IAAI,OAAOA,IAAI,IAAI,UAAU,EAAE;QAC7B,OAAOA,IAAI,CAAC4F,IAAI,CAAC,IAAI,CAAC;MACxB;MACA;AACL;AACA;AACA;AACA;;MAGK,MAAMC,SAAS,GAAG,SAASA,SAAS,CAAC1L,IAAI,EAAE6C,MAAM,EAAE;QACjD,IAAI7C,IAAI,KAAK,QAAQ,EAAE,OAAO6C,MAAM,CAACsG,KAAK;QAC1C,OAAOG,MAAM,CAACyB,SAAS,CAAC/M,IAAI,CAAC6L,KAAK,CAAChH,MAAM,CAAC8I,EAAE,CAAC,EAAE3L,IAAI,CAAC;MACtD,CAAC,CAAC,CAAC;;MAGH,IAAI6F,IAAI,EAAE;QACR,KAAK,IAAI+F,CAAC,IAAI/F,IAAI,EAAE;UAClB,IAAIyD,MAAM,CAACU,KAAK,IAAI4B,CAAC,CAACpB,KAAK,KAAK,QAAQ,EAAE;YACxCe,SAAS,CAACzM,IAAI,CAAC8M,CAAC,CAAC;UACnB;QACF;MACF,CAAC,CAAC;MACF;;MAGA,IAAItC,MAAM,CAACU,KAAK,EAAE;QAChBsB,cAAc,GAAG,IAAI;QAErB,KAAK,IAAIO,GAAG,IAAIN,SAAS,EAAE;UACzB,IAAIM,GAAG,CAACrB,KAAK,KAAK,QAAQ,EAAE;YAC1Bc,cAAc,GAAG,KAAK;YACtB;UACF;QACF;QAEA,IAAIA,cAAc,EAAE;UAClBC,SAAS,CAAClI,OAAO,CAAC;YAChBmH,KAAK,EAAE,QAAQ;YACfsB,SAAS,EAAE;UACb,CAAC,CAAC;QACJ,CAAC,CAAC;MAEJ,CAAC,MAAM;QACLP,SAAS,GAAGA,SAAS,CAACvK,MAAM,CAAC6K,GAAG,IAAIA,GAAG,CAACrB,KAAK,KAAK,QAAQ,CAAC;MAC7D,CAAC,CAAC;;MAGF,MAAMuB,eAAe,GAAGR,SAAS,CAACrM,MAAM;MAExC,IAAI,CAAC6M,eAAe,EAAE;QACpB,OAAO,IAAI;MACb;MAEA,OAAO,UAAUjG,CAAC,EAAEC,CAAC,EAAE;QACrB,IAAIlD,MAAM,EAAE2H,KAAK;QAEjB,KAAK,IAAIwB,QAAQ,IAAIT,SAAS,EAAE;UAC9Bf,KAAK,GAAGwB,QAAQ,CAACxB,KAAK;UACtB,IAAIyB,UAAU,GAAGD,QAAQ,CAACF,SAAS,KAAK,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC;UACvDjJ,MAAM,GAAGoJ,UAAU,GAAGtC,GAAG,CAAC+B,SAAS,CAAClB,KAAK,EAAE1E,CAAC,CAAC,EAAE4F,SAAS,CAAClB,KAAK,EAAEzE,CAAC,CAAC,CAAC;UACnE,IAAIlD,MAAM,EAAE,OAAOA,MAAM;QAC3B;QAEA,OAAO,CAAC;MACV,CAAC;IACH;;IAEA;AACH;AACA;AACA;AACA;AACA;IACG6H,aAAa,CAACV,KAAK,EAAEkC,QAAQ,EAAE;MAC7B,MAAMhC,OAAO,GAAG,CAAC,CAAC;MAClB,IAAI1J,OAAO,GAAGyD,MAAM,CAACkI,MAAM,CAAC,CAAC,CAAC,EAAED,QAAQ,CAAC;MACzC1C,WAAW,CAAChJ,OAAO,EAAE,MAAM,CAAC;MAC5BgJ,WAAW,CAAChJ,OAAO,EAAE,YAAY,CAAC,CAAC,CAAC;;MAEpC,IAAIA,OAAO,CAACqK,MAAM,EAAE;QAClBrB,WAAW,CAAChJ,OAAO,EAAE,QAAQ,CAAC;QAC9B,MAAMqK,MAAM,GAAG,EAAE;QACjBrK,OAAO,CAACqK,MAAM,CAACvM,OAAO,CAACkM,KAAK,IAAI;UAC9B,IAAI,OAAOA,KAAK,IAAI,QAAQ,EAAE;YAC5BA,KAAK,GAAG;cACNA,KAAK,EAAEA,KAAK;cACZtB,MAAM,EAAE;YACV,CAAC;UACH;UAEA2B,MAAM,CAAC/L,IAAI,CAAC0L,KAAK,CAAC;UAClBN,OAAO,CAACM,KAAK,CAACA,KAAK,CAAC,GAAG,QAAQ,IAAIA,KAAK,GAAGA,KAAK,CAACtB,MAAM,GAAG,CAAC;QAC7D,CAAC,CAAC;QACF1I,OAAO,CAACqK,MAAM,GAAGA,MAAM;MACzB;MAEA,OAAO;QACLrK,OAAO,EAAEA,OAAO;QAChBwJ,KAAK,EAAEA,KAAK,CAACtF,WAAW,EAAE,CAAC0H,IAAI,EAAE;QACjCjC,MAAM,EAAE,IAAI,CAACJ,QAAQ,CAACC,KAAK,EAAExJ,OAAO,CAACyJ,uBAAuB,EAAEC,OAAO,CAAC;QACtEmC,KAAK,EAAE,CAAC;QACRxC,KAAK,EAAE,EAAE;QACTK,OAAO,EAAEA,OAAO;QAChBa,SAAS,EAAEvK,OAAO,CAAC8L,OAAO,GAAGvD,cAAc,GAAGF;MAChD,CAAC;IACH;;IAEA;AACH;AACA;AACA;IACGS,MAAM,CAACU,KAAK,EAAExJ,OAAO,EAAE;MACrB,IAAIxC,IAAI,GAAG,IAAI;QACXmL,KAAK;QACLG,MAAM;MACVA,MAAM,GAAG,IAAI,CAACoB,aAAa,CAACV,KAAK,EAAExJ,OAAO,CAAC;MAC3CA,OAAO,GAAG8I,MAAM,CAAC9I,OAAO;MACxBwJ,KAAK,GAAGV,MAAM,CAACU,KAAK,CAAC,CAAC;;MAEtB,MAAMuC,QAAQ,GAAG/L,OAAO,CAAC2I,KAAK,IAAInL,IAAI,CAAC2M,iBAAiB,CAACrB,MAAM,CAAC,CAAC,CAAC;;MAGlE,IAAIU,KAAK,CAAC9K,MAAM,EAAE;QAChBuK,SAAS,CAACzL,IAAI,CAAC6L,KAAK,EAAE,CAAC2C,IAAI,EAAEb,EAAE,KAAK;UAClCxC,KAAK,GAAGoD,QAAQ,CAACC,IAAI,CAAC;UAEtB,IAAIhM,OAAO,CAACQ,MAAM,KAAK,KAAK,IAAImI,KAAK,GAAG,CAAC,EAAE;YACzCG,MAAM,CAACO,KAAK,CAAC/K,IAAI,CAAC;cAChB,OAAO,EAAEqK,KAAK;cACd,IAAI,EAAEwC;YACR,CAAC,CAAC;UACJ;QACF,CAAC,CAAC;MACJ,CAAC,MAAM;QACLlC,SAAS,CAACzL,IAAI,CAAC6L,KAAK,EAAE,CAAC4C,CAAC,EAAEd,EAAE,KAAK;UAC/BrC,MAAM,CAACO,KAAK,CAAC/K,IAAI,CAAC;YAChB,OAAO,EAAE,CAAC;YACV,IAAI,EAAE6M;UACR,CAAC,CAAC;QACJ,CAAC,CAAC;MACJ;MAEA,MAAMe,OAAO,GAAG1O,IAAI,CAACqN,gBAAgB,CAAC/B,MAAM,CAAC;MAE7C,IAAIoD,OAAO,EAAEpD,MAAM,CAACO,KAAK,CAAChE,IAAI,CAAC6G,OAAO,CAAC,CAAC,CAAC;;MAEzCpD,MAAM,CAAC+C,KAAK,GAAG/C,MAAM,CAACO,KAAK,CAAC3K,MAAM;MAElC,IAAI,OAAOsB,OAAO,CAACmM,KAAK,KAAK,QAAQ,EAAE;QACrCrD,MAAM,CAACO,KAAK,GAAGP,MAAM,CAACO,KAAK,CAAC1G,KAAK,CAAC,CAAC,EAAE3C,OAAO,CAACmM,KAAK,CAAC;MACrD;MAEA,OAAOrD,MAAM;IACf;EAEF;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEC,MAAMsD,OAAO,GAAG,CAAClD,MAAM,EAAEtL,QAAQ,KAAK;IACpC,IAAIiC,KAAK,CAACC,OAAO,CAACoJ,MAAM,CAAC,EAAE;MACzBA,MAAM,CAACpL,OAAO,CAACF,QAAQ,CAAC;IAC1B,CAAC,MAAM;MACL,KAAK,IAAI+B,GAAG,IAAIuJ,MAAM,EAAE;QACtB,IAAIA,MAAM,CAACjJ,cAAc,CAACN,GAAG,CAAC,EAAE;UAC9B/B,QAAQ,CAACsL,MAAM,CAACvJ,GAAG,CAAC,EAAEA,GAAG,CAAC;QAC5B;MACF;IACF;EACF,CAAC;;EAED;AACD;AACA;AACA;AACA;AACA;;EAEC,MAAM0M,MAAM,GAAG7C,KAAK,IAAI;IACtB,IAAIA,KAAK,CAAC8C,MAAM,EAAE;MAChB,OAAO9C,KAAK,CAAC,CAAC,CAAC;IACjB;IAEA,IAAIA,KAAK,YAAY+C,WAAW,EAAE;MAChC,OAAO/C,KAAK;IACd;IAEA,IAAIgD,YAAY,CAAChD,KAAK,CAAC,EAAE;MACvB,IAAIiD,GAAG,GAAGC,QAAQ,CAACC,aAAa,CAAC,UAAU,CAAC;MAC5CF,GAAG,CAACG,SAAS,GAAGpD,KAAK,CAACoC,IAAI,EAAE,CAAC,CAAC;;MAE9B,OAAOa,GAAG,CAACI,OAAO,CAACC,UAAU;IAC/B;IAEA,OAAOJ,QAAQ,CAACK,aAAa,CAACvD,KAAK,CAAC;EACtC,CAAC;EACD,MAAMgD,YAAY,GAAGQ,GAAG,IAAI;IAC1B,IAAI,OAAOA,GAAG,KAAK,QAAQ,IAAIA,GAAG,CAACnO,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE;MACpD,OAAO,IAAI;IACb;IAEA,OAAO,KAAK;EACd,CAAC;EACD,MAAMoO,WAAW,GAAGzD,KAAK,IAAI;IAC3B,OAAOA,KAAK,CAAC9H,OAAO,CAAC,SAAS,EAAE,MAAM,CAAC;EACzC,CAAC;EACD;AACD;AACA;AACA;;EAEC,MAAMwL,YAAY,GAAG,CAACC,MAAM,EAAEC,UAAU,KAAK;IAC3C,IAAIrP,KAAK,GAAG2O,QAAQ,CAACW,WAAW,CAAC,YAAY,CAAC;IAC9CtP,KAAK,CAACuP,SAAS,CAACF,UAAU,EAAE,IAAI,EAAE,KAAK,CAAC;IACxCD,MAAM,CAACI,aAAa,CAACxP,KAAK,CAAC;EAC7B,CAAC;EACD;AACD;AACA;AACA;;EAEC,MAAMyP,QAAQ,GAAG,CAACL,MAAM,EAAEM,GAAG,KAAK;IAChChK,MAAM,CAACkI,MAAM,CAACwB,MAAM,CAACO,KAAK,EAAED,GAAG,CAAC;EAClC,CAAC;EACD;AACD;AACA;AACA;;EAEC,MAAME,UAAU,GAAG,CAACC,KAAK,EAAE,GAAGC,OAAO,KAAK;IACxC,IAAIC,YAAY,GAAGC,YAAY,CAACF,OAAO,CAAC;IACxCD,KAAK,GAAGI,WAAW,CAACJ,KAAK,CAAC;IAC1BA,KAAK,CAAC/H,GAAG,CAACoI,EAAE,IAAI;MACdH,YAAY,CAACjI,GAAG,CAACqI,GAAG,IAAI;QACtBD,EAAE,CAACE,SAAS,CAACjJ,GAAG,CAACgJ,GAAG,CAAC;MACvB,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC;EACD;AACD;AACA;AACA;;EAEC,MAAME,aAAa,GAAG,CAACR,KAAK,EAAE,GAAGC,OAAO,KAAK;IAC3C,IAAIC,YAAY,GAAGC,YAAY,CAACF,OAAO,CAAC;IACxCD,KAAK,GAAGI,WAAW,CAACJ,KAAK,CAAC;IAC1BA,KAAK,CAAC/H,GAAG,CAACoI,EAAE,IAAI;MACdH,YAAY,CAACjI,GAAG,CAACqI,GAAG,IAAI;QACtBD,EAAE,CAACE,SAAS,CAACE,MAAM,CAACH,GAAG,CAAC;MAC1B,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC;EACD;AACD;AACA;AACA;;EAEC,MAAMH,YAAY,GAAGhP,IAAI,IAAI;IAC3B,IAAI8O,OAAO,GAAG,EAAE;IAChBzB,OAAO,CAACrN,IAAI,EAAEuP,QAAQ,IAAI;MACxB,IAAI,OAAOA,QAAQ,KAAK,QAAQ,EAAE;QAChCA,QAAQ,GAAGA,QAAQ,CAAC1C,IAAI,EAAE,CAAC/N,KAAK,CAAC,mBAAmB,CAAC;MACvD;MAEA,IAAIgC,KAAK,CAACC,OAAO,CAACwO,QAAQ,CAAC,EAAE;QAC3BT,OAAO,GAAGA,OAAO,CAACU,MAAM,CAACD,QAAQ,CAAC;MACpC;IACF,CAAC,CAAC;IACF,OAAOT,OAAO,CAACrN,MAAM,CAACC,OAAO,CAAC;EAChC,CAAC;EACD;AACD;AACA;AACA;;EAEC,MAAMuN,WAAW,GAAGhB,GAAG,IAAI;IACzB,IAAI,CAACnN,KAAK,CAACC,OAAO,CAACkN,GAAG,CAAC,EAAE;MACvBA,GAAG,GAAG,CAACA,GAAG,CAAC;IACb;IAEA,OAAOA,GAAG;EACZ,CAAC;EACD;AACD;AACA;AACA;AACA;;EAEC,MAAMwB,WAAW,GAAG,CAACC,MAAM,EAAEC,QAAQ,EAAEC,OAAO,KAAK;IACjD,IAAIA,OAAO,IAAI,CAACA,OAAO,CAACC,QAAQ,CAACH,MAAM,CAAC,EAAE;MACxC;IACF;IAEA,OAAOA,MAAM,IAAIA,MAAM,CAACI,OAAO,EAAE;MAC/B,IAAIJ,MAAM,CAACI,OAAO,CAACH,QAAQ,CAAC,EAAE;QAC5B,OAAOD,MAAM;MACf;MAEAA,MAAM,GAAGA,MAAM,CAACK,UAAU;IAC5B;EACF,CAAC;EACD;AACD;AACA;AACA;AACA;AACA;AACA;;EAEC,MAAMC,OAAO,GAAG,CAACC,IAAI,EAAE1D,SAAS,GAAG,CAAC,KAAK;IACvC,IAAIA,SAAS,GAAG,CAAC,EAAE;MACjB,OAAO0D,IAAI,CAACA,IAAI,CAACtQ,MAAM,GAAG,CAAC,CAAC;IAC9B;IAEA,OAAOsQ,IAAI,CAAC,CAAC,CAAC;EAChB,CAAC;EACD;AACD;AACA;AACA;;EAEC,MAAMC,aAAa,GAAG3G,GAAG,IAAI;IAC3B,OAAO7E,MAAM,CAACC,IAAI,CAAC4E,GAAG,CAAC,CAAC5J,MAAM,KAAK,CAAC;EACtC,CAAC;EACD;AACD;AACA;AACA;;EAEC,MAAMwQ,SAAS,GAAG,CAACjB,EAAE,EAAEkB,OAAO,KAAK;IACjC,IAAI,CAAClB,EAAE,EAAE,OAAO,CAAC,CAAC;IAClBkB,OAAO,GAAGA,OAAO,IAAIlB,EAAE,CAACmB,QAAQ;IAChC,IAAIjO,CAAC,GAAG,CAAC;IAET,OAAO8M,EAAE,GAAGA,EAAE,CAACoB,sBAAsB,EAAE;MACrC,IAAIpB,EAAE,CAACY,OAAO,CAACM,OAAO,CAAC,EAAE;QACvBhO,CAAC,EAAE;MACL;IACF;IAEA,OAAOA,CAAC;EACV,CAAC;EACD;AACD;AACA;AACA;;EAEC,MAAMmO,OAAO,GAAG,CAACrB,EAAE,EAAEsB,KAAK,KAAK;IAC7BnD,OAAO,CAACmD,KAAK,EAAE,CAACC,GAAG,EAAEC,IAAI,KAAK;MAC5B,IAAID,GAAG,IAAI,IAAI,EAAE;QACfvB,EAAE,CAACyB,eAAe,CAACD,IAAI,CAAC;MAC1B,CAAC,MAAM;QACLxB,EAAE,CAAC0B,YAAY,CAACF,IAAI,EAAE,EAAE,GAAGD,GAAG,CAAC;MACjC;IACF,CAAC,CAAC;EACJ,CAAC;EACD;AACD;AACA;;EAEC,MAAMI,WAAW,GAAG,CAACC,QAAQ,EAAEC,WAAW,KAAK;IAC7C,IAAID,QAAQ,CAACf,UAAU,EAAEe,QAAQ,CAACf,UAAU,CAACiB,YAAY,CAACD,WAAW,EAAED,QAAQ,CAAC;EAClF,CAAC;;EAED;AACD;AACA;AACA;AACA;AACA;AACA;EACC,MAAMG,SAAS,GAAG,CAACC,OAAO,EAAEpH,KAAK,KAAK;IACpC,IAAIA,KAAK,KAAK,IAAI,EAAE,OAAO,CAAC;;IAE5B,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;MAC7B,IAAI,CAACA,KAAK,CAACnK,MAAM,EAAE;MACnBmK,KAAK,GAAG,IAAIrF,MAAM,CAACqF,KAAK,EAAE,GAAG,CAAC;IAChC,CAAC,CAAC;IACF;;IAGA,MAAMqH,aAAa,GAAGC,IAAI,IAAI;MAC5B,IAAIlL,KAAK,GAAGkL,IAAI,CAAC1F,IAAI,CAACxF,KAAK,CAAC4D,KAAK,CAAC;MAElC,IAAI5D,KAAK,IAAIkL,IAAI,CAAC1F,IAAI,CAAC/L,MAAM,GAAG,CAAC,EAAE;QACjC,IAAI0R,QAAQ,GAAG1D,QAAQ,CAACC,aAAa,CAAC,MAAM,CAAC;QAC7CyD,QAAQ,CAACC,SAAS,GAAG,WAAW;QAChC,IAAIC,SAAS,GAAGH,IAAI,CAACI,SAAS,CAACtL,KAAK,CAACuL,KAAK,CAAC;QAC3CF,SAAS,CAACC,SAAS,CAACtL,KAAK,CAAC,CAAC,CAAC,CAACvG,MAAM,CAAC;QACpC,IAAI+R,WAAW,GAAGH,SAAS,CAACI,SAAS,CAAC,IAAI,CAAC;QAC3CN,QAAQ,CAACO,WAAW,CAACF,WAAW,CAAC;QACjCb,WAAW,CAACU,SAAS,EAAEF,QAAQ,CAAC;QAChC,OAAO,CAAC;MACV;MAEA,OAAO,CAAC;IACV,CAAC,CAAC,CAAC;IACH;;IAGA,MAAMQ,iBAAiB,GAAGT,IAAI,IAAI;MAChC,IAAIA,IAAI,CAACU,QAAQ,KAAK,CAAC,IAAIV,IAAI,CAACW,UAAU,IAAI,CAAC,iBAAiB,CAACC,IAAI,CAACZ,IAAI,CAACa,OAAO,CAAC,KAAKb,IAAI,CAACE,SAAS,KAAK,WAAW,IAAIF,IAAI,CAACa,OAAO,KAAK,MAAM,CAAC,EAAE;QAClJnR,KAAK,CAACqC,IAAI,CAACiO,IAAI,CAACW,UAAU,CAAC,CAAChT,OAAO,CAACmS,OAAO,IAAI;UAC7CgB,kBAAkB,CAAChB,OAAO,CAAC;QAC7B,CAAC,CAAC;MACJ;IACF,CAAC;IAED,MAAMgB,kBAAkB,GAAGd,IAAI,IAAI;MACjC,IAAIA,IAAI,CAACU,QAAQ,KAAK,CAAC,EAAE;QACvB,OAAOX,aAAa,CAACC,IAAI,CAAC;MAC5B;MAEAS,iBAAiB,CAACT,IAAI,CAAC;MACvB,OAAO,CAAC;IACV,CAAC;IAEDc,kBAAkB,CAAChB,OAAO,CAAC;EAC7B,CAAC;EACD;AACD;AACA;AACA;;EAEC,MAAMiB,eAAe,GAAGjD,EAAE,IAAI;IAC5B,IAAIkD,QAAQ,GAAGlD,EAAE,CAACmD,gBAAgB,CAAC,gBAAgB,CAAC;IACpDvR,KAAK,CAACwR,SAAS,CAACvT,OAAO,CAACwT,IAAI,CAACH,QAAQ,EAAE,UAAUlD,EAAE,EAAE;MACnD,IAAIsD,MAAM,GAAGtD,EAAE,CAACa,UAAU;MAC1ByC,MAAM,CAACxB,YAAY,CAAC9B,EAAE,CAACnB,UAAU,EAAEmB,EAAE,CAAC;MACtCsD,MAAM,CAACzN,SAAS,EAAE;IACpB,CAAC,CAAC;EACJ,CAAC;EAED,MAAM0N,KAAK,GAAG,EAAE;EAChB,MAAMC,UAAU,GAAG,EAAE;EACrB,MAAMC,OAAO,GAAG,EAAE;EAClB,MAAMC,QAAQ,GAAG,EAAE;EACnB,MAAMC,MAAM,GAAG,EAAE;EACjB,MAAMC,SAAS,GAAG,EAAE;EACpB,MAAMC,QAAQ,GAAG,EAAE;EACnB,MAAMC,aAAa,GAAG,CAAC;EACvB,MAAMC,UAAU,GAAG,EAAE;EACrB,MAAMC,OAAO,GAAG,CAAC;EACjB,MAAMC,MAAM,GAAG,OAAOC,SAAS,KAAK,WAAW,GAAG,KAAK,GAAG,KAAK,CAACpB,IAAI,CAACoB,SAAS,CAACC,SAAS,CAAC;EACzF,MAAMC,YAAY,GAAGH,MAAM,GAAG,SAAS,GAAG,SAAS,CAAC,CAAC;;EAErD,IAAII,QAAQ,GAAG;IACbtS,OAAO,EAAE,EAAE;IACXuS,SAAS,EAAE,EAAE;IACbpT,OAAO,EAAE,EAAE;IACXqT,SAAS,EAAE,GAAG;IACdC,OAAO,EAAE,IAAI;IACb;IACAC,OAAO,EAAE,IAAI;IACbpJ,UAAU,EAAE,IAAI;IAChBqJ,MAAM,EAAE,IAAI;IACZC,YAAY,EAAE,KAAK;IACnBC,YAAY,EAAE,IAAI;IAClB7C,SAAS,EAAE,IAAI;IACf8C,WAAW,EAAE,IAAI;IACjBC,UAAU,EAAE,IAAI;IAChBC,UAAU,EAAE,EAAE;IACdC,QAAQ,EAAE,IAAI;IACdC,YAAY,EAAE,IAAI;IAClBC,UAAU,EAAE,KAAK;IACjBC,aAAa,EAAE,KAAK;IACpBC,WAAW,EAAE,KAAK;IAClBC,OAAO,EAAE,IAAI;IACbC,gBAAgB,EAAE,KAAK;IACvB;IACAC,YAAY,EAAE,GAAG;IACjBC,YAAY,EAAE,SAAS;IACvBC,QAAQ,EAAE,IAAI;IACd;IACAC,aAAa,EAAE,UAAU;IACzBC,UAAU,EAAE,OAAO;IACnBC,UAAU,EAAE,MAAM;IAClBC,aAAa,EAAE,UAAU;IACzBC,kBAAkB,EAAE,OAAO;IAC3BC,kBAAkB,EAAE,OAAO;IAC3BC,iBAAiB,EAAE,KAAK;IACxBC,SAAS,EAAE,QAAQ;IACnBC,WAAW,EAAE,CAAC,MAAM,CAAC;IACrBC,iBAAiB,EAAE,KAAK;IACxBC,IAAI,EAAE,IAAI;IACVC,YAAY,EAAE,YAAY;IAC1BC,YAAY,EAAE,YAAY;IAC1BC,aAAa,EAAE,aAAa;IAC5BC,oBAAoB,EAAE,qBAAqB;IAC3CC,SAAS,EAAE,MAAM;IACjBC,WAAW,EAAE,QAAQ;IACrBC,cAAc,EAAE,IAAI;IACpBC,YAAY,EAAE,mDAAmD;IACjEC,qBAAqB,EAAE,KAAK;IAC5BC,WAAW,EAAE,IAAI;IACjBC,eAAe,EAAE,IAAI;IACrBC,UAAU,EAAE,UAAUzL,KAAK,EAAE;MAC3B,OAAOA,KAAK,CAAC9K,MAAM,GAAG,CAAC;IACzB,CAAC;IAED;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACGwW,MAAM,EAAE;MACN;AACL;AACA;AACA;AACA;AACA;AACA;IANK;EAQJ,CAAC;;EAED;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,MAAMC,QAAQ,GAAGtT,KAAK,IAAI;IACxB,IAAI,OAAOA,KAAK,KAAK,WAAW,IAAIA,KAAK,KAAK,IAAI,EAAE,OAAO,IAAI;IAC/D,OAAOuT,QAAQ,CAACvT,KAAK,CAAC;EACxB,CAAC;EACD,MAAMuT,QAAQ,GAAGvT,KAAK,IAAI;IACxB,IAAI,OAAOA,KAAK,KAAK,SAAS,EAAE,OAAOA,KAAK,GAAG,GAAG,GAAG,GAAG;IACxD,OAAOA,KAAK,GAAG,EAAE;EACnB,CAAC;EACD;AACD;AACA;AACA;;EAEC,MAAMwT,WAAW,GAAG5T,GAAG,IAAI;IACzB,OAAO,CAACA,GAAG,GAAG,EAAE,EAAEC,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC,CAACA,OAAO,CAAC,IAAI,EAAE,MAAM,CAAC,CAACA,OAAO,CAAC,IAAI,EAAE,MAAM,CAAC,CAACA,OAAO,CAAC,IAAI,EAAE,QAAQ,CAAC;EAC9G,CAAC;EACD;AACD;AACA;AACA;;EAEC,MAAM4T,YAAY,GAAG,CAAC7V,EAAE,EAAE8V,KAAK,KAAK;IAClC,IAAIC,OAAO;IACX,OAAO,UAAU3T,KAAK,EAAEjE,QAAQ,EAAE;MAChC,IAAIJ,IAAI,GAAG,IAAI;MAEf,IAAIgY,OAAO,EAAE;QACXhY,IAAI,CAACiY,OAAO,GAAG3T,IAAI,CAACC,GAAG,CAACvE,IAAI,CAACiY,OAAO,GAAG,CAAC,EAAE,CAAC,CAAC;QAC5CC,YAAY,CAACF,OAAO,CAAC;MACvB;MAEAA,OAAO,GAAGG,UAAU,CAAC,YAAY;QAC/BH,OAAO,GAAG,IAAI;QACdhY,IAAI,CAACoY,cAAc,CAAC/T,KAAK,CAAC,GAAG,IAAI;QACjCpC,EAAE,CAAC6R,IAAI,CAAC9T,IAAI,EAAEqE,KAAK,EAAEjE,QAAQ,CAAC;MAChC,CAAC,EAAE2X,KAAK,CAAC;IACX,CAAC;EACH,CAAC;EACD;AACD;AACA;AACA;AACA;;EAEC,MAAMM,eAAe,GAAG,CAACrY,IAAI,EAAEsY,KAAK,EAAErW,EAAE,KAAK;IAC3C,IAAIsW,IAAI;IACR,IAAIjX,OAAO,GAAGtB,IAAI,CAACsB,OAAO;IAC1B,IAAIkX,UAAU,GAAG,CAAC,CAAC,CAAC,CAAC;;IAErBxY,IAAI,CAACsB,OAAO,GAAG,YAAY;MACzB,IAAIiX,IAAI,GAAGtX,SAAS,CAAC,CAAC,CAAC;MAEvB,IAAIqX,KAAK,CAACjX,OAAO,CAACkX,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;QAC9BC,UAAU,CAACD,IAAI,CAAC,GAAGtX,SAAS;MAC9B,CAAC,MAAM;QACL,OAAOK,OAAO,CAACE,KAAK,CAACxB,IAAI,EAAEiB,SAAS,CAAC;MACvC;IACF,CAAC,CAAC,CAAC;;IAGHgB,EAAE,CAACT,KAAK,CAACxB,IAAI,EAAE,EAAE,CAAC;IAClBA,IAAI,CAACsB,OAAO,GAAGA,OAAO,CAAC,CAAC;;IAExB,KAAKiX,IAAI,IAAID,KAAK,EAAE;MAClB,IAAIC,IAAI,IAAIC,UAAU,EAAE;QACtBlX,OAAO,CAACE,KAAK,CAACxB,IAAI,EAAEwY,UAAU,CAACD,IAAI,CAAC,CAAC;MACvC;IACF;EACF,CAAC;EACD;AACD;AACA;AACA;AACA;AACA;AACA;;EAEC,MAAME,YAAY,GAAG7T,KAAK,IAAI;IAC5B,OAAO;MACLE,KAAK,EAAEF,KAAK,CAAC8T,cAAc,IAAI,CAAC;MAChCxX,MAAM,EAAE,CAAC0D,KAAK,CAAC+T,YAAY,IAAI,CAAC,KAAK/T,KAAK,CAAC8T,cAAc,IAAI,CAAC;IAChE,CAAC;EACH,CAAC;EACD;AACD;AACA;AACA;;EAEC,MAAME,cAAc,GAAG,CAACC,GAAG,EAAEC,IAAI,GAAG,KAAK,KAAK;IAC5C,IAAID,GAAG,EAAE;MACPA,GAAG,CAACD,cAAc,EAAE;MAEpB,IAAIE,IAAI,EAAE;QACRD,GAAG,CAACE,eAAe,EAAE;MACvB;IACF;EACF,CAAC;EACD;AACD;AACA;AACA;;EAEC,MAAMC,QAAQ,GAAG,CAAC/H,MAAM,EAAEsH,IAAI,EAAEnY,QAAQ,EAAEoC,OAAO,KAAK;IACpDyO,MAAM,CAACgI,gBAAgB,CAACV,IAAI,EAAEnY,QAAQ,EAAEoC,OAAO,CAAC;EAClD,CAAC;EACD;AACD;AACA;AACA;AACA;AACA;;EAEC,MAAM0W,SAAS,GAAG,CAACC,QAAQ,EAAEN,GAAG,KAAK;IACnC,IAAI,CAACA,GAAG,EAAE;MACR,OAAO,KAAK;IACd;IAEA,IAAI,CAACA,GAAG,CAACM,QAAQ,CAAC,EAAE;MAClB,OAAO,KAAK;IACd;IAEA,IAAIC,KAAK,GAAG,CAACP,GAAG,CAACQ,MAAM,GAAG,CAAC,GAAG,CAAC,KAAKR,GAAG,CAACS,OAAO,GAAG,CAAC,GAAG,CAAC,CAAC,IAAIT,GAAG,CAACU,QAAQ,GAAG,CAAC,GAAG,CAAC,CAAC,IAAIV,GAAG,CAACW,OAAO,GAAG,CAAC,GAAG,CAAC,CAAC;IAEzG,IAAIJ,KAAK,KAAK,CAAC,EAAE;MACf,OAAO,IAAI;IACb;IAEA,OAAO,KAAK;EACd,CAAC;EACD;AACD;AACA;AACA;AACA;;EAEC,MAAMK,KAAK,GAAG,CAAChJ,EAAE,EAAE9C,EAAE,KAAK;IACxB,MAAM+L,WAAW,GAAGjJ,EAAE,CAACkJ,YAAY,CAAC,IAAI,CAAC;IAEzC,IAAID,WAAW,EAAE;MACf,OAAOA,WAAW;IACpB;IAEAjJ,EAAE,CAAC0B,YAAY,CAAC,IAAI,EAAExE,EAAE,CAAC;IACzB,OAAOA,EAAE;EACX,CAAC;EACD;AACD;AACA;;EAEC,MAAMiM,UAAU,GAAG3V,GAAG,IAAI;IACxB,OAAOA,GAAG,CAACC,OAAO,CAAC,SAAS,EAAE,MAAM,CAAC;EACvC,CAAC;EACD;AACD;AACA;;EAEC,MAAM2V,MAAM,GAAG,CAAC9F,MAAM,EAAEpB,IAAI,KAAK;IAC/B,IAAIA,IAAI,EAAEoB,MAAM,CAAC8F,MAAM,CAAClH,IAAI,CAAC;EAC/B,CAAC;EAED,SAASmH,WAAW,CAAClV,KAAK,EAAEmV,aAAa,EAAE;IACzC,IAAIlY,QAAQ,GAAGoE,MAAM,CAACkI,MAAM,CAAC,CAAC,CAAC,EAAE2G,QAAQ,EAAEiF,aAAa,CAAC;IACzD,IAAIC,SAAS,GAAGnY,QAAQ,CAACqU,QAAQ;IACjC,IAAI+D,WAAW,GAAGpY,QAAQ,CAACwU,UAAU;IACrC,IAAI6D,WAAW,GAAGrY,QAAQ,CAACuU,UAAU;IACrC,IAAI+D,cAAc,GAAGtY,QAAQ,CAACyU,aAAa;IAC3C,IAAI8D,cAAc,GAAGvY,QAAQ,CAACsU,aAAa;IAC3C,IAAIkE,oBAAoB,GAAGxY,QAAQ,CAAC0U,kBAAkB;IACtD,IAAI+D,oBAAoB,GAAGzY,QAAQ,CAAC2U,kBAAkB;IACtD,IAAI+D,QAAQ,GAAG3V,KAAK,CAAC4O,OAAO,CAAC9M,WAAW,EAAE;IAC1C,IAAI6Q,WAAW,GAAG3S,KAAK,CAAC+U,YAAY,CAAC,aAAa,CAAC,IAAI/U,KAAK,CAAC+U,YAAY,CAAC,kBAAkB,CAAC;IAE7F,IAAI,CAACpC,WAAW,IAAI,CAAC1V,QAAQ,CAACkU,gBAAgB,EAAE;MAC9C,IAAIyE,MAAM,GAAG5V,KAAK,CAAC2K,aAAa,CAAC,kBAAkB,CAAC;MAEpD,IAAIiL,MAAM,EAAE;QACVjD,WAAW,GAAGiD,MAAM,CAACC,WAAW;MAClC;IACF;IAEA,IAAIC,gBAAgB,GAAG;MACrBnD,WAAW,EAAEA,WAAW;MACxB/U,OAAO,EAAE,EAAE;MACXuS,SAAS,EAAE,EAAE;MACblJ,KAAK,EAAE,EAAE;MACT4J,QAAQ,EAAE;IACZ,CAAC;IACD;AACH;AACA;AACA;;IAEG,IAAIkF,WAAW,GAAG,MAAM;MACtB,IAAInH,OAAO;MACX,IAAIhR,OAAO,GAAGkY,gBAAgB,CAAClY,OAAO;MACtC,IAAIoY,UAAU,GAAG,CAAC,CAAC;MACnB,IAAIC,WAAW,GAAG,CAAC;MAEnB,IAAIC,QAAQ,GAAGrK,EAAE,IAAI;QACnB,IAAIxD,IAAI,GAAGhH,MAAM,CAACkI,MAAM,CAAC,CAAC,CAAC,EAAEsC,EAAE,CAACsK,OAAO,CAAC,CAAC,CAAC;;QAE1C,IAAIC,IAAI,GAAGhB,SAAS,IAAI/M,IAAI,CAAC+M,SAAS,CAAC;QAEvC,IAAI,OAAOgB,IAAI,KAAK,QAAQ,IAAIA,IAAI,CAAC9Z,MAAM,EAAE;UAC3C+L,IAAI,GAAGhH,MAAM,CAACkI,MAAM,CAAClB,IAAI,EAAElD,IAAI,CAACC,KAAK,CAACgR,IAAI,CAAC,CAAC;QAC9C;QAEA,OAAO/N,IAAI;MACb,CAAC;MAED,IAAIgO,SAAS,GAAG,CAACT,MAAM,EAAEU,KAAK,KAAK;QACjC,IAAI7W,KAAK,GAAGsT,QAAQ,CAAC6C,MAAM,CAACnW,KAAK,CAAC;QAClC,IAAIA,KAAK,IAAI,IAAI,EAAE;QACnB,IAAI,CAACA,KAAK,IAAI,CAACxC,QAAQ,CAACkU,gBAAgB,EAAE,OAAO,CAAC;QAClD;QACA;QACA;;QAEA,IAAI6E,UAAU,CAACnY,cAAc,CAAC4B,KAAK,CAAC,EAAE;UACpC,IAAI6W,KAAK,EAAE;YACT,IAAIC,GAAG,GAAGP,UAAU,CAACvW,KAAK,CAAC,CAAC+V,cAAc,CAAC;YAE3C,IAAI,CAACe,GAAG,EAAE;cACRP,UAAU,CAACvW,KAAK,CAAC,CAAC+V,cAAc,CAAC,GAAGc,KAAK;YAC3C,CAAC,MAAM,IAAI,CAAC7Y,KAAK,CAACC,OAAO,CAAC6Y,GAAG,CAAC,EAAE;cAC9BP,UAAU,CAACvW,KAAK,CAAC,CAAC+V,cAAc,CAAC,GAAG,CAACe,GAAG,EAAED,KAAK,CAAC;YAClD,CAAC,MAAM;cACLC,GAAG,CAACra,IAAI,CAACoa,KAAK,CAAC;YACjB;UACF;QACF,CAAC,MAAM;UACL,IAAIE,WAAW,GAAGN,QAAQ,CAACN,MAAM,CAAC;UAClCY,WAAW,CAACnB,WAAW,CAAC,GAAGmB,WAAW,CAACnB,WAAW,CAAC,IAAIO,MAAM,CAACC,WAAW;UACzEW,WAAW,CAAClB,WAAW,CAAC,GAAGkB,WAAW,CAAClB,WAAW,CAAC,IAAI7V,KAAK;UAC5D+W,WAAW,CAACjB,cAAc,CAAC,GAAGiB,WAAW,CAACjB,cAAc,CAAC,IAAIK,MAAM,CAACa,QAAQ;UAC5ED,WAAW,CAAChB,cAAc,CAAC,GAAGgB,WAAW,CAAChB,cAAc,CAAC,IAAIc,KAAK;UAClEE,WAAW,CAACE,OAAO,GAAGd,MAAM;UAC5BI,UAAU,CAACvW,KAAK,CAAC,GAAG+W,WAAW;UAC/B5Y,OAAO,CAAC1B,IAAI,CAACsa,WAAW,CAAC;QAC3B;QAEA,IAAIZ,MAAM,CAACe,QAAQ,EAAE;UACnBb,gBAAgB,CAAC7O,KAAK,CAAC/K,IAAI,CAACuD,KAAK,CAAC;QACpC;MACF,CAAC;MAED,IAAImX,QAAQ,GAAGC,QAAQ,IAAI;QACzB,IAAI9N,EAAE,EAAE+N,aAAa;QACrBA,aAAa,GAAGZ,QAAQ,CAACW,QAAQ,CAAC;QAClCC,aAAa,CAACrB,oBAAoB,CAAC,GAAGqB,aAAa,CAACrB,oBAAoB,CAAC,IAAIoB,QAAQ,CAAC9B,YAAY,CAAC,OAAO,CAAC,IAAI,EAAE;QACjH+B,aAAa,CAACpB,oBAAoB,CAAC,GAAGoB,aAAa,CAACpB,oBAAoB,CAAC,IAAIO,WAAW,EAAE;QAC1Fa,aAAa,CAACvB,cAAc,CAAC,GAAGuB,aAAa,CAACvB,cAAc,CAAC,IAAIsB,QAAQ,CAACJ,QAAQ;QAClFX,gBAAgB,CAAC3F,SAAS,CAACjU,IAAI,CAAC4a,aAAa,CAAC;QAC9C/N,EAAE,GAAG+N,aAAa,CAACpB,oBAAoB,CAAC;QACxC1L,OAAO,CAAC6M,QAAQ,CAACE,QAAQ,EAAEnB,MAAM,IAAI;UACnCS,SAAS,CAACT,MAAM,EAAE7M,EAAE,CAAC;QACvB,CAAC,CAAC;MACJ,CAAC;MAED+M,gBAAgB,CAACjF,QAAQ,GAAG7Q,KAAK,CAACgX,YAAY,CAAC,UAAU,CAAC,GAAG,IAAI,GAAG,CAAC;MACrEhN,OAAO,CAAChK,KAAK,CAAC+W,QAAQ,EAAEE,KAAK,IAAI;QAC/BrI,OAAO,GAAGqI,KAAK,CAACrI,OAAO,CAAC9M,WAAW,EAAE;QAErC,IAAI8M,OAAO,KAAK,UAAU,EAAE;UAC1BgI,QAAQ,CAACK,KAAK,CAAC;QACjB,CAAC,MAAM,IAAIrI,OAAO,KAAK,QAAQ,EAAE;UAC/ByH,SAAS,CAACY,KAAK,CAAC;QAClB;MACF,CAAC,CAAC;IACJ,CAAC;IACD;AACH;AACA;AACA;;IAGG,IAAIC,YAAY,GAAG,MAAM;MACvB,MAAMC,QAAQ,GAAGnX,KAAK,CAAC+U,YAAY,CAACK,SAAS,CAAC;MAE9C,IAAI,CAAC+B,QAAQ,EAAE;QACb,IAAI1X,KAAK,GAAGO,KAAK,CAACP,KAAK,CAAC+J,IAAI,EAAE,IAAI,EAAE;QACpC,IAAI,CAACvM,QAAQ,CAACkU,gBAAgB,IAAI,CAAC1R,KAAK,CAACnD,MAAM,EAAE;QACjD,MAAM8a,MAAM,GAAG3X,KAAK,CAAChE,KAAK,CAACwB,QAAQ,CAACmT,SAAS,CAAC;QAC9CpG,OAAO,CAACoN,MAAM,EAAE3X,KAAK,IAAI;UACvB,MAAMmW,MAAM,GAAG,CAAC,CAAC;UACjBA,MAAM,CAACP,WAAW,CAAC,GAAG5V,KAAK;UAC3BmW,MAAM,CAACN,WAAW,CAAC,GAAG7V,KAAK;UAC3BqW,gBAAgB,CAAClY,OAAO,CAAC1B,IAAI,CAAC0Z,MAAM,CAAC;QACvC,CAAC,CAAC;QACFE,gBAAgB,CAAC7O,KAAK,GAAGmQ,MAAM;MACjC,CAAC,MAAM;QACLtB,gBAAgB,CAAClY,OAAO,GAAGuH,IAAI,CAACC,KAAK,CAAC+R,QAAQ,CAAC;QAC/CnN,OAAO,CAAC8L,gBAAgB,CAAClY,OAAO,EAAEyZ,GAAG,IAAI;UACvCvB,gBAAgB,CAAC7O,KAAK,CAAC/K,IAAI,CAACmb,GAAG,CAAC/B,WAAW,CAAC,CAAC;QAC/C,CAAC,CAAC;MACJ;IACF,CAAC;IAED,IAAIK,QAAQ,KAAK,QAAQ,EAAE;MACzBI,WAAW,EAAE;IACf,CAAC,MAAM;MACLmB,YAAY,EAAE;IAChB;IAEA,OAAO7V,MAAM,CAACkI,MAAM,CAAC,CAAC,CAAC,EAAE2G,QAAQ,EAAE4F,gBAAgB,EAAEX,aAAa,CAAC;EACrE;EAEA,IAAImC,UAAU,GAAG,CAAC;EAClB,MAAMjc,SAAS,SAASwB,WAAW,CAACjB,UAAU,CAAC,CAAC;IAC9C;IACAC,WAAW,CAAC0b,SAAS,EAAEC,aAAa,EAAE;MACpC,KAAK,EAAE;MACP,IAAI,CAACC,aAAa,GAAG,KAAK,CAAC;MAC3B,IAAI,CAAClL,OAAO,GAAG,KAAK,CAAC;MACrB,IAAI,CAACmL,QAAQ,GAAG,KAAK,CAAC;MACtB,IAAI,CAACC,OAAO,GAAG,KAAK,CAAC;MACrB,IAAI,CAACC,gBAAgB,GAAG,KAAK,CAAC;MAC9B,IAAI,CAACC,UAAU,GAAG,KAAK,CAAC;MACxB,IAAI,CAACC,KAAK,GAAG,CAAC;MACd,IAAI,CAAC7a,QAAQ,GAAG,KAAK,CAAC;MACtB,IAAI,CAAC+C,KAAK,GAAG,KAAK,CAAC;MACnB,IAAI,CAAC+X,QAAQ,GAAG,KAAK,CAAC;MACtB,IAAI,CAACC,aAAa,GAAG,KAAK,CAAC;MAC3B,IAAI,CAACC,GAAG,GAAG,KAAK,CAAC;MACjB,IAAI,CAACC,OAAO,GAAG,KAAK,CAAC;MACrB,IAAI,CAACC,QAAQ,GAAG,KAAK,CAAC;MACtB,IAAI,CAACC,MAAM,GAAG,KAAK,CAAC;MACpB,IAAI,CAACC,MAAM,GAAG,KAAK;MACnB,IAAI,CAACC,UAAU,GAAG,KAAK;MACvB,IAAI,CAACC,UAAU,GAAG,KAAK,CAAC;MACxB,IAAI,CAACC,SAAS,GAAG,KAAK;MACtB,IAAI,CAACC,OAAO,GAAG,IAAI;MACnB,IAAI,CAACC,QAAQ,GAAG,KAAK;MACrB,IAAI,CAACC,SAAS,GAAG,KAAK;MACtB,IAAI,CAACC,aAAa,GAAG,KAAK;MAC1B,IAAI,CAACC,OAAO,GAAG,KAAK;MACpB,IAAI,CAACC,WAAW,GAAG,KAAK;MACxB,IAAI,CAACC,WAAW,GAAG,KAAK;MACxB,IAAI,CAACC,UAAU,GAAG,KAAK;MACvB,IAAI,CAACC,cAAc,GAAG,KAAK,CAAC;MAC5B,IAAI,CAACC,SAAS,GAAG,EAAE;MACnB,IAAI,CAACC,QAAQ,GAAG,CAAC;MACjB,IAAI,CAAC9F,OAAO,GAAG,CAAC;MAChB,IAAI,CAACG,cAAc,GAAG,CAAC,CAAC;MACxB,IAAI,CAAC4F,YAAY,GAAG,IAAI;MACxB,IAAI,CAACC,WAAW,GAAG,EAAE;MACrB,IAAI,CAAClJ,SAAS,GAAG,CAAC,CAAC;MACnB,IAAI,CAACvS,OAAO,GAAG,CAAC,CAAC;MACjB,IAAI,CAAC0b,WAAW,GAAG,CAAC,CAAC;MACrB,IAAI,CAACrS,KAAK,GAAG,EAAE;MACfqQ,UAAU,EAAE;MACZ,IAAIiC,GAAG;MACP,IAAIvZ,KAAK,GAAGiK,MAAM,CAACsN,SAAS,CAAC;MAE7B,IAAIvX,KAAK,CAACwZ,SAAS,EAAE;QACnB,MAAM,IAAIvb,KAAK,CAAC,gDAAgD,CAAC;MACnE;MAEA+B,KAAK,CAACwZ,SAAS,GAAG,IAAI,CAAC,CAAC;;MAExB,IAAIC,aAAa,GAAGC,MAAM,CAACC,gBAAgB,IAAID,MAAM,CAACC,gBAAgB,CAAC3Z,KAAK,EAAE,IAAI,CAAC;MACnFuZ,GAAG,GAAGE,aAAa,CAACG,gBAAgB,CAAC,WAAW,CAAC,CAAC,CAAC;;MAEnD,MAAM3c,QAAQ,GAAGiY,WAAW,CAAClV,KAAK,EAAEwX,aAAa,CAAC;MAClD,IAAI,CAACva,QAAQ,GAAGA,QAAQ;MACxB,IAAI,CAAC+C,KAAK,GAAGA,KAAK;MAClB,IAAI,CAAC+X,QAAQ,GAAG/X,KAAK,CAAC+X,QAAQ,IAAI,CAAC;MACnC,IAAI,CAACC,aAAa,GAAGhY,KAAK,CAAC4O,OAAO,CAAC9M,WAAW,EAAE,KAAK,QAAQ;MAC7D,IAAI,CAACmW,GAAG,GAAG,MAAM,CAACtJ,IAAI,CAAC4K,GAAG,CAAC;MAC3B,IAAI,CAACrB,OAAO,GAAGrD,KAAK,CAAC7U,KAAK,EAAE,YAAY,GAAGsX,UAAU,CAAC;MACtD,IAAI,CAACiB,UAAU,GAAGvY,KAAK,CAAC6Z,QAAQ,CAAC,CAAC;;MAElC,IAAI,CAACzB,MAAM,GAAG,IAAIpR,MAAM,CAAC,IAAI,CAACpJ,OAAO,EAAE;QACrCsJ,UAAU,EAAEjK,QAAQ,CAACiK;MACvB,CAAC,CAAC,CAAC,CAAC;;MAEJjK,QAAQ,CAACgV,IAAI,GAAGhV,QAAQ,CAACgV,IAAI,KAAKhV,QAAQ,CAAC4T,QAAQ,KAAK,CAAC,GAAG,QAAQ,GAAG,OAAO,CAAC;MAE/E,IAAI,OAAO5T,QAAQ,CAAC6T,YAAY,KAAK,SAAS,EAAE;QAC9C7T,QAAQ,CAAC6T,YAAY,GAAG7T,QAAQ,CAACgV,IAAI,KAAK,OAAO;MACnD;MAEA,IAAI,OAAOhV,QAAQ,CAAC2V,eAAe,KAAK,SAAS,EAAE;QACjD3V,QAAQ,CAAC2V,eAAe,GAAG3V,QAAQ,CAACgV,IAAI,KAAK,OAAO;MACtD,CAAC,CAAC;;MAGF,IAAI7T,MAAM,GAAGnB,QAAQ,CAACwT,YAAY;MAElC,IAAI,OAAOrS,MAAM,KAAK,UAAU,EAAE;QAChC,IAAI,OAAOA,MAAM,KAAK,QAAQ,EAAE;UAC9BA,MAAM,GAAG,IAAIgD,MAAM,CAAChD,MAAM,CAAC;QAC7B;QAEA,IAAIA,MAAM,YAAYgD,MAAM,EAAE;UAC5BnE,QAAQ,CAACwT,YAAY,GAAGzQ,KAAK,IAAI5B,MAAM,CAACuQ,IAAI,CAAC3O,KAAK,CAAC;QACrD,CAAC,MAAM;UACL/C,QAAQ,CAACwT,YAAY,GAAGhR,KAAK,IAAI;YAC/B,OAAO,IAAI,CAACxC,QAAQ,CAAC8T,UAAU,IAAI,CAAC,IAAI,CAACnT,OAAO,CAAC6B,KAAK,CAAC;UACzD,CAAC;QACH;MACF;MAEA,IAAI,CAACnC,iBAAiB,CAACL,QAAQ,CAACF,OAAO,CAAC;MACxC,IAAI,CAAC+c,cAAc,EAAE;MACrB,IAAI,CAACC,cAAc,EAAE,CAAC,CAAC;;MAEvB,MAAMxN,OAAO,GAAGtC,MAAM,CAAC,OAAO,CAAC;MAC/B,MAAM0N,OAAO,GAAG1N,MAAM,CAAC,OAAO,CAAC;MAE/B,MAAMyN,QAAQ,GAAG,IAAI,CAACsC,OAAO,CAAC,UAAU,CAAC;MAEzC,MAAMpC,gBAAgB,GAAG3N,MAAM,CAAE,oCAAmC,CAAC;MACrE,MAAMwB,OAAO,GAAG,IAAI,CAACzL,KAAK,CAAC+U,YAAY,CAAC,OAAO,CAAC,IAAI,EAAE;MACtD,MAAMkF,SAAS,GAAGhd,QAAQ,CAACgV,IAAI;MAC/B,IAAIwF,aAAa;MACjBlM,UAAU,CAACgB,OAAO,EAAEtP,QAAQ,CAACiV,YAAY,EAAEzG,OAAO,EAAEwO,SAAS,CAAC;MAC9D1O,UAAU,CAACoM,OAAO,EAAE1a,QAAQ,CAACkV,YAAY,CAAC;MAC1C8C,MAAM,CAAC1I,OAAO,EAAEoL,OAAO,CAAC;MACxBpM,UAAU,CAACmM,QAAQ,EAAEza,QAAQ,CAACmV,aAAa,EAAE6H,SAAS,CAAC;MAEvD,IAAIhd,QAAQ,CAACyV,qBAAqB,EAAE;QAClCnH,UAAU,CAACmM,QAAQ,EAAEjM,OAAO,CAAC;MAC/B;MAEAF,UAAU,CAACqM,gBAAgB,EAAE3a,QAAQ,CAACoV,oBAAoB,CAAC;MAC3D4C,MAAM,CAACyC,QAAQ,EAAEE,gBAAgB,CAAC;MAClC3N,MAAM,CAAChN,QAAQ,CAACuV,cAAc,IAAIjG,OAAO,CAAC,CAACgC,WAAW,CAACmJ,QAAQ,CAAC,CAAC,CAAC;;MAElE,IAAItN,YAAY,CAACnN,QAAQ,CAACwV,YAAY,CAAC,EAAE;QACvCgF,aAAa,GAAGxN,MAAM,CAAChN,QAAQ,CAACwV,YAAY,CAAC,CAAC,CAAC;;QAE/C,IAAItF,KAAK,GAAG,CAAC,aAAa,EAAE,gBAAgB,EAAE,cAAc,CAAC;QAC7DtG,SAAS,CAACsG,KAAK,EAAEE,IAAI,IAAI;UACvB,IAAIrN,KAAK,CAAC+U,YAAY,CAAC1H,IAAI,CAAC,EAAE;YAC5BH,OAAO,CAACuK,aAAa,EAAE;cACrB,CAACpK,IAAI,GAAGrN,KAAK,CAAC+U,YAAY,CAAC1H,IAAI;YACjC,CAAC,CAAC;UACJ;QACF,CAAC,CAAC;QACFoK,aAAa,CAACM,QAAQ,GAAG,CAAC,CAAC;QAC3BJ,OAAO,CAACpJ,WAAW,CAACkJ,aAAa,CAAC;QAClC,IAAI,CAACI,UAAU,GAAGJ,aAAa,CAAC,CAAC;MACnC,CAAC,MAAM,IAAIxa,QAAQ,CAACwV,YAAY,EAAE;QAChCgF,aAAa,GAAGxN,MAAM,CAAChN,QAAQ,CAACwV,YAAY,CAAC;QAC7C,IAAI,CAACoF,UAAU,GAAGJ,aAAa;MACjC,CAAC,MAAM;QACLA,aAAa,GAAGxN,MAAM,CAAC,UAAU,CAAC;QAClC,IAAI,CAAC4N,UAAU,GAAGF,OAAO;MAC3B;MAEA,IAAI,CAACpL,OAAO,GAAGA,OAAO;MACtB,IAAI,CAACmL,QAAQ,GAAGA,QAAQ;MACxB,IAAI,CAACE,gBAAgB,GAAGA,gBAAgB;MACxC,IAAI,CAACD,OAAO,GAAGA,OAAO;MACtB,IAAI,CAACF,aAAa,GAAGA,aAAa;MAClC,IAAI,CAACyC,KAAK,EAAE;IACd;IACA;AACH;AACA;AACA;;IAGGA,KAAK,GAAG;MACN,MAAM9e,IAAI,GAAG,IAAI;MACjB,MAAM6B,QAAQ,GAAG7B,IAAI,CAAC6B,QAAQ;MAC9B,MAAMwa,aAAa,GAAGrc,IAAI,CAACqc,aAAa;MACxC,MAAMC,QAAQ,GAAGtc,IAAI,CAACsc,QAAQ;MAC9B,MAAME,gBAAgB,GAAGxc,IAAI,CAACwc,gBAAgB;MAC9C,MAAMrL,OAAO,GAAGnR,IAAI,CAACmR,OAAO;MAC5B,MAAMoL,OAAO,GAAGvc,IAAI,CAACuc,OAAO;MAC5B,MAAM3X,KAAK,GAAG5E,IAAI,CAAC4E,KAAK;MACxB,MAAM6X,UAAU,GAAGzc,IAAI,CAACyc,UAAU;MAClC,MAAMsC,aAAa,GAAG;QACpBC,OAAO,EAAE;MACX,CAAC;MACD,MAAMC,SAAS,GAAGjf,IAAI,CAAC8c,OAAO,GAAG,cAAc;MAC/ChL,OAAO,CAAC0K,gBAAgB,EAAE;QACxB7O,EAAE,EAAEsR;MACN,CAAC,CAAC;MACFnN,OAAO,CAAC2K,UAAU,EAAE;QAClByC,IAAI,EAAE,UAAU;QAChB,eAAe,EAAE,SAAS;QAC1B,eAAe,EAAE,OAAO;QACxB,eAAe,EAAED;MACnB,CAAC,CAAC;MACF,MAAME,UAAU,GAAG1F,KAAK,CAACgD,UAAU,EAAEzc,IAAI,CAAC8c,OAAO,GAAG,aAAa,CAAC;MAClE,MAAM9Q,KAAK,GAAG,aAAa,GAAGyD,WAAW,CAACzP,IAAI,CAAC8c,OAAO,CAAC,GAAG,IAAI;MAC9D,MAAMsC,KAAK,GAAGlQ,QAAQ,CAACK,aAAa,CAACvD,KAAK,CAAC;MAC3C,MAAMqT,WAAW,GAAGrf,IAAI,CAACsf,KAAK,CAAC7R,IAAI,CAACzN,IAAI,CAAC;MAEzC,IAAIof,KAAK,EAAE;QACTpG,QAAQ,CAACoG,KAAK,EAAE,OAAO,EAAEC,WAAW,CAAC;QACrCvN,OAAO,CAACsN,KAAK,EAAE;UACbG,GAAG,EAAEJ;QACP,CAAC,CAAC;QACF,MAAMK,QAAQ,GAAG/F,KAAK,CAAC2F,KAAK,EAAEpf,IAAI,CAAC8c,OAAO,GAAG,WAAW,CAAC;QACzDhL,OAAO,CAAC2K,UAAU,EAAE;UAClB,iBAAiB,EAAE+C;QACrB,CAAC,CAAC;QACF1N,OAAO,CAAC0K,gBAAgB,EAAE;UACxB,iBAAiB,EAAEgD;QACrB,CAAC,CAAC;MACJ;MAEArO,OAAO,CAACjB,KAAK,CAACuP,KAAK,GAAG7a,KAAK,CAACsL,KAAK,CAACuP,KAAK;MAEvC,IAAIzf,IAAI,CAAC2B,OAAO,CAACC,KAAK,CAACV,MAAM,EAAE;QAC7B,MAAMwe,eAAe,GAAG,SAAS,GAAG1f,IAAI,CAAC2B,OAAO,CAACC,KAAK,CAACuB,IAAI,CAAC,UAAU,CAAC;QACvEgN,UAAU,CAAC,CAACgB,OAAO,EAAEmL,QAAQ,CAAC,EAAEoD,eAAe,CAAC;MAClD;MAEA,IAAI,CAAC7d,QAAQ,CAAC4T,QAAQ,KAAK,IAAI,IAAI5T,QAAQ,CAAC4T,QAAQ,GAAG,CAAC,KAAKzV,IAAI,CAAC4c,aAAa,EAAE;QAC/E9K,OAAO,CAAClN,KAAK,EAAE;UACb+a,QAAQ,EAAE;QACZ,CAAC,CAAC;MACJ;MAEA,IAAI9d,QAAQ,CAAC0V,WAAW,EAAE;QACxBzF,OAAO,CAACuK,aAAa,EAAE;UACrB9E,WAAW,EAAE1V,QAAQ,CAAC0V;QACxB,CAAC,CAAC;MACJ,CAAC,CAAC;;MAGF,IAAI,CAAC1V,QAAQ,CAACoT,OAAO,IAAIpT,QAAQ,CAACmT,SAAS,EAAE;QAC3CnT,QAAQ,CAACoT,OAAO,GAAG,IAAIjP,MAAM,CAAC,MAAM,GAAGhC,YAAY,CAACnC,QAAQ,CAACmT,SAAS,CAAC,GAAG,OAAO,CAAC;MACpF,CAAC,CAAC;MACF;;MAGA,IAAInT,QAAQ,CAAC+d,IAAI,IAAI/d,QAAQ,CAACmU,YAAY,EAAE;QAC1CnU,QAAQ,CAAC+d,IAAI,GAAG9H,YAAY,CAACjW,QAAQ,CAAC+d,IAAI,EAAE/d,QAAQ,CAACmU,YAAY,CAAC;MACpE;MAEAhW,IAAI,CAACqc,aAAa,CAAC9D,IAAI,GAAG3T,KAAK,CAAC2T,IAAI;MACpCS,QAAQ,CAACsD,QAAQ,EAAE,WAAW,EAAE,MAAM;QACpCtc,IAAI,CAAC2d,WAAW,GAAG,KAAK;MAC1B,CAAC,CAAC;MACF3E,QAAQ,CAACsD,QAAQ,EAAE,YAAY,EAAEuD,CAAC,IAAI;QACpC,IAAIC,YAAY,GAAG9O,WAAW,CAAC6O,CAAC,CAAC5O,MAAM,EAAE,mBAAmB,EAAEqL,QAAQ,CAAC;QACvE,IAAIwD,YAAY,EAAE9f,IAAI,CAAC+f,aAAa,CAACF,CAAC,EAAEC,YAAY,CAAC;MACvD,CAAC,EAAE;QACDE,OAAO,EAAE;MACX,CAAC,CAAC,CAAC,CAAC;;MAEJhH,QAAQ,CAACsD,QAAQ,EAAE,OAAO,EAAEzD,GAAG,IAAI;QACjC,MAAM2B,MAAM,GAAGxJ,WAAW,CAAC6H,GAAG,CAAC5H,MAAM,EAAE,mBAAmB,CAAC;QAE3D,IAAIuJ,MAAM,EAAE;UACVxa,IAAI,CAACigB,cAAc,CAACpH,GAAG,EAAE2B,MAAM,CAAC;UAChC5B,cAAc,CAACC,GAAG,EAAE,IAAI,CAAC;QAC3B;MACF,CAAC,CAAC;MACFG,QAAQ,CAACuD,OAAO,EAAE,OAAO,EAAE1D,GAAG,IAAI;QAChC,IAAIiH,YAAY,GAAG9O,WAAW,CAAC6H,GAAG,CAAC5H,MAAM,EAAE,gBAAgB,EAAEsL,OAAO,CAAC;QAErE,IAAIuD,YAAY,IAAI9f,IAAI,CAACkgB,YAAY,CAACrH,GAAG,EAAEiH,YAAY,CAAC,EAAE;UACxDlH,cAAc,CAACC,GAAG,EAAE,IAAI,CAAC;UACzB;QACF,CAAC,CAAC;;QAGF,IAAIwD,aAAa,CAAChY,KAAK,IAAI,EAAE,EAAE;UAC7B;QACF;QAEArE,IAAI,CAACmgB,OAAO,EAAE;QACdvH,cAAc,CAACC,GAAG,EAAE,IAAI,CAAC;MAC3B,CAAC,CAAC,CAAC,CAAC;;MAEJG,QAAQ,CAACyD,UAAU,EAAE,SAAS,EAAEoD,CAAC,IAAI7f,IAAI,CAACogB,SAAS,CAACP,CAAC,CAAC,CAAC,CAAC,CAAC;;MAEzD7G,QAAQ,CAACqD,aAAa,EAAE,UAAU,EAAEwD,CAAC,IAAI7f,IAAI,CAACqgB,UAAU,CAACR,CAAC,CAAC,CAAC;MAC5D7G,QAAQ,CAACqD,aAAa,EAAE,OAAO,EAAEwD,CAAC,IAAI7f,IAAI,CAACsgB,OAAO,CAACT,CAAC,CAAC,CAAC;MACtD7G,QAAQ,CAACyD,UAAU,EAAE,MAAM,EAAEoD,CAAC,IAAI7f,IAAI,CAACugB,MAAM,CAACV,CAAC,CAAC,CAAC;MACjD7G,QAAQ,CAACyD,UAAU,EAAE,OAAO,EAAEoD,CAAC,IAAI7f,IAAI,CAACwgB,OAAO,CAACX,CAAC,CAAC,CAAC;MACnD7G,QAAQ,CAACqD,aAAa,EAAE,OAAO,EAAEwD,CAAC,IAAI7f,IAAI,CAACygB,OAAO,CAACZ,CAAC,CAAC,CAAC;MAEtD,MAAMa,aAAa,GAAG7H,GAAG,IAAI;QAC3B;QACA;QACA,MAAM5H,MAAM,GAAG4H,GAAG,CAAC8H,YAAY,EAAE,CAAC,CAAC,CAAC;QAEpC,IAAI,CAACxP,OAAO,CAACC,QAAQ,CAACH,MAAM,CAAC,IAAI,CAACqL,QAAQ,CAAClL,QAAQ,CAACH,MAAM,CAAC,EAAE;UAC3D,IAAIjR,IAAI,CAACud,SAAS,EAAE;YAClBvd,IAAI,CAAC4gB,IAAI,EAAE;UACb;UAEA5gB,IAAI,CAAC6gB,UAAU,EAAE;UACjB;QACF,CAAC,CAAC;QACF;QACA;QACA;;QAGA,IAAI5P,MAAM,IAAIoL,aAAa,IAAIrc,IAAI,CAACid,MAAM,EAAE;UAC1CpE,GAAG,CAACE,eAAe,EAAE,CAAC,CAAC;QACzB,CAAC,MAAM;UACLH,cAAc,CAACC,GAAG,EAAE,IAAI,CAAC;QAC3B;MACF,CAAC;MAED,MAAMiI,UAAU,GAAG,MAAM;QACvB,IAAI9gB,IAAI,CAACid,MAAM,EAAE;UACfjd,IAAI,CAAC+gB,gBAAgB,EAAE;QACzB;MACF,CAAC;MAED/H,QAAQ,CAAC9J,QAAQ,EAAE,WAAW,EAAEwR,aAAa,CAAC;MAC9C1H,QAAQ,CAACsF,MAAM,EAAE,QAAQ,EAAEwC,UAAU,EAAE/B,aAAa,CAAC;MACrD/F,QAAQ,CAACsF,MAAM,EAAE,QAAQ,EAAEwC,UAAU,EAAE/B,aAAa,CAAC;MAErD,IAAI,CAAChC,QAAQ,GAAG,MAAM;QACpB7N,QAAQ,CAAC8R,mBAAmB,CAAC,WAAW,EAAEN,aAAa,CAAC;QACxDpC,MAAM,CAAC0C,mBAAmB,CAAC,QAAQ,EAAEF,UAAU,CAAC;QAChDxC,MAAM,CAAC0C,mBAAmB,CAAC,QAAQ,EAAEF,UAAU,CAAC;QAChD,IAAI1B,KAAK,EAAEA,KAAK,CAAC4B,mBAAmB,CAAC,OAAO,EAAE3B,WAAW,CAAC;MAC5D,CAAC,CAAC,CAAC;MACH;;MAGA,IAAI,CAAC4B,cAAc,GAAG;QACpB7R,SAAS,EAAExK,KAAK,CAACwK,SAAS;QAC1BuN,QAAQ,EAAE/X,KAAK,CAAC+X;MAClB,CAAC;MACD/X,KAAK,CAAC+X,QAAQ,GAAG,CAAC,CAAC;MACnB/X,KAAK,CAACsc,qBAAqB,CAAC,UAAU,EAAElhB,IAAI,CAACmR,OAAO,CAAC;MACrDnR,IAAI,CAACmhB,IAAI,CAAC,KAAK,CAAC;MAChBtf,QAAQ,CAACgK,KAAK,GAAG,EAAE;MACnB,OAAOhK,QAAQ,CAACkT,SAAS;MACzB,OAAOlT,QAAQ,CAACW,OAAO;MACvBwW,QAAQ,CAACpU,KAAK,EAAE,SAAS,EAAE,MAAM;QAC/B,IAAI5E,IAAI,CAACqd,OAAO,EAAE;UAChBrd,IAAI,CAACqd,OAAO,GAAG,KAAK;UACpBrd,IAAI,CAACod,SAAS,GAAG,IAAI;UACrBpd,IAAI,CAACohB,YAAY,EAAE;QACrB;MACF,CAAC,CAAC;MACFphB,IAAI,CAACqhB,mBAAmB,EAAE;MAC1BrhB,IAAI,CAACshB,YAAY,EAAE;MACnBthB,IAAI,CAACuhB,KAAK,CAAC,KAAK,CAAC;MACjBvhB,IAAI,CAAC6gB,UAAU,EAAE;MACjB7gB,IAAI,CAACyd,OAAO,GAAG,IAAI;MAEnB,IAAI7Y,KAAK,CAACyW,QAAQ,EAAE;QAClBrb,IAAI,CAACwhB,OAAO,EAAE;MAChB,CAAC,MAAM;QACLxhB,IAAI,CAACyhB,MAAM,EAAE,CAAC,CAAC;MACjB;;MAEAzhB,IAAI,CAACW,EAAE,CAAC,QAAQ,EAAE,IAAI,CAAC+gB,QAAQ,CAAC;MAChCvR,UAAU,CAACvL,KAAK,EAAE,aAAa,EAAE,sBAAsB,CAAC;MACxD5E,IAAI,CAACsB,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC;;MAE5B,IAAIO,QAAQ,CAACiU,OAAO,KAAK,IAAI,EAAE;QAC7B9V,IAAI,CAAC8V,OAAO,EAAE;MAChB;IACF;IACA;AACH;AACA;AACA;;IAGG6L,YAAY,CAACnf,OAAO,GAAG,EAAE,EAAEuS,SAAS,GAAG,EAAE,EAAE;MACzC;MACA,IAAI,CAAC6M,UAAU,CAACpf,OAAO,CAAC,CAAC,CAAC;;MAE1BiJ,SAAS,CAACsJ,SAAS,EAAE0G,QAAQ,IAAI;QAC/B,IAAI,CAACoG,mBAAmB,CAACpG,QAAQ,CAAC;MACpC,CAAC,CAAC;IACJ;IACA;AACH;AACA;;IAGGkD,cAAc,GAAG;MACf,IAAI3e,IAAI,GAAG,IAAI;MACf,IAAIia,WAAW,GAAGja,IAAI,CAAC6B,QAAQ,CAACwU,UAAU;MAC1C,IAAI+D,cAAc,GAAGpa,IAAI,CAAC6B,QAAQ,CAAC0U,kBAAkB;MACrD,IAAIuL,SAAS,GAAG;QACd,UAAU,EAAE7U,IAAI,IAAI;UAClB,IAAIwO,QAAQ,GAAGvM,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;UAC5CsM,QAAQ,CAAC5I,SAAS,GAAG,UAAU;UAC/B4I,QAAQ,CAACtI,WAAW,CAAClG,IAAI,CAACzK,OAAO,CAAC;UAClC,OAAOiZ,QAAQ;QACjB,CAAC;QACD,iBAAiB,EAAE,CAACxO,IAAI,EAAE8U,MAAM,KAAK;UACnC,OAAO,+BAA+B,GAAGA,MAAM,CAAC9U,IAAI,CAACmN,cAAc,CAAC,CAAC,GAAG,QAAQ;QAClF,CAAC;QACD,QAAQ,EAAE,CAACnN,IAAI,EAAE8U,MAAM,KAAK;UAC1B,OAAO,OAAO,GAAGA,MAAM,CAAC9U,IAAI,CAACgN,WAAW,CAAC,CAAC,GAAG,QAAQ;QACvD,CAAC;QACD,MAAM,EAAE,CAAChN,IAAI,EAAE8U,MAAM,KAAK;UACxB,OAAO,OAAO,GAAGA,MAAM,CAAC9U,IAAI,CAACgN,WAAW,CAAC,CAAC,GAAG,QAAQ;QACvD,CAAC;QACD,eAAe,EAAE,CAAChN,IAAI,EAAE8U,MAAM,KAAK;UACjC,OAAO,kCAAkC,GAAGA,MAAM,CAAC9U,IAAI,CAACrI,KAAK,CAAC,GAAG,yBAAyB;QAC5F,CAAC;QACD,YAAY,EAAE,MAAM;UAClB,OAAO,gDAAgD;QACzD,CAAC;QACD,SAAS,EAAE,MAAM;UACf,OAAO,6BAA6B;QACtC,CAAC;QACD,aAAa,EAAE,MAAM,CAAC,CAAC;QACvB,UAAU,EAAE,MAAM;UAChB,OAAO,aAAa;QACtB;MACF,CAAC;MACD5E,IAAI,CAAC6B,QAAQ,CAAC6V,MAAM,GAAGzR,MAAM,CAACkI,MAAM,CAAC,CAAC,CAAC,EAAE2T,SAAS,EAAE9hB,IAAI,CAAC6B,QAAQ,CAAC6V,MAAM,CAAC;IAC3E;IACA;AACH;AACA;AACA;;IAGGgH,cAAc,GAAG;MACf,IAAIvc,GAAG,EAAEF,EAAE;MACX,IAAI+f,SAAS,GAAG;QACd,YAAY,EAAE,cAAc;QAC5B,QAAQ,EAAE,UAAU;QACpB,UAAU,EAAE,WAAW;QACvB,aAAa,EAAE,cAAc;QAC7B,aAAa,EAAE,cAAc;QAC7B,OAAO,EAAE,SAAS;QAClB,YAAY,EAAE,aAAa;QAC3B,eAAe,EAAE,gBAAgB;QACjC,cAAc,EAAE,eAAe;QAC/B,cAAc,EAAE,kBAAkB;QAClC,iBAAiB,EAAE,qBAAqB;QACxC,gBAAgB,EAAE,oBAAoB;QACtC,eAAe,EAAE,gBAAgB;QACjC,gBAAgB,EAAE,iBAAiB;QACnC,MAAM,EAAE,QAAQ;QAChB,MAAM,EAAE,QAAQ;QAChB,OAAO,EAAE,SAAS;QAClB,MAAM,EAAE;MACV,CAAC;MAED,KAAK7f,GAAG,IAAI6f,SAAS,EAAE;QACrB/f,EAAE,GAAG,IAAI,CAACJ,QAAQ,CAACmgB,SAAS,CAAC7f,GAAG,CAAC,CAAC;QAClC,IAAIF,EAAE,EAAE,IAAI,CAACtB,EAAE,CAACwB,GAAG,EAAEF,EAAE,CAAC;MAC1B;IACF;IACA;AACH;AACA;AACA;;IAGGkf,IAAI,CAACc,YAAY,GAAG,IAAI,EAAE;MACxB,MAAMjiB,IAAI,GAAG,IAAI;MACjB,MAAM6B,QAAQ,GAAGogB,YAAY,GAAGnI,WAAW,CAAC9Z,IAAI,CAAC4E,KAAK,EAAE;QACtDoQ,SAAS,EAAEhV,IAAI,CAAC6B,QAAQ,CAACmT;MAC3B,CAAC,CAAC,GAAGhV,IAAI,CAAC6B,QAAQ;MAClB7B,IAAI,CAAC2hB,YAAY,CAAC9f,QAAQ,CAACW,OAAO,EAAEX,QAAQ,CAACkT,SAAS,CAAC;MACvD/U,IAAI,CAACkiB,QAAQ,CAACrgB,QAAQ,CAACgK,KAAK,IAAI,EAAE,EAAE,IAAI,CAAC,CAAC,CAAC;;MAE3C7L,IAAI,CAACmiB,SAAS,GAAG,IAAI,CAAC,CAAC;IACzB;IACA;AACH;AACA;AACA;AACA;;IAGGhC,OAAO,GAAG;MACR,IAAIngB,IAAI,GAAG,IAAI;MAEf,IAAIA,IAAI,CAACie,WAAW,CAAC/c,MAAM,GAAG,CAAC,EAAE;QAC/BlB,IAAI,CAACoiB,gBAAgB,EAAE;QACvBpiB,IAAI,CAACsf,KAAK,EAAE;QACZ;MACF;MAEA,IAAItf,IAAI,CAACud,SAAS,IAAIvd,IAAI,CAACid,MAAM,EAAE;QACjCjd,IAAI,CAAC4gB,IAAI,EAAE;MACb,CAAC,MAAM;QACL5gB,IAAI,CAACsf,KAAK,EAAE;MACd;IACF;IACA;AACH;AACA;AACA;;IAGG+C,WAAW,GAAG,CAAC;IACf;AACH;AACA;AACA;AACA;;IAGGX,QAAQ,GAAG;MACThS,YAAY,CAAC,IAAI,CAAC9K,KAAK,EAAE,OAAO,CAAC;MACjC8K,YAAY,CAAC,IAAI,CAAC9K,KAAK,EAAE,QAAQ,CAAC;IACpC;IACA;AACH;AACA;AACA;;IAGG6b,OAAO,CAACZ,CAAC,EAAE;MACT,IAAI7f,IAAI,GAAG,IAAI;MAEf,IAAIA,IAAI,CAACwd,aAAa,IAAIxd,IAAI,CAACsd,QAAQ,EAAE;QACvC1E,cAAc,CAACiH,CAAC,CAAC;QACjB;MACF,CAAC,CAAC;MACF;;MAGA,IAAI,CAAC7f,IAAI,CAAC6B,QAAQ,CAACoT,OAAO,EAAE;QAC1B;MACF,CAAC,CAAC;;MAGFkD,UAAU,CAAC,MAAM;QACf,IAAImK,UAAU,GAAGtiB,IAAI,CAACuiB,UAAU,EAAE;QAElC,IAAI,CAACD,UAAU,CAAC7a,KAAK,CAACzH,IAAI,CAAC6B,QAAQ,CAACoT,OAAO,CAAC,EAAE;UAC5C;QACF;QAEA,IAAIuN,UAAU,GAAGF,UAAU,CAAClU,IAAI,EAAE,CAAC/N,KAAK,CAACL,IAAI,CAAC6B,QAAQ,CAACoT,OAAO,CAAC;QAC/DxJ,SAAS,CAAC+W,UAAU,EAAEC,KAAK,IAAI;UAC7B,MAAMC,IAAI,GAAG/K,QAAQ,CAAC8K,KAAK,CAAC;UAE5B,IAAIC,IAAI,EAAE;YACR,IAAI,IAAI,CAAClgB,OAAO,CAACigB,KAAK,CAAC,EAAE;cACvBziB,IAAI,CAAC2iB,OAAO,CAACF,KAAK,CAAC;YACrB,CAAC,MAAM;cACLziB,IAAI,CAAC4iB,UAAU,CAACH,KAAK,CAAC;YACxB;UACF;QACF,CAAC,CAAC;MACJ,CAAC,EAAE,CAAC,CAAC;IACP;IACA;AACH;AACA;AACA;;IAGGpC,UAAU,CAACR,CAAC,EAAE;MACZ,IAAI7f,IAAI,GAAG,IAAI;MAEf,IAAIA,IAAI,CAACsd,QAAQ,EAAE;QACjB1E,cAAc,CAACiH,CAAC,CAAC;QACjB;MACF;MAEA,IAAIgD,SAAS,GAAG9b,MAAM,CAACC,YAAY,CAAC6Y,CAAC,CAACiD,OAAO,IAAIjD,CAAC,CAACkD,KAAK,CAAC;MAEzD,IAAI/iB,IAAI,CAAC6B,QAAQ,CAACsT,MAAM,IAAInV,IAAI,CAAC6B,QAAQ,CAACgV,IAAI,KAAK,OAAO,IAAIgM,SAAS,KAAK7iB,IAAI,CAAC6B,QAAQ,CAACmT,SAAS,EAAE;QACnGhV,IAAI,CAAC4iB,UAAU,EAAE;QACjBhK,cAAc,CAACiH,CAAC,CAAC;QACjB;MACF;IACF;IACA;AACH;AACA;AACA;;IAGGO,SAAS,CAACP,CAAC,EAAE;MACX,IAAI7f,IAAI,GAAG,IAAI;MACfA,IAAI,CAAC2d,WAAW,GAAG,IAAI;MAEvB,IAAI3d,IAAI,CAACsd,QAAQ,EAAE;QACjB,IAAIuC,CAAC,CAACiD,OAAO,KAAKrO,OAAO,EAAE;UACzBmE,cAAc,CAACiH,CAAC,CAAC;QACnB;QAEA;MACF;MAEA,QAAQA,CAAC,CAACiD,OAAO;QACf;QACA,KAAK9O,KAAK;UACR,IAAIkF,SAAS,CAACrE,YAAY,EAAEgL,CAAC,CAAC,EAAE;YAC9B,IAAI7f,IAAI,CAACqc,aAAa,CAAChY,KAAK,IAAI,EAAE,EAAE;cAClCuU,cAAc,CAACiH,CAAC,CAAC;cACjB7f,IAAI,CAACgjB,SAAS,EAAE;cAChB;YACF;UACF;UAEA;QACF;;QAEA,KAAK9O,OAAO;UACV,IAAIlU,IAAI,CAACid,MAAM,EAAE;YACfrE,cAAc,CAACiH,CAAC,EAAE,IAAI,CAAC;YACvB7f,IAAI,CAACuhB,KAAK,EAAE;UACd;UAEAvhB,IAAI,CAACoiB,gBAAgB,EAAE;UACvB;QACF;;QAEA,KAAK9N,QAAQ;UACX,IAAI,CAACtU,IAAI,CAACid,MAAM,IAAIjd,IAAI,CAAC4d,UAAU,EAAE;YACnC5d,IAAI,CAACijB,IAAI,EAAE;UACb,CAAC,MAAM,IAAIjjB,IAAI,CAACge,YAAY,EAAE;YAC5B,IAAIkF,IAAI,GAAGljB,IAAI,CAACmjB,WAAW,CAACnjB,IAAI,CAACge,YAAY,EAAE,CAAC,CAAC;YACjD,IAAIkF,IAAI,EAAEljB,IAAI,CAACojB,eAAe,CAACF,IAAI,CAAC;UACtC;UAEAtK,cAAc,CAACiH,CAAC,CAAC;UACjB;QACF;;QAEA,KAAKzL,MAAM;UACT,IAAIpU,IAAI,CAACge,YAAY,EAAE;YACrB,IAAIqF,IAAI,GAAGrjB,IAAI,CAACmjB,WAAW,CAACnjB,IAAI,CAACge,YAAY,EAAE,CAAC,CAAC,CAAC;YAClD,IAAIqF,IAAI,EAAErjB,IAAI,CAACojB,eAAe,CAACC,IAAI,CAAC;UACtC;UAEAzK,cAAc,CAACiH,CAAC,CAAC;UACjB;QACF;;QAEA,KAAK5L,UAAU;UACb,IAAIjU,IAAI,CAACsjB,SAAS,CAACtjB,IAAI,CAACge,YAAY,CAAC,EAAE;YACrChe,IAAI,CAACigB,cAAc,CAACJ,CAAC,EAAE7f,IAAI,CAACge,YAAY,CAAC;YACzCpF,cAAc,CAACiH,CAAC,CAAC,CAAC,CAAC;UACrB,CAAC,MAAM,IAAI7f,IAAI,CAAC6B,QAAQ,CAACsT,MAAM,IAAInV,IAAI,CAAC4iB,UAAU,EAAE,EAAE;YACpDhK,cAAc,CAACiH,CAAC,CAAC,CAAC,CAAC;UACrB,CAAC,MAAM,IAAI3Q,QAAQ,CAACqU,aAAa,IAAIvjB,IAAI,CAACqc,aAAa,IAAIrc,IAAI,CAACid,MAAM,EAAE;YACtErE,cAAc,CAACiH,CAAC,CAAC;UACnB;UAEA;QACF;;QAEA,KAAK1L,QAAQ;UACXnU,IAAI,CAACwjB,gBAAgB,CAAC,CAAC,CAAC,EAAE3D,CAAC,CAAC;UAC5B;QACF;;QAEA,KAAKxL,SAAS;UACZrU,IAAI,CAACwjB,gBAAgB,CAAC,CAAC,EAAE3D,CAAC,CAAC;UAC3B;QACF;;QAEA,KAAKpL,OAAO;UACV,IAAIzU,IAAI,CAAC6B,QAAQ,CAACgU,WAAW,EAAE;YAC7B,IAAI7V,IAAI,CAACsjB,SAAS,CAACtjB,IAAI,CAACge,YAAY,CAAC,EAAE;cACrChe,IAAI,CAACigB,cAAc,CAACJ,CAAC,EAAE7f,IAAI,CAACge,YAAY,CAAC,CAAC,CAAC;cAC3C;;cAEApF,cAAc,CAACiH,CAAC,CAAC;YACnB;YAEA,IAAI7f,IAAI,CAAC6B,QAAQ,CAACsT,MAAM,IAAInV,IAAI,CAAC4iB,UAAU,EAAE,EAAE;cAC7ChK,cAAc,CAACiH,CAAC,CAAC;YACnB;UACF;UAEA;QACF;;QAEA,KAAKtL,aAAa;QAClB,KAAKC,UAAU;UACbxU,IAAI,CAACyjB,eAAe,CAAC5D,CAAC,CAAC;UACvB;MAAO,CACV,CAAC;;MAGF,IAAI7f,IAAI,CAACwd,aAAa,IAAI,CAACtE,SAAS,CAACrE,YAAY,EAAEgL,CAAC,CAAC,EAAE;QACrDjH,cAAc,CAACiH,CAAC,CAAC;MACnB;IACF;IACA;AACH;AACA;AACA;;IAGGS,OAAO,CAACT,CAAC,EAAE;MACT,IAAI7f,IAAI,GAAG,IAAI;MAEf,IAAIA,IAAI,CAACsd,QAAQ,EAAE;QACjB;MACF;MAEA,IAAIjZ,KAAK,GAAGrE,IAAI,CAACuiB,UAAU,EAAE;MAE7B,IAAIviB,IAAI,CAAC8d,SAAS,KAAKzZ,KAAK,EAAE;QAC5BrE,IAAI,CAAC8d,SAAS,GAAGzZ,KAAK;QAEtB,IAAIrE,IAAI,CAAC6B,QAAQ,CAAC4V,UAAU,CAAC3D,IAAI,CAAC9T,IAAI,EAAEqE,KAAK,CAAC,EAAE;UAC9CrE,IAAI,CAAC4f,IAAI,CAACvb,KAAK,CAAC;QAClB;QAEArE,IAAI,CAAC0jB,cAAc,EAAE;QACrB1jB,IAAI,CAACsB,OAAO,CAAC,MAAM,EAAE+C,KAAK,CAAC;MAC7B;IACF;IACA;AACH;AACA;AACA;AACA;;IAGG0b,aAAa,CAAClH,GAAG,EAAE2B,MAAM,EAAE;MACzB,IAAI,IAAI,CAACmD,WAAW,EAAE;MACtB,IAAI,CAACyF,eAAe,CAAC5I,MAAM,EAAE,KAAK,CAAC;IACrC;IACA;AACH;AACA;AACA;;IAGGgG,OAAO,CAACX,CAAC,EAAE;MACT,IAAI7f,IAAI,GAAG,IAAI;MACf,IAAI2jB,UAAU,GAAG3jB,IAAI,CAACud,SAAS;MAE/B,IAAIvd,IAAI,CAACkd,UAAU,EAAE;QACnBld,IAAI,CAAC4gB,IAAI,EAAE;QACXhI,cAAc,CAACiH,CAAC,CAAC;QACjB;MACF;MAEA,IAAI7f,IAAI,CAAC0d,WAAW,EAAE;MACtB1d,IAAI,CAACud,SAAS,GAAG,IAAI;MACrB,IAAIvd,IAAI,CAAC6B,QAAQ,CAACiU,OAAO,KAAK,OAAO,EAAE9V,IAAI,CAAC8V,OAAO,EAAE;MACrD,IAAI,CAAC6N,UAAU,EAAE3jB,IAAI,CAACsB,OAAO,CAAC,OAAO,CAAC;MAEtC,IAAI,CAACtB,IAAI,CAACie,WAAW,CAAC/c,MAAM,EAAE;QAC5BlB,IAAI,CAAC4jB,SAAS,EAAE;QAChB5jB,IAAI,CAAC0jB,cAAc,CAAC,CAAC,CAAC1jB,IAAI,CAAC6B,QAAQ,CAACyT,WAAW,CAAC;MAClD;MAEAtV,IAAI,CAACohB,YAAY,EAAE;IACrB;IACA;AACH;AACA;AACA;;IAGGb,MAAM,CAACV,CAAC,EAAE;MACR,IAAI3Q,QAAQ,CAAC2U,QAAQ,EAAE,KAAK,KAAK,EAAE;MACnC,IAAI7jB,IAAI,GAAG,IAAI;MACf,IAAI,CAACA,IAAI,CAACud,SAAS,EAAE;MACrBvd,IAAI,CAACud,SAAS,GAAG,KAAK;MACtBvd,IAAI,CAAC0d,WAAW,GAAG,KAAK;MAExB,IAAIoG,UAAU,GAAG,MAAM;QACrB9jB,IAAI,CAACuhB,KAAK,EAAE;QACZvhB,IAAI,CAAC+jB,aAAa,EAAE;QACpB/jB,IAAI,CAACgkB,QAAQ,CAAChkB,IAAI,CAAC6L,KAAK,CAAC3K,MAAM,CAAC;QAChClB,IAAI,CAACsB,OAAO,CAAC,MAAM,CAAC;MACtB,CAAC;MAED,IAAItB,IAAI,CAAC6B,QAAQ,CAACsT,MAAM,IAAInV,IAAI,CAAC6B,QAAQ,CAACuT,YAAY,EAAE;QACtDpV,IAAI,CAAC4iB,UAAU,CAAC,IAAI,EAAEkB,UAAU,CAAC;MACnC,CAAC,MAAM;QACLA,UAAU,EAAE;MACd;IACF;IACA;AACH;AACA;AACA;AACA;;IAGG7D,cAAc,CAACpH,GAAG,EAAE2B,MAAM,EAAE;MAC1B,IAAInW,KAAK;QACLrE,IAAI,GAAG,IAAI,CAAC,CAAC;;MAEjB,IAAIwa,MAAM,CAACyJ,aAAa,IAAIzJ,MAAM,CAACyJ,aAAa,CAAC5S,OAAO,CAAC,iBAAiB,CAAC,EAAE;QAC3E;MACF;MAEA,IAAImJ,MAAM,CAAC7J,SAAS,CAACS,QAAQ,CAAC,QAAQ,CAAC,EAAE;QACvCpR,IAAI,CAAC4iB,UAAU,CAAC,IAAI,EAAE,MAAM;UAC1B,IAAI5iB,IAAI,CAAC6B,QAAQ,CAACqiB,gBAAgB,EAAE;YAClClkB,IAAI,CAACuhB,KAAK,EAAE;UACd;QACF,CAAC,CAAC;MACJ,CAAC,MAAM;QACLld,KAAK,GAAGmW,MAAM,CAACO,OAAO,CAAC1W,KAAK;QAE5B,IAAI,OAAOA,KAAK,KAAK,WAAW,EAAE;UAChCrE,IAAI,CAACmiB,SAAS,GAAG,IAAI;UACrBniB,IAAI,CAAC2iB,OAAO,CAACte,KAAK,CAAC;UAEnB,IAAIrE,IAAI,CAAC6B,QAAQ,CAACqiB,gBAAgB,EAAE;YAClClkB,IAAI,CAACuhB,KAAK,EAAE;UACd;UAEA,IAAI,CAACvhB,IAAI,CAAC6B,QAAQ,CAAC6T,YAAY,IAAImD,GAAG,CAACN,IAAI,IAAI,OAAO,CAAChF,IAAI,CAACsF,GAAG,CAACN,IAAI,CAAC,EAAE;YACrEvY,IAAI,CAACojB,eAAe,CAAC5I,MAAM,CAAC;UAC9B;QACF;MACF;IACF;IACA;AACH;AACA;AACA;;IAGG8I,SAAS,CAAC9I,MAAM,EAAE;MAChB,IAAI,IAAI,CAACyC,MAAM,IAAIzC,MAAM,IAAI,IAAI,CAACgC,gBAAgB,CAACpL,QAAQ,CAACoJ,MAAM,CAAC,EAAE;QACnE,OAAO,IAAI;MACb;MAEA,OAAO,KAAK;IACd;IACA;AACH;AACA;AACA;AACA;;IAGG0F,YAAY,CAACrH,GAAG,EAAErK,IAAI,EAAE;MACtB,IAAIxO,IAAI,GAAG,IAAI;MAEf,IAAI,CAACA,IAAI,CAACsd,QAAQ,IAAItd,IAAI,CAAC6B,QAAQ,CAACgV,IAAI,KAAK,OAAO,EAAE;QACpD+B,cAAc,CAACC,GAAG,CAAC;QACnB7Y,IAAI,CAAC+jB,aAAa,CAACvV,IAAI,EAAEqK,GAAG,CAAC;QAC7B,OAAO,IAAI;MACb;MAEA,OAAO,KAAK;IACd;IACA;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IAGGsL,OAAO,CAAC9f,KAAK,EAAE;MACb,IAAI,CAAC,IAAI,CAACxC,QAAQ,CAAC+d,IAAI,EAAE,OAAO,KAAK;MACrC,IAAI,IAAI,CAACxH,cAAc,CAAC3V,cAAc,CAAC4B,KAAK,CAAC,EAAE,OAAO,KAAK;MAC3D,OAAO,IAAI;IACb;IACA;AACH;AACA;AACA;;IAGGub,IAAI,CAACvb,KAAK,EAAE;MACV,MAAMrE,IAAI,GAAG,IAAI;MACjB,IAAI,CAACA,IAAI,CAACmkB,OAAO,CAAC9f,KAAK,CAAC,EAAE;MAC1B8L,UAAU,CAACnQ,IAAI,CAACmR,OAAO,EAAEnR,IAAI,CAAC6B,QAAQ,CAACoU,YAAY,CAAC;MACpDjW,IAAI,CAACiY,OAAO,EAAE;MACd,MAAM7X,QAAQ,GAAGJ,IAAI,CAACokB,YAAY,CAAC3W,IAAI,CAACzN,IAAI,CAAC;MAC7CA,IAAI,CAAC6B,QAAQ,CAAC+d,IAAI,CAAC9L,IAAI,CAAC9T,IAAI,EAAEqE,KAAK,EAAEjE,QAAQ,CAAC;IAChD;IACA;AACH;AACA;AACA;;IAGGgkB,YAAY,CAAC5hB,OAAO,EAAEuS,SAAS,EAAE;MAC/B,MAAM/U,IAAI,GAAG,IAAI;MACjBA,IAAI,CAACiY,OAAO,GAAG3T,IAAI,CAACC,GAAG,CAACvE,IAAI,CAACiY,OAAO,GAAG,CAAC,EAAE,CAAC,CAAC;MAC5CjY,IAAI,CAACmiB,SAAS,GAAG,IAAI;MACrBniB,IAAI,CAACqkB,iBAAiB,EAAE,CAAC,CAAC;;MAE1BrkB,IAAI,CAAC2hB,YAAY,CAACnf,OAAO,EAAEuS,SAAS,CAAC;MACrC/U,IAAI,CAAC0jB,cAAc,CAAC1jB,IAAI,CAACud,SAAS,IAAI,CAACvd,IAAI,CAACwd,aAAa,CAAC;MAE1D,IAAI,CAACxd,IAAI,CAACiY,OAAO,EAAE;QACjBrH,aAAa,CAAC5Q,IAAI,CAACmR,OAAO,EAAEnR,IAAI,CAAC6B,QAAQ,CAACoU,YAAY,CAAC;MACzD;MAEAjW,IAAI,CAACsB,OAAO,CAAC,MAAM,EAAEkB,OAAO,EAAEuS,SAAS,CAAC;IAC1C;IAEAe,OAAO,GAAG;MACR,IAAInF,SAAS,GAAG,IAAI,CAACQ,OAAO,CAACR,SAAS;MACtC,IAAIA,SAAS,CAACS,QAAQ,CAAC,WAAW,CAAC,EAAE;MACrCT,SAAS,CAACjJ,GAAG,CAAC,WAAW,CAAC;MAC1B,IAAI,CAACkY,IAAI,CAAC,EAAE,CAAC;IACf;IACA;AACH;AACA;AACA;;IAGG0E,eAAe,CAACjgB,KAAK,GAAG,EAAE,EAAE;MAC1B,IAAIO,KAAK,GAAG,IAAI,CAACyX,aAAa;MAC9B,IAAIkI,OAAO,GAAG3f,KAAK,CAACP,KAAK,KAAKA,KAAK;MAEnC,IAAIkgB,OAAO,EAAE;QACX3f,KAAK,CAACP,KAAK,GAAGA,KAAK;QACnBqL,YAAY,CAAC9K,KAAK,EAAE,QAAQ,CAAC;QAC7B,IAAI,CAACkZ,SAAS,GAAGzZ,KAAK;MACxB;IACF;IACA;AACH;AACA;AACA;AACA;AACA;AACA;;IAGGmgB,QAAQ,GAAG;MACT,IAAI,IAAI,CAAC5H,aAAa,IAAI,IAAI,CAAChY,KAAK,CAACgX,YAAY,CAAC,UAAU,CAAC,EAAE;QAC7D,OAAO,IAAI,CAAC/P,KAAK;MACnB;MAEA,OAAO,IAAI,CAACA,KAAK,CAAC1I,IAAI,CAAC,IAAI,CAACtB,QAAQ,CAACmT,SAAS,CAAC;IACjD;IACA;AACH;AACA;AACA;;IAGGkN,QAAQ,CAAC7d,KAAK,EAAEogB,MAAM,EAAE;MACtB,IAAItkB,MAAM,GAAGskB,MAAM,GAAG,EAAE,GAAG,CAAC,QAAQ,CAAC;MACrCpM,eAAe,CAAC,IAAI,EAAElY,MAAM,EAAE,MAAM;QAClC,IAAI,CAACukB,KAAK,CAACD,MAAM,CAAC;QAClB,IAAI,CAACE,QAAQ,CAACtgB,KAAK,EAAEogB,MAAM,CAAC;MAC9B,CAAC,CAAC;IACJ;IACA;AACH;AACA;AACA;;IAGGG,WAAW,CAACvgB,KAAK,EAAE;MACjB,IAAIA,KAAK,KAAK,CAAC,EAAEA,KAAK,GAAG,IAAI,CAAC,CAAC;;MAE/B,IAAI,CAACxC,QAAQ,CAAC4T,QAAQ,GAAGpR,KAAK;MAC9B,IAAI,CAAC+c,YAAY,EAAE;IACrB;IACA;AACH;AACA;AACA;;IAGG2C,aAAa,CAACvV,IAAI,EAAEqR,CAAC,EAAE;MACrB,IAAI7f,IAAI,GAAG,IAAI;MACf,IAAI6kB,SAAS;MACb,IAAIlhB,CAAC,EAAEmhB,KAAK,EAAE5b,GAAG,EAAE6b,IAAI;MACvB,IAAIpb,IAAI;MACR,IAAI3J,IAAI,CAAC6B,QAAQ,CAACgV,IAAI,KAAK,QAAQ,EAAE,OAAO,CAAC;;MAE7C,IAAI,CAACrI,IAAI,EAAE;QACTxO,IAAI,CAACoiB,gBAAgB,EAAE;QAEvB,IAAIpiB,IAAI,CAACud,SAAS,EAAE;UAClBvd,IAAI,CAAC4jB,SAAS,EAAE;QAClB;QAEA;MACF,CAAC,CAAC;;MAGFiB,SAAS,GAAGhF,CAAC,IAAIA,CAAC,CAACtH,IAAI,CAAC7R,WAAW,EAAE;MAErC,IAAIme,SAAS,KAAK,OAAO,IAAI3L,SAAS,CAAC,UAAU,EAAE2G,CAAC,CAAC,IAAI7f,IAAI,CAACie,WAAW,CAAC/c,MAAM,EAAE;QAChFyI,IAAI,GAAG3J,IAAI,CAACglB,aAAa,EAAE;QAC3BF,KAAK,GAAGziB,KAAK,CAACwR,SAAS,CAACxS,OAAO,CAACyS,IAAI,CAAC9T,IAAI,CAACuc,OAAO,CAACZ,QAAQ,EAAEhS,IAAI,CAAC;QACjET,GAAG,GAAG7G,KAAK,CAACwR,SAAS,CAACxS,OAAO,CAACyS,IAAI,CAAC9T,IAAI,CAACuc,OAAO,CAACZ,QAAQ,EAAEnN,IAAI,CAAC;QAE/D,IAAIsW,KAAK,GAAG5b,GAAG,EAAE;UACf6b,IAAI,GAAGD,KAAK;UACZA,KAAK,GAAG5b,GAAG;UACXA,GAAG,GAAG6b,IAAI;QACZ;QAEA,KAAKphB,CAAC,GAAGmhB,KAAK,EAAEnhB,CAAC,IAAIuF,GAAG,EAAEvF,CAAC,EAAE,EAAE;UAC7B6K,IAAI,GAAGxO,IAAI,CAACuc,OAAO,CAACZ,QAAQ,CAAChY,CAAC,CAAC;UAE/B,IAAI3D,IAAI,CAACie,WAAW,CAAC5c,OAAO,CAACmN,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;YACzCxO,IAAI,CAACilB,kBAAkB,CAACzW,IAAI,CAAC;UAC/B;QACF;QAEAoK,cAAc,CAACiH,CAAC,CAAC;MACnB,CAAC,MAAM,IAAIgF,SAAS,KAAK,OAAO,IAAI3L,SAAS,CAACrE,YAAY,EAAEgL,CAAC,CAAC,IAAIgF,SAAS,KAAK,SAAS,IAAI3L,SAAS,CAAC,UAAU,EAAE2G,CAAC,CAAC,EAAE;QACrH,IAAIrR,IAAI,CAACmC,SAAS,CAACS,QAAQ,CAAC,QAAQ,CAAC,EAAE;UACrCpR,IAAI,CAACklB,gBAAgB,CAAC1W,IAAI,CAAC;QAC7B,CAAC,MAAM;UACLxO,IAAI,CAACilB,kBAAkB,CAACzW,IAAI,CAAC;QAC/B;MACF,CAAC,MAAM;QACLxO,IAAI,CAACoiB,gBAAgB,EAAE;QACvBpiB,IAAI,CAACilB,kBAAkB,CAACzW,IAAI,CAAC;MAC/B,CAAC,CAAC;;MAGFxO,IAAI,CAACmlB,SAAS,EAAE;MAEhB,IAAI,CAACnlB,IAAI,CAACud,SAAS,EAAE;QACnBvd,IAAI,CAACsf,KAAK,EAAE;MACd;IACF;IACA;AACH;AACA;AACA;;IAGG2F,kBAAkB,CAACzW,IAAI,EAAE;MACvB,MAAMxO,IAAI,GAAG,IAAI;MACjB,MAAMolB,WAAW,GAAGplB,IAAI,CAACuc,OAAO,CAAChN,aAAa,CAAC,cAAc,CAAC;MAC9D,IAAI6V,WAAW,EAAExU,aAAa,CAACwU,WAAW,EAAE,aAAa,CAAC;MAC1DjV,UAAU,CAAC3B,IAAI,EAAE,oBAAoB,CAAC;MACtCxO,IAAI,CAACsB,OAAO,CAAC,aAAa,EAAEkN,IAAI,CAAC;MAEjC,IAAIxO,IAAI,CAACie,WAAW,CAAC5c,OAAO,CAACmN,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE;QACxCxO,IAAI,CAACie,WAAW,CAACnd,IAAI,CAAC0N,IAAI,CAAC;MAC7B;IACF;IACA;AACH;AACA;AACA;;IAGG0W,gBAAgB,CAAC1W,IAAI,EAAE;MACrB,IAAI6W,GAAG,GAAG,IAAI,CAACpH,WAAW,CAAC5c,OAAO,CAACmN,IAAI,CAAC;MACxC,IAAI,CAACyP,WAAW,CAAC7c,MAAM,CAACikB,GAAG,EAAE,CAAC,CAAC;MAC/BzU,aAAa,CAACpC,IAAI,EAAE,QAAQ,CAAC;IAC/B;IACA;AACH;AACA;AACA;;IAGG4T,gBAAgB,GAAG;MACjBxR,aAAa,CAAC,IAAI,CAACqN,WAAW,EAAE,QAAQ,CAAC;MACzC,IAAI,CAACA,WAAW,GAAG,EAAE;IACvB;IACA;AACH;AACA;AACA;AACA;;IAGGmF,eAAe,CAAC5I,MAAM,EAAE8K,MAAM,GAAG,IAAI,EAAE;MACrC,IAAI9K,MAAM,KAAK,IAAI,CAACwD,YAAY,EAAE;QAChC;MACF;MAEA,IAAI,CAACqG,iBAAiB,EAAE;MACxB,IAAI,CAAC7J,MAAM,EAAE;MACb,IAAI,CAACwD,YAAY,GAAGxD,MAAM;MAC1B1I,OAAO,CAAC,IAAI,CAAC2K,UAAU,EAAE;QACvB,uBAAuB,EAAEjC,MAAM,CAACb,YAAY,CAAC,IAAI;MACnD,CAAC,CAAC;MACF7H,OAAO,CAAC0I,MAAM,EAAE;QACd,eAAe,EAAE;MACnB,CAAC,CAAC;MACFrK,UAAU,CAACqK,MAAM,EAAE,QAAQ,CAAC;MAC5B,IAAI8K,MAAM,EAAE,IAAI,CAACC,cAAc,CAAC/K,MAAM,CAAC;IACzC;IACA;AACH;AACA;AACA;;IAGG+K,cAAc,CAAC/K,MAAM,EAAEgL,QAAQ,EAAE;MAC/B,IAAI,CAAChL,MAAM,EAAE;MACb,MAAMnL,OAAO,GAAG,IAAI,CAACmN,gBAAgB;MACrC,MAAMiJ,WAAW,GAAGpW,OAAO,CAACqW,YAAY;MACxC,MAAMC,SAAS,GAAGtW,OAAO,CAACsW,SAAS,IAAI,CAAC;MACxC,MAAMC,WAAW,GAAGpL,MAAM,CAACqL,YAAY;MACvC,MAAMC,CAAC,GAAGtL,MAAM,CAACuL,qBAAqB,EAAE,CAACC,GAAG,GAAG3W,OAAO,CAAC0W,qBAAqB,EAAE,CAACC,GAAG,GAAGL,SAAS;MAE9F,IAAIG,CAAC,GAAGF,WAAW,GAAGH,WAAW,GAAGE,SAAS,EAAE;QAC7C,IAAI,CAACL,MAAM,CAACQ,CAAC,GAAGL,WAAW,GAAGG,WAAW,EAAEJ,QAAQ,CAAC;MACtD,CAAC,MAAM,IAAIM,CAAC,GAAGH,SAAS,EAAE;QACxB,IAAI,CAACL,MAAM,CAACQ,CAAC,EAAEN,QAAQ,CAAC;MAC1B;IACF;IACA;AACH;AACA;AACA;;IAGGF,MAAM,CAACK,SAAS,EAAEH,QAAQ,EAAE;MAC1B,MAAMnW,OAAO,GAAG,IAAI,CAACmN,gBAAgB;MAErC,IAAIgJ,QAAQ,EAAE;QACZnW,OAAO,CAACa,KAAK,CAAC+V,cAAc,GAAGT,QAAQ;MACzC;MAEAnW,OAAO,CAACsW,SAAS,GAAGA,SAAS;MAC7BtW,OAAO,CAACa,KAAK,CAAC+V,cAAc,GAAG,EAAE;IACnC;IACA;AACH;AACA;AACA;;IAGG5B,iBAAiB,GAAG;MAClB,IAAI,IAAI,CAACrG,YAAY,EAAE;QACrBpN,aAAa,CAAC,IAAI,CAACoN,YAAY,EAAE,QAAQ,CAAC;QAC1ClM,OAAO,CAAC,IAAI,CAACkM,YAAY,EAAE;UACzB,eAAe,EAAE;QACnB,CAAC,CAAC;MACJ;MAEA,IAAI,CAACA,YAAY,GAAG,IAAI;MACxBlM,OAAO,CAAC,IAAI,CAAC2K,UAAU,EAAE;QACvB,uBAAuB,EAAE;MAC3B,CAAC,CAAC;IACJ;IACA;AACH;AACA;;IAGGuG,SAAS,GAAG;MACV,MAAMhjB,IAAI,GAAG,IAAI;MACjB,IAAIA,IAAI,CAAC6B,QAAQ,CAACgV,IAAI,KAAK,QAAQ,EAAE;MACrC,MAAMoH,WAAW,GAAGje,IAAI,CAACkmB,eAAe,EAAE;MAC1C,IAAI,CAACjI,WAAW,CAAC/c,MAAM,EAAE;MACzBlB,IAAI,CAACmlB,SAAS,EAAE;MAChBnlB,IAAI,CAACuhB,KAAK,EAAE;MACZvhB,IAAI,CAACie,WAAW,GAAGA,WAAW;MAC9BxS,SAAS,CAACwS,WAAW,EAAEzP,IAAI,IAAI;QAC7BxO,IAAI,CAACilB,kBAAkB,CAACzW,IAAI,CAAC;MAC/B,CAAC,CAAC;IACJ;IACA;AACH;AACA;AACA;;IAGGqS,UAAU,GAAG;MACX,IAAI7gB,IAAI,GAAG,IAAI;MACf,IAAI,CAACA,IAAI,CAACuc,OAAO,CAACnL,QAAQ,CAACpR,IAAI,CAACqc,aAAa,CAAC,EAAE;MAChDvK,OAAO,CAAC9R,IAAI,CAACqc,aAAa,EAAE;QAC1B9E,WAAW,EAAEvX,IAAI,CAAC6B,QAAQ,CAAC0V;MAC7B,CAAC,CAAC;MAEF,IAAIvX,IAAI,CAACie,WAAW,CAAC/c,MAAM,GAAG,CAAC,IAAI,CAAClB,IAAI,CAACud,SAAS,IAAIvd,IAAI,CAAC6B,QAAQ,CAAC2V,eAAe,IAAIxX,IAAI,CAAC6L,KAAK,CAAC3K,MAAM,GAAG,CAAC,EAAE;QAC5GlB,IAAI,CAACskB,eAAe,EAAE;QACtBtkB,IAAI,CAACwd,aAAa,GAAG,IAAI;MAC3B,CAAC,MAAM;QACL,IAAIxd,IAAI,CAAC6B,QAAQ,CAAC2V,eAAe,IAAIxX,IAAI,CAAC6L,KAAK,CAAC3K,MAAM,GAAG,CAAC,EAAE;UAC1D4Q,OAAO,CAAC9R,IAAI,CAACqc,aAAa,EAAE;YAC1B9E,WAAW,EAAE;UACf,CAAC,CAAC;QACJ;QAEAvX,IAAI,CAACwd,aAAa,GAAG,KAAK;MAC5B;MAEAxd,IAAI,CAACmR,OAAO,CAACR,SAAS,CAACwV,MAAM,CAAC,cAAc,EAAEnmB,IAAI,CAACwd,aAAa,CAAC;IACnE;IACA;AACH;AACA;AACA;AACA;;IAGG2H,SAAS,GAAG;MACV,IAAI,CAACtE,UAAU,EAAE;IACnB;IACA;AACH;AACA;AACA;;IAGG+C,SAAS,GAAG;MACV,IAAI,CAAC/C,UAAU,EAAE;IACnB;IACA;AACH;AACA;;IAGG0B,UAAU,GAAG;MACX,OAAO,IAAI,CAAClG,aAAa,CAAChY,KAAK,CAAC+J,IAAI,EAAE;IACxC;IACA;AACH;AACA;;IAGGkR,KAAK,GAAG;MACN,IAAItf,IAAI,GAAG,IAAI;MACf,IAAIA,IAAI,CAACkd,UAAU,EAAE;MACrBld,IAAI,CAAC0d,WAAW,GAAG,IAAI;MAEvB,IAAI1d,IAAI,CAACqc,aAAa,CAAC+J,WAAW,EAAE;QAClCpmB,IAAI,CAACqc,aAAa,CAACiD,KAAK,EAAE;MAC5B,CAAC,MAAM;QACLtf,IAAI,CAACyc,UAAU,CAAC6C,KAAK,EAAE;MACzB;MAEAnH,UAAU,CAAC,MAAM;QACfnY,IAAI,CAAC0d,WAAW,GAAG,KAAK;QACxB1d,IAAI,CAACwgB,OAAO,EAAE;MAChB,CAAC,EAAE,CAAC,CAAC;IACP;IACA;AACH;AACA;AACA;;IAGGI,IAAI,GAAG;MACL,IAAI,CAACnE,UAAU,CAACmE,IAAI,EAAE;MACtB,IAAI,CAACL,MAAM,EAAE;IACf;IACA;AACH;AACA;AACA;AACA;AACA;AACA;;IAGG9T,gBAAgB,CAACT,KAAK,EAAE;MACtB,OAAO,IAAI,CAACgR,MAAM,CAACvQ,gBAAgB,CAACT,KAAK,EAAE,IAAI,CAACqa,gBAAgB,EAAE,CAAC;IACrE;IACA;AACH;AACA;AACA;AACA;AACA;AACA;;IAGGA,gBAAgB,GAAG;MACjB,IAAIxkB,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAC5B,IAAIgG,IAAI,GAAGhG,QAAQ,CAAC6U,SAAS;MAE7B,IAAI,OAAO7U,QAAQ,CAAC6U,SAAS,KAAK,QAAQ,EAAE;QAC1C7O,IAAI,GAAG,CAAC;UACN2E,KAAK,EAAE3K,QAAQ,CAAC6U;QAClB,CAAC,CAAC;MACJ;MAEA,OAAO;QACL7J,MAAM,EAAEhL,QAAQ,CAAC8U,WAAW;QAC5BxJ,WAAW,EAAEtL,QAAQ,CAAC+U,iBAAiB;QACvC/O,IAAI,EAAEA,IAAI;QACVyG,OAAO,EAAEzM,QAAQ,CAACyM;MACpB,CAAC;IACH;IACA;AACH;AACA;AACA;AACA;;IAGGhD,MAAM,CAACU,KAAK,EAAE;MACZ,IAAInH,MAAM,EAAEyhB,cAAc;MAC1B,IAAItmB,IAAI,GAAG,IAAI;MACf,IAAIwC,OAAO,GAAG,IAAI,CAAC6jB,gBAAgB,EAAE,CAAC,CAAC;;MAEvC,IAAIrmB,IAAI,CAAC6B,QAAQ,CAACsJ,KAAK,EAAE;QACvBmb,cAAc,GAAGtmB,IAAI,CAAC6B,QAAQ,CAACsJ,KAAK,CAAC2I,IAAI,CAAC9T,IAAI,EAAEgM,KAAK,CAAC;QAEtD,IAAI,OAAOsa,cAAc,KAAK,UAAU,EAAE;UACxC,MAAM,IAAIzjB,KAAK,CAAC,uEAAuE,CAAC;QAC1F;MACF,CAAC,CAAC;;MAGF,IAAImJ,KAAK,KAAKhM,IAAI,CAACmiB,SAAS,EAAE;QAC5BniB,IAAI,CAACmiB,SAAS,GAAGnW,KAAK;QACtBnH,MAAM,GAAG7E,IAAI,CAACgd,MAAM,CAAC1R,MAAM,CAACU,KAAK,EAAE/F,MAAM,CAACkI,MAAM,CAAC3L,OAAO,EAAE;UACxD2I,KAAK,EAAEmb;QACT,CAAC,CAAC,CAAC;QACHtmB,IAAI,CAAC6d,cAAc,GAAGhZ,MAAM;MAC9B,CAAC,MAAM;QACLA,MAAM,GAAGoB,MAAM,CAACkI,MAAM,CAAC,CAAC,CAAC,EAAEnO,IAAI,CAAC6d,cAAc,CAAC;MACjD,CAAC,CAAC;;MAGF,IAAI7d,IAAI,CAAC6B,QAAQ,CAAC6T,YAAY,EAAE;QAC9B7Q,MAAM,CAACgH,KAAK,GAAGhH,MAAM,CAACgH,KAAK,CAAC7I,MAAM,CAACwL,IAAI,IAAI;UACzC,IAAI+X,MAAM,GAAG5O,QAAQ,CAACnJ,IAAI,CAACb,EAAE,CAAC;UAC9B,OAAO,EAAE4Y,MAAM,IAAIvmB,IAAI,CAAC6L,KAAK,CAACxK,OAAO,CAACklB,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;QACvD,CAAC,CAAC;MACJ;MAEA,OAAO1hB,MAAM;IACf;IACA;AACH;AACA;AACA;AACA;;IAGG6e,cAAc,CAAC8C,eAAe,GAAG,IAAI,EAAE;MACrC,IAAI7iB,CAAC,EAAEmF,CAAC,EAAE2d,CAAC,EAAEzlB,CAAC,EAAEya,QAAQ,EAAE1G,SAAS,EAAE2R,IAAI,EAAEC,iBAAiB,EAAEC,YAAY;MAC1E,IAAIzR,MAAM;MACV,MAAM0R,MAAM,GAAG,CAAC,CAAC;MACjB,MAAMC,YAAY,GAAG,EAAE;MACvB,IAAI9mB,IAAI,GAAG,IAAI;MACf,IAAIgM,KAAK,GAAGhM,IAAI,CAACuiB,UAAU,EAAE;MAC7B,MAAMwE,UAAU,GAAG/a,KAAK,KAAKhM,IAAI,CAACmiB,SAAS,IAAInW,KAAK,IAAI,EAAE,IAAIhM,IAAI,CAACmiB,SAAS,IAAI,IAAI;MACpF,IAAI6E,OAAO,GAAGhnB,IAAI,CAACsL,MAAM,CAACU,KAAK,CAAC;MAChC,IAAIib,aAAa,GAAG,IAAI;MACxB,IAAIC,aAAa,GAAGlnB,IAAI,CAAC6B,QAAQ,CAAC0T,UAAU,IAAI,KAAK;MACrD,IAAIiH,gBAAgB,GAAGxc,IAAI,CAACwc,gBAAgB;MAE5C,IAAIuK,UAAU,EAAE;QACdE,aAAa,GAAGjnB,IAAI,CAACge,YAAY;QAEjC,IAAIiJ,aAAa,EAAE;UACjBL,YAAY,GAAGK,aAAa,CAACE,OAAO,CAAC,cAAc,CAAC;QACtD;MACF,CAAC,CAAC;;MAGFnmB,CAAC,GAAGgmB,OAAO,CAACnb,KAAK,CAAC3K,MAAM;MAExB,IAAI,OAAOlB,IAAI,CAAC6B,QAAQ,CAAC2T,UAAU,KAAK,QAAQ,EAAE;QAChDxU,CAAC,GAAGsD,IAAI,CAACoF,GAAG,CAAC1I,CAAC,EAAEhB,IAAI,CAAC6B,QAAQ,CAAC2T,UAAU,CAAC;MAC3C;MAEA,IAAIxU,CAAC,GAAG,CAAC,EAAE;QACTkmB,aAAa,GAAG,IAAI;MACtB,CAAC,CAAC;;MAGF,KAAKvjB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG3C,CAAC,EAAE2C,CAAC,EAAE,EAAE;QACtB;QACA,IAAI6K,IAAI,GAAGwY,OAAO,CAACnb,KAAK,CAAClI,CAAC,CAAC;QAC3B,IAAI,CAAC6K,IAAI,EAAE;QACX,IAAI4Y,SAAS,GAAG5Y,IAAI,CAACb,EAAE;QACvB,IAAI6M,MAAM,GAAGxa,IAAI,CAACwC,OAAO,CAAC4kB,SAAS,CAAC;QACpC,IAAI5M,MAAM,KAAKrZ,SAAS,EAAE;QAC1B,IAAIkmB,QAAQ,GAAGzP,QAAQ,CAACwP,SAAS,CAAC;QAClC,IAAIE,SAAS,GAAGtnB,IAAI,CAACunB,SAAS,CAACF,QAAQ,EAAE,IAAI,CAAC,CAAC,CAAC;;QAEhD,IAAI,CAACrnB,IAAI,CAAC6B,QAAQ,CAAC6T,YAAY,EAAE;UAC/B4R,SAAS,CAAC3W,SAAS,CAACwV,MAAM,CAAC,UAAU,EAAEnmB,IAAI,CAAC6L,KAAK,CAAC2b,QAAQ,CAACH,QAAQ,CAAC,CAAC;QACvE;QAEA5L,QAAQ,GAAGjB,MAAM,CAACxa,IAAI,CAAC6B,QAAQ,CAACsU,aAAa,CAAC,IAAI,EAAE;QACpDpB,SAAS,GAAG1S,KAAK,CAACC,OAAO,CAACmZ,QAAQ,CAAC,GAAGA,QAAQ,GAAG,CAACA,QAAQ,CAAC;QAE3D,KAAK3S,CAAC,GAAG,CAAC,EAAE2d,CAAC,GAAG1R,SAAS,IAAIA,SAAS,CAAC7T,MAAM,EAAE4H,CAAC,GAAG2d,CAAC,EAAE3d,CAAC,EAAE,EAAE;UACzD2S,QAAQ,GAAG1G,SAAS,CAACjM,CAAC,CAAC;UAEvB,IAAI,CAAC9I,IAAI,CAAC+U,SAAS,CAACtS,cAAc,CAACgZ,QAAQ,CAAC,EAAE;YAC5CA,QAAQ,GAAG,EAAE;UACf;UAEA,IAAIgM,cAAc,GAAGZ,MAAM,CAACpL,QAAQ,CAAC;UAErC,IAAIgM,cAAc,KAAKtmB,SAAS,EAAE;YAChCsmB,cAAc,GAAGvY,QAAQ,CAACwY,sBAAsB,EAAE;YAClDZ,YAAY,CAAChmB,IAAI,CAAC2a,QAAQ,CAAC;UAC7B,CAAC,CAAC;;UAGF,IAAI3S,CAAC,GAAG,CAAC,EAAE;YACTwe,SAAS,GAAGA,SAAS,CAACpU,SAAS,CAAC,IAAI,CAAC;YACrCpB,OAAO,CAACwV,SAAS,EAAE;cACjB3Z,EAAE,EAAE6M,MAAM,CAACmN,GAAG,GAAG,SAAS,GAAG7e,CAAC;cAC9B,eAAe,EAAE;YACnB,CAAC,CAAC;YACFwe,SAAS,CAAC3W,SAAS,CAACjJ,GAAG,CAAC,WAAW,CAAC;YACpCkJ,aAAa,CAAC0W,SAAS,EAAE,QAAQ,CAAC,CAAC,CAAC;;YAEpC,IAAItnB,IAAI,CAACge,YAAY,IAAIhe,IAAI,CAACge,YAAY,CAACjD,OAAO,CAAC1W,KAAK,IAAI+iB,SAAS,EAAE;cACrE,IAAIR,YAAY,IAAIA,YAAY,CAAC7L,OAAO,CAACG,KAAK,KAAKO,QAAQ,CAACmM,QAAQ,EAAE,EAAE;gBACtEX,aAAa,GAAGK,SAAS;cAC3B;YACF;UACF;UAEAG,cAAc,CAACtU,WAAW,CAACmU,SAAS,CAAC;UACrCT,MAAM,CAACpL,QAAQ,CAAC,GAAGgM,cAAc;QACnC;MACF,CAAC,CAAC;;MAGF,IAAIznB,IAAI,CAAC6B,QAAQ,CAAC4U,iBAAiB,EAAE;QACnCqQ,YAAY,CAACjf,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;UAC1B,MAAM8f,KAAK,GAAG7nB,IAAI,CAAC+U,SAAS,CAACjN,CAAC,CAAC;UAC/B,MAAMggB,KAAK,GAAG9nB,IAAI,CAAC+U,SAAS,CAAChN,CAAC,CAAC;UAC/B,MAAMggB,OAAO,GAAGF,KAAK,IAAIA,KAAK,CAACG,MAAM,IAAI,CAAC;UAC1C,MAAMC,OAAO,GAAGH,KAAK,IAAIA,KAAK,CAACE,MAAM,IAAI,CAAC;UAC1C,OAAOD,OAAO,GAAGE,OAAO;QAC1B,CAAC,CAAC;MACJ,CAAC,CAAC;;MAGFvB,IAAI,GAAGxX,QAAQ,CAACwY,sBAAsB,EAAE;MACxCjc,SAAS,CAACqb,YAAY,EAAErL,QAAQ,IAAI;QAClC,IAAIgM,cAAc,GAAGZ,MAAM,CAACpL,QAAQ,CAAC;QACrC,IAAI,CAACgM,cAAc,IAAI,CAACA,cAAc,CAAC9L,QAAQ,CAACza,MAAM,EAAE;QACxD,IAAIgnB,aAAa,GAAGloB,IAAI,CAAC+U,SAAS,CAAC0G,QAAQ,CAAC;QAE5C,IAAIyM,aAAa,KAAK/mB,SAAS,EAAE;UAC/B,IAAIgnB,aAAa,GAAGjZ,QAAQ,CAACwY,sBAAsB,EAAE;UACrD,IAAIU,MAAM,GAAGpoB,IAAI,CAAC0X,MAAM,CAAC,iBAAiB,EAAEwQ,aAAa,CAAC;UAC1DrO,MAAM,CAACsO,aAAa,EAAEC,MAAM,CAAC;UAC7BvO,MAAM,CAACsO,aAAa,EAAEV,cAAc,CAAC;UACrC,IAAIY,UAAU,GAAGroB,IAAI,CAAC0X,MAAM,CAAC,UAAU,EAAE;YACvCwD,KAAK,EAAEgN,aAAa;YACpB1lB,OAAO,EAAE2lB;UACX,CAAC,CAAC;UACFtO,MAAM,CAAC6M,IAAI,EAAE2B,UAAU,CAAC;QAC1B,CAAC,MAAM;UACLxO,MAAM,CAAC6M,IAAI,EAAEe,cAAc,CAAC;QAC9B;MACF,CAAC,CAAC;MACFjL,gBAAgB,CAACpN,SAAS,GAAG,EAAE;MAC/ByK,MAAM,CAAC2C,gBAAgB,EAAEkK,IAAI,CAAC,CAAC,CAAC;;MAEhC,IAAI1mB,IAAI,CAAC6B,QAAQ,CAAC2Q,SAAS,EAAE;QAC3BkB,eAAe,CAAC8I,gBAAgB,CAAC;QAEjC,IAAIwK,OAAO,CAAChb,KAAK,CAAC9K,MAAM,IAAI8lB,OAAO,CAAC7a,MAAM,CAACjL,MAAM,EAAE;UACjDuK,SAAS,CAACub,OAAO,CAAC7a,MAAM,EAAEmc,GAAG,IAAI;YAC/B9V,SAAS,CAACgK,gBAAgB,EAAE8L,GAAG,CAACjd,KAAK,CAAC;UACxC,CAAC,CAAC;QACJ;MACF,CAAC,CAAC;;MAGF,IAAIkd,YAAY,GAAGC,QAAQ,IAAI;QAC7B,IAAInZ,OAAO,GAAGrP,IAAI,CAAC0X,MAAM,CAAC8Q,QAAQ,EAAE;UAClC5jB,KAAK,EAAEoH;QACT,CAAC,CAAC;QAEF,IAAIqD,OAAO,EAAE;UACX6X,aAAa,GAAG,IAAI;UACpB1K,gBAAgB,CAACiM,YAAY,CAACpZ,OAAO,EAAEmN,gBAAgB,CAAClN,UAAU,CAAC;QACrE;QAEA,OAAOD,OAAO;MAChB,CAAC,CAAC,CAAC;;MAGH,IAAIrP,IAAI,CAACiY,OAAO,EAAE;QAChBsQ,YAAY,CAAC,SAAS,CAAC,CAAC,CAAC;MAC3B,CAAC,MAAM,IAAI,CAACvoB,IAAI,CAAC6B,QAAQ,CAAC4V,UAAU,CAAC3D,IAAI,CAAC9T,IAAI,EAAEgM,KAAK,CAAC,EAAE;QACtDuc,YAAY,CAAC,aAAa,CAAC,CAAC,CAAC;MAC/B,CAAC,MAAM,IAAIvB,OAAO,CAACnb,KAAK,CAAC3K,MAAM,KAAK,CAAC,EAAE;QACrCqnB,YAAY,CAAC,YAAY,CAAC;MAC5B,CAAC,CAAC;;MAGF5B,iBAAiB,GAAG3mB,IAAI,CAAC0oB,SAAS,CAAC1c,KAAK,CAAC;MAEzC,IAAI2a,iBAAiB,EAAE;QACrBxR,MAAM,GAAGoT,YAAY,CAAC,eAAe,CAAC;MACxC,CAAC,CAAC;;MAGFvoB,IAAI,CAAC4d,UAAU,GAAGoJ,OAAO,CAACnb,KAAK,CAAC3K,MAAM,GAAG,CAAC,IAAIylB,iBAAiB;MAE/D,IAAIO,aAAa,EAAE;QACjB,IAAIF,OAAO,CAACnb,KAAK,CAAC3K,MAAM,GAAG,CAAC,EAAE;UAC5B,IAAI,CAAC+lB,aAAa,IAAIjnB,IAAI,CAAC6B,QAAQ,CAACgV,IAAI,KAAK,QAAQ,IAAI7W,IAAI,CAAC6L,KAAK,CAAC,CAAC,CAAC,IAAI1K,SAAS,EAAE;YACnF8lB,aAAa,GAAGjnB,IAAI,CAACunB,SAAS,CAACvnB,IAAI,CAAC6L,KAAK,CAAC,CAAC,CAAC,CAAC;UAC/C;UAEA,IAAI,CAAC2Q,gBAAgB,CAACpL,QAAQ,CAAC6V,aAAa,CAAC,EAAE;YAC7C,IAAI0B,YAAY,GAAG,CAAC;YAEpB,IAAIxT,MAAM,IAAI,CAACnV,IAAI,CAAC6B,QAAQ,CAAC+T,aAAa,EAAE;cAC1C+S,YAAY,GAAG,CAAC;YAClB;YAEA1B,aAAa,GAAGjnB,IAAI,CAAC4oB,UAAU,EAAE,CAACD,YAAY,CAAC;UACjD;QACF,CAAC,MAAM,IAAIxT,MAAM,EAAE;UACjB8R,aAAa,GAAG9R,MAAM;QACxB;QAEA,IAAIqR,eAAe,IAAI,CAACxmB,IAAI,CAACid,MAAM,EAAE;UACnCjd,IAAI,CAACijB,IAAI,EAAE;UACXjjB,IAAI,CAACulB,cAAc,CAAC0B,aAAa,EAAE,MAAM,CAAC;QAC5C;QAEAjnB,IAAI,CAACojB,eAAe,CAAC6D,aAAa,CAAC;MACrC,CAAC,MAAM;QACLjnB,IAAI,CAACqkB,iBAAiB,EAAE;QAExB,IAAImC,eAAe,IAAIxmB,IAAI,CAACid,MAAM,EAAE;UAClCjd,IAAI,CAACuhB,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;QACrB;MACF;IACF;IACA;AACH;AACA;AACA;;IAGGqH,UAAU,GAAG;MACX,OAAO,IAAI,CAACpM,gBAAgB,CAAC5I,gBAAgB,CAAC,mBAAmB,CAAC;IACpE;IACA;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IAGGqH,SAAS,CAAChO,IAAI,EAAE4b,YAAY,GAAG,KAAK,EAAE;MACpC,MAAM7oB,IAAI,GAAG,IAAI,CAAC,CAAC;MACnB;;MAEA,IAAIqC,KAAK,CAACC,OAAO,CAAC2K,IAAI,CAAC,EAAE;QACvBjN,IAAI,CAAC4hB,UAAU,CAAC3U,IAAI,EAAE4b,YAAY,CAAC;QACnC,OAAO,KAAK;MACd;MAEA,MAAM1mB,GAAG,GAAGwV,QAAQ,CAAC1K,IAAI,CAACjN,IAAI,CAAC6B,QAAQ,CAACuU,UAAU,CAAC,CAAC;MAEpD,IAAIjU,GAAG,KAAK,IAAI,IAAInC,IAAI,CAACwC,OAAO,CAACC,cAAc,CAACN,GAAG,CAAC,EAAE;QACpD,OAAO,KAAK;MACd;MAEA8K,IAAI,CAAC+a,MAAM,GAAG/a,IAAI,CAAC+a,MAAM,IAAI,EAAEhoB,IAAI,CAAC0c,KAAK;MACzCzP,IAAI,CAAC0a,GAAG,GAAG3nB,IAAI,CAAC8c,OAAO,GAAG,OAAO,GAAG7P,IAAI,CAAC+a,MAAM;MAC/ChoB,IAAI,CAACwC,OAAO,CAACL,GAAG,CAAC,GAAG8K,IAAI;MACxBjN,IAAI,CAACmiB,SAAS,GAAG,IAAI;MAErB,IAAI0G,YAAY,EAAE;QAChB7oB,IAAI,CAACke,WAAW,CAAC/b,GAAG,CAAC,GAAG0mB,YAAY;QACpC7oB,IAAI,CAACsB,OAAO,CAAC,YAAY,EAAEa,GAAG,EAAE8K,IAAI,CAAC;MACvC;MAEA,OAAO9K,GAAG;IACZ;IACA;AACH;AACA;AACA;;IAGGyf,UAAU,CAAC3U,IAAI,EAAE4b,YAAY,GAAG,KAAK,EAAE;MACrCpd,SAAS,CAACwB,IAAI,EAAE6b,GAAG,IAAI;QACrB,IAAI,CAAC7N,SAAS,CAAC6N,GAAG,EAAED,YAAY,CAAC;MACnC,CAAC,CAAC;IACJ;IACA;AACH;AACA;;IAGGE,cAAc,CAAC9b,IAAI,EAAE;MACnB,OAAO,IAAI,CAACgO,SAAS,CAAChO,IAAI,CAAC;IAC7B;IACA;AACH;AACA;AACA;AACA;;IAGG4U,mBAAmB,CAAC5U,IAAI,EAAE;MACxB,IAAI9K,GAAG,GAAGwV,QAAQ,CAAC1K,IAAI,CAAC,IAAI,CAACpL,QAAQ,CAAC2U,kBAAkB,CAAC,CAAC;MAC1D,IAAIrU,GAAG,KAAK,IAAI,EAAE,OAAO,KAAK;MAC9B8K,IAAI,CAAC+a,MAAM,GAAG/a,IAAI,CAAC+a,MAAM,IAAI,EAAE,IAAI,CAACtL,KAAK;MACzC,IAAI,CAAC3H,SAAS,CAAC5S,GAAG,CAAC,GAAG8K,IAAI;MAC1B,OAAO9K,GAAG;IACZ;IACA;AACH;AACA;AACA;AACA;;IAGG6mB,cAAc,CAACrb,EAAE,EAAEV,IAAI,EAAE;MACvB,IAAIgc,SAAS;MACbhc,IAAI,CAAC,IAAI,CAACpL,QAAQ,CAAC2U,kBAAkB,CAAC,GAAG7I,EAAE;MAE3C,IAAIsb,SAAS,GAAG,IAAI,CAACpH,mBAAmB,CAAC5U,IAAI,CAAC,EAAE;QAC9C,IAAI,CAAC3L,OAAO,CAAC,cAAc,EAAE2nB,SAAS,EAAEhc,IAAI,CAAC;MAC/C;IACF;IACA;AACH;AACA;AACA;;IAGGic,iBAAiB,CAACvb,EAAE,EAAE;MACpB,IAAI,IAAI,CAACoH,SAAS,CAACtS,cAAc,CAACkL,EAAE,CAAC,EAAE;QACrC,OAAO,IAAI,CAACoH,SAAS,CAACpH,EAAE,CAAC;QACzB,IAAI,CAACwb,UAAU,EAAE;QACjB,IAAI,CAAC7nB,OAAO,CAAC,iBAAiB,EAAEqM,EAAE,CAAC;MACrC;IACF;IACA;AACH;AACA;;IAGGyb,iBAAiB,GAAG;MAClB,IAAI,CAACrU,SAAS,GAAG,CAAC,CAAC;MACnB,IAAI,CAACoU,UAAU,EAAE;MACjB,IAAI,CAAC7nB,OAAO,CAAC,gBAAgB,CAAC;IAChC;IACA;AACH;AACA;AACA;AACA;AACA;;IAGG+nB,YAAY,CAAChlB,KAAK,EAAE4I,IAAI,EAAE;MACxB,MAAMjN,IAAI,GAAG,IAAI;MACjB,IAAIspB,QAAQ;MACZ,IAAIC,UAAU;MACd,MAAMC,SAAS,GAAG7R,QAAQ,CAACtT,KAAK,CAAC;MACjC,MAAMolB,SAAS,GAAG9R,QAAQ,CAAC1K,IAAI,CAACjN,IAAI,CAAC6B,QAAQ,CAACuU,UAAU,CAAC,CAAC,CAAC,CAAC;;MAE5D,IAAIoT,SAAS,KAAK,IAAI,EAAE;MACxB,MAAME,QAAQ,GAAG1pB,IAAI,CAACwC,OAAO,CAACgnB,SAAS,CAAC;MACxC,IAAIE,QAAQ,IAAIvoB,SAAS,EAAE;MAC3B,IAAI,OAAOsoB,SAAS,KAAK,QAAQ,EAAE,MAAM,IAAI5mB,KAAK,CAAC,kCAAkC,CAAC;MACtF,MAAM2X,MAAM,GAAGxa,IAAI,CAACunB,SAAS,CAACiC,SAAS,CAAC;MACxC,MAAMhb,IAAI,GAAGxO,IAAI,CAAC2pB,OAAO,CAACH,SAAS,CAAC;MACpCvc,IAAI,CAAC+a,MAAM,GAAG/a,IAAI,CAAC+a,MAAM,IAAI0B,QAAQ,CAAC1B,MAAM;MAC5C,OAAOhoB,IAAI,CAACwC,OAAO,CAACgnB,SAAS,CAAC,CAAC,CAAC;MAChC;;MAEAxpB,IAAI,CAAC4pB,YAAY,CAACH,SAAS,CAAC;MAC5BzpB,IAAI,CAACwC,OAAO,CAACinB,SAAS,CAAC,GAAGxc,IAAI,CAAC,CAAC;;MAEhC,IAAIuN,MAAM,EAAE;QACV,IAAIxa,IAAI,CAACwc,gBAAgB,CAACpL,QAAQ,CAACoJ,MAAM,CAAC,EAAE;UAC1C,MAAMqP,UAAU,GAAG7pB,IAAI,CAAC4e,OAAO,CAAC,QAAQ,EAAE3R,IAAI,CAAC;UAE/CmF,WAAW,CAACoI,MAAM,EAAEqP,UAAU,CAAC;UAE/B,IAAI7pB,IAAI,CAACge,YAAY,KAAKxD,MAAM,EAAE;YAChCxa,IAAI,CAACojB,eAAe,CAACyG,UAAU,CAAC;UAClC;QACF;QAEArP,MAAM,CAAC3J,MAAM,EAAE;MACjB,CAAC,CAAC;;MAGF,IAAIrC,IAAI,EAAE;QACR+a,UAAU,GAAGvpB,IAAI,CAAC6L,KAAK,CAACxK,OAAO,CAACmoB,SAAS,CAAC;QAE1C,IAAID,UAAU,KAAK,CAAC,CAAC,EAAE;UACrBvpB,IAAI,CAAC6L,KAAK,CAACzK,MAAM,CAACmoB,UAAU,EAAE,CAAC,EAAEE,SAAS,CAAC;QAC7C;QAEAH,QAAQ,GAAGtpB,IAAI,CAAC4e,OAAO,CAAC,MAAM,EAAE3R,IAAI,CAAC;QACrC,IAAIuB,IAAI,CAACmC,SAAS,CAACS,QAAQ,CAAC,QAAQ,CAAC,EAAEjB,UAAU,CAACmZ,QAAQ,EAAE,QAAQ,CAAC;QACrElX,WAAW,CAAC5D,IAAI,EAAE8a,QAAQ,CAAC;MAC7B,CAAC,CAAC;;MAGFtpB,IAAI,CAACmiB,SAAS,GAAG,IAAI;IACvB;IACA;AACH;AACA;AACA;;IAGG2H,YAAY,CAACzlB,KAAK,EAAEogB,MAAM,EAAE;MAC1B,MAAMzkB,IAAI,GAAG,IAAI;MACjBqE,KAAK,GAAGuT,QAAQ,CAACvT,KAAK,CAAC;MACvBrE,IAAI,CAAC4pB,YAAY,CAACvlB,KAAK,CAAC;MACxB,OAAOrE,IAAI,CAACke,WAAW,CAAC7Z,KAAK,CAAC;MAC9B,OAAOrE,IAAI,CAACwC,OAAO,CAAC6B,KAAK,CAAC;MAC1BrE,IAAI,CAACmiB,SAAS,GAAG,IAAI;MACrBniB,IAAI,CAACsB,OAAO,CAAC,eAAe,EAAE+C,KAAK,CAAC;MACpCrE,IAAI,CAAC+pB,UAAU,CAAC1lB,KAAK,EAAEogB,MAAM,CAAC;IAChC;IACA;AACH;AACA;;IAGGuF,YAAY,CAAChnB,MAAM,EAAE;MACnB,MAAMinB,WAAW,GAAG,CAACjnB,MAAM,IAAI,IAAI,CAACknB,WAAW,EAAEzc,IAAI,CAAC,IAAI,CAAC;MAC3D,IAAI,CAAC2K,cAAc,GAAG,CAAC,CAAC;MACxB,IAAI,CAAC8F,WAAW,GAAG,CAAC,CAAC;MACrB,IAAI,CAACiL,UAAU,EAAE;MACjB,MAAM5N,QAAQ,GAAG,CAAC,CAAC;MACnB9P,SAAS,CAAC,IAAI,CAACjJ,OAAO,EAAE,CAACgY,MAAM,EAAErY,GAAG,KAAK;QACvC,IAAI8nB,WAAW,CAACzP,MAAM,EAAErY,GAAG,CAAC,EAAE;UAC5BoZ,QAAQ,CAACpZ,GAAG,CAAC,GAAGqY,MAAM;QACxB;MACF,CAAC,CAAC;MACF,IAAI,CAAChY,OAAO,GAAG,IAAI,CAACwa,MAAM,CAACnR,KAAK,GAAG0P,QAAQ;MAC3C,IAAI,CAAC4G,SAAS,GAAG,IAAI;MACrB,IAAI,CAAC7gB,OAAO,CAAC,cAAc,CAAC;IAC9B;IACA;AACH;AACA;AACA;AACA;;IAGG4oB,WAAW,CAAC1P,MAAM,EAAEnW,KAAK,EAAE;MACzB,IAAI,IAAI,CAACwH,KAAK,CAACxK,OAAO,CAACgD,KAAK,CAAC,IAAI,CAAC,EAAE;QAClC,OAAO,IAAI;MACb;MAEA,OAAO,KAAK;IACd;IACA;AACH;AACA;AACA;AACA;;IAGGkjB,SAAS,CAACljB,KAAK,EAAE8Q,MAAM,GAAG,KAAK,EAAE;MAC/B,MAAMoR,MAAM,GAAG5O,QAAQ,CAACtT,KAAK,CAAC;MAC9B,IAAIkiB,MAAM,KAAK,IAAI,EAAE,OAAO,IAAI;MAChC,MAAM/L,MAAM,GAAG,IAAI,CAAChY,OAAO,CAAC+jB,MAAM,CAAC;MAEnC,IAAI/L,MAAM,IAAIrZ,SAAS,EAAE;QACvB,IAAIqZ,MAAM,CAAC2P,IAAI,EAAE;UACf,OAAO3P,MAAM,CAAC2P,IAAI;QACpB;QAEA,IAAIhV,MAAM,EAAE;UACV,OAAO,IAAI,CAACyJ,OAAO,CAAC,QAAQ,EAAEpE,MAAM,CAAC;QACvC;MACF;MAEA,OAAO,IAAI;IACb;IACA;AACH;AACA;AACA;AACA;;IAGG2I,WAAW,CAAC3I,MAAM,EAAE1M,SAAS,EAAEyK,IAAI,GAAG,QAAQ,EAAE;MAC9C,IAAIvY,IAAI,GAAG,IAAI;QACX0I,GAAG;MAEP,IAAI,CAAC8R,MAAM,EAAE;QACX,OAAO,IAAI;MACb;MAEA,IAAIjC,IAAI,IAAI,MAAM,EAAE;QAClB7P,GAAG,GAAG1I,IAAI,CAACkmB,eAAe,EAAE;MAC9B,CAAC,MAAM;QACLxd,GAAG,GAAG1I,IAAI,CAACwc,gBAAgB,CAAC5I,gBAAgB,CAAC,mBAAmB,CAAC;MACnE;MAEA,KAAK,IAAIjQ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG+E,GAAG,CAACxH,MAAM,EAAEyC,CAAC,EAAE,EAAE;QACnC,IAAI+E,GAAG,CAAC/E,CAAC,CAAC,IAAI6W,MAAM,EAAE;UACpB;QACF;QAEA,IAAI1M,SAAS,GAAG,CAAC,EAAE;UACjB,OAAOpF,GAAG,CAAC/E,CAAC,GAAG,CAAC,CAAC;QACnB;QAEA,OAAO+E,GAAG,CAAC/E,CAAC,GAAG,CAAC,CAAC;MACnB;MAEA,OAAO,IAAI;IACb;IACA;AACH;AACA;AACA;AACA;;IAGGgmB,OAAO,CAACnb,IAAI,EAAE;MACZ,IAAI,OAAOA,IAAI,IAAI,QAAQ,EAAE;QAC3B,OAAOA,IAAI;MACb;MAEA,IAAInK,KAAK,GAAGsT,QAAQ,CAACnJ,IAAI,CAAC;MAC1B,OAAOnK,KAAK,KAAK,IAAI,GAAG,IAAI,CAACkY,OAAO,CAAChN,aAAa,CAAE,gBAAeqK,UAAU,CAACvV,KAAK,CAAE,IAAG,CAAC,GAAG,IAAI;IAClG;IACA;AACH;AACA;AACA;AACA;;IAGGsgB,QAAQ,CAAC3I,MAAM,EAAEyI,MAAM,EAAE;MACvB,IAAIzkB,IAAI,GAAG,IAAI;MACf,IAAI6L,KAAK,GAAGxJ,KAAK,CAACC,OAAO,CAAC0Z,MAAM,CAAC,GAAGA,MAAM,GAAG,CAACA,MAAM,CAAC;MACrDnQ,KAAK,GAAGA,KAAK,CAAC7I,MAAM,CAAConB,CAAC,IAAIpqB,IAAI,CAAC6L,KAAK,CAACxK,OAAO,CAAC+oB,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;MACvD,MAAMC,SAAS,GAAGxe,KAAK,CAACA,KAAK,CAAC3K,MAAM,GAAG,CAAC,CAAC;MACzC2K,KAAK,CAACvL,OAAO,CAACkO,IAAI,IAAI;QACpBxO,IAAI,CAACsqB,SAAS,GAAG9b,IAAI,KAAK6b,SAAS;QACnCrqB,IAAI,CAAC2iB,OAAO,CAACnU,IAAI,EAAEiW,MAAM,CAAC;MAC5B,CAAC,CAAC;IACJ;IACA;AACH;AACA;AACA;AACA;;IAGG9B,OAAO,CAACte,KAAK,EAAEogB,MAAM,EAAE;MACrB,IAAItkB,MAAM,GAAGskB,MAAM,GAAG,EAAE,GAAG,CAAC,QAAQ,EAAE,gBAAgB,CAAC;MACvDpM,eAAe,CAAC,IAAI,EAAElY,MAAM,EAAE,MAAM;QAClC,IAAIqO,IAAI,EAAE+b,OAAO;QACjB,MAAMvqB,IAAI,GAAG,IAAI;QACjB,MAAM6e,SAAS,GAAG7e,IAAI,CAAC6B,QAAQ,CAACgV,IAAI;QACpC,MAAM0P,MAAM,GAAG5O,QAAQ,CAACtT,KAAK,CAAC;QAE9B,IAAIkiB,MAAM,IAAIvmB,IAAI,CAAC6L,KAAK,CAACxK,OAAO,CAACklB,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE;UAC/C,IAAI1H,SAAS,KAAK,QAAQ,EAAE;YAC1B7e,IAAI,CAACuhB,KAAK,EAAE;UACd;UAEA,IAAI1C,SAAS,KAAK,QAAQ,IAAI,CAAC7e,IAAI,CAAC6B,QAAQ,CAAC8T,UAAU,EAAE;YACvD;UACF;QACF;QAEA,IAAI4Q,MAAM,KAAK,IAAI,IAAI,CAACvmB,IAAI,CAACwC,OAAO,CAACC,cAAc,CAAC8jB,MAAM,CAAC,EAAE;QAC7D,IAAI1H,SAAS,KAAK,QAAQ,EAAE7e,IAAI,CAAC0kB,KAAK,CAACD,MAAM,CAAC;QAC9C,IAAI5F,SAAS,KAAK,OAAO,IAAI7e,IAAI,CAACwqB,MAAM,EAAE,EAAE;QAC5Chc,IAAI,GAAGxO,IAAI,CAAC4e,OAAO,CAAC,MAAM,EAAE5e,IAAI,CAACwC,OAAO,CAAC+jB,MAAM,CAAC,CAAC;QAEjD,IAAIvmB,IAAI,CAACuc,OAAO,CAACnL,QAAQ,CAAC5C,IAAI,CAAC,EAAE;UAC/B;UACAA,IAAI,GAAGA,IAAI,CAAC0E,SAAS,CAAC,IAAI,CAAC;QAC7B;QAEAqX,OAAO,GAAGvqB,IAAI,CAACwqB,MAAM,EAAE;QACvBxqB,IAAI,CAAC6L,KAAK,CAACzK,MAAM,CAACpB,IAAI,CAAC+d,QAAQ,EAAE,CAAC,EAAEwI,MAAM,CAAC;QAC3CvmB,IAAI,CAACyqB,aAAa,CAACjc,IAAI,CAAC;QAExB,IAAIxO,IAAI,CAACyd,OAAO,EAAE;UAChB;UACA,IAAI,CAACzd,IAAI,CAACsqB,SAAS,IAAItqB,IAAI,CAAC6B,QAAQ,CAAC6T,YAAY,EAAE;YACjD,IAAI8E,MAAM,GAAGxa,IAAI,CAACunB,SAAS,CAAChB,MAAM,CAAC;YACnC,IAAIrD,IAAI,GAAGljB,IAAI,CAACmjB,WAAW,CAAC3I,MAAM,EAAE,CAAC,CAAC;YAEtC,IAAI0I,IAAI,EAAE;cACRljB,IAAI,CAACojB,eAAe,CAACF,IAAI,CAAC;YAC5B;UACF,CAAC,CAAC;UACF;;UAGA,IAAI,CAACljB,IAAI,CAACsqB,SAAS,IAAI,CAACtqB,IAAI,CAAC6B,QAAQ,CAACqiB,gBAAgB,EAAE;YACtDlkB,IAAI,CAAC0jB,cAAc,CAAC1jB,IAAI,CAACud,SAAS,IAAIsB,SAAS,KAAK,QAAQ,CAAC;UAC/D,CAAC,CAAC;;UAGF,IAAI7e,IAAI,CAAC6B,QAAQ,CAACqiB,gBAAgB,IAAI,KAAK,IAAIlkB,IAAI,CAACwqB,MAAM,EAAE,EAAE;YAC5DxqB,IAAI,CAACuhB,KAAK,EAAE;UACd,CAAC,MAAM,IAAI,CAACvhB,IAAI,CAACsqB,SAAS,EAAE;YAC1BtqB,IAAI,CAAC+gB,gBAAgB,EAAE;UACzB;UAEA/gB,IAAI,CAACsB,OAAO,CAAC,UAAU,EAAEilB,MAAM,EAAE/X,IAAI,CAAC;UAEtC,IAAI,CAACxO,IAAI,CAACsqB,SAAS,EAAE;YACnBtqB,IAAI,CAACqhB,mBAAmB,CAAC;cACvBoD,MAAM,EAAEA;YACV,CAAC,CAAC;UACJ;QACF;QAEA,IAAI,CAACzkB,IAAI,CAACsqB,SAAS,IAAI,CAACC,OAAO,IAAIvqB,IAAI,CAACwqB,MAAM,EAAE,EAAE;UAChDxqB,IAAI,CAAC6gB,UAAU,EAAE;UACjB7gB,IAAI,CAACohB,YAAY,EAAE;QACrB;MACF,CAAC,CAAC;IACJ;IACA;AACH;AACA;AACA;AACA;;IAGG2I,UAAU,CAACvb,IAAI,GAAG,IAAI,EAAEiW,MAAM,EAAE;MAC9B,MAAMzkB,IAAI,GAAG,IAAI;MACjBwO,IAAI,GAAGxO,IAAI,CAAC2pB,OAAO,CAACnb,IAAI,CAAC;MACzB,IAAI,CAACA,IAAI,EAAE;MACX,IAAI7K,CAAC,EAAE0hB,GAAG;MACV,MAAMhhB,KAAK,GAAGmK,IAAI,CAACuM,OAAO,CAAC1W,KAAK;MAChCV,CAAC,GAAG+N,SAAS,CAAClD,IAAI,CAAC;MACnBA,IAAI,CAACqC,MAAM,EAAE;MAEb,IAAIrC,IAAI,CAACmC,SAAS,CAACS,QAAQ,CAAC,QAAQ,CAAC,EAAE;QACrCiU,GAAG,GAAGrlB,IAAI,CAACie,WAAW,CAAC5c,OAAO,CAACmN,IAAI,CAAC;QACpCxO,IAAI,CAACie,WAAW,CAAC7c,MAAM,CAACikB,GAAG,EAAE,CAAC,CAAC;QAC/BzU,aAAa,CAACpC,IAAI,EAAE,QAAQ,CAAC;MAC/B;MAEAxO,IAAI,CAAC6L,KAAK,CAACzK,MAAM,CAACuC,CAAC,EAAE,CAAC,CAAC;MACvB3D,IAAI,CAACmiB,SAAS,GAAG,IAAI;MAErB,IAAI,CAACniB,IAAI,CAAC6B,QAAQ,CAACqT,OAAO,IAAIlV,IAAI,CAACke,WAAW,CAACzb,cAAc,CAAC4B,KAAK,CAAC,EAAE;QACpErE,IAAI,CAAC8pB,YAAY,CAACzlB,KAAK,EAAEogB,MAAM,CAAC;MAClC;MAEA,IAAI9gB,CAAC,GAAG3D,IAAI,CAAC+d,QAAQ,EAAE;QACrB/d,IAAI,CAACgkB,QAAQ,CAAChkB,IAAI,CAAC+d,QAAQ,GAAG,CAAC,CAAC;MAClC;MAEA/d,IAAI,CAACqhB,mBAAmB,CAAC;QACvBoD,MAAM,EAAEA;MACV,CAAC,CAAC;MACFzkB,IAAI,CAACohB,YAAY,EAAE;MACnBphB,IAAI,CAAC+gB,gBAAgB,EAAE;MACvB/gB,IAAI,CAACsB,OAAO,CAAC,aAAa,EAAE+C,KAAK,EAAEmK,IAAI,CAAC;IAC1C;IACA;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IAGGoU,UAAU,CAAChe,KAAK,GAAG,IAAI,EAAExE,QAAQ,GAAG,MAAM,CAAC,CAAC,EAAE;MAC5C;MACA,IAAIa,SAAS,CAACC,MAAM,KAAK,CAAC,EAAE;QAC1Bd,QAAQ,GAAGa,SAAS,CAAC,CAAC,CAAC;MACzB;MAEA,IAAI,OAAOb,QAAQ,IAAI,UAAU,EAAE;QACjCA,QAAQ,GAAG,MAAM,CAAC,CAAC;MACrB;MAEA,IAAIJ,IAAI,GAAG,IAAI;MACf,IAAI0qB,KAAK,GAAG1qB,IAAI,CAAC+d,QAAQ;MACzB,IAAI4M,MAAM;MACV/lB,KAAK,GAAGA,KAAK,IAAI5E,IAAI,CAACuiB,UAAU,EAAE;MAElC,IAAI,CAACviB,IAAI,CAAC0oB,SAAS,CAAC9jB,KAAK,CAAC,EAAE;QAC1BxE,QAAQ,EAAE;QACV,OAAO,KAAK;MACd;MAEAJ,IAAI,CAAC4qB,IAAI,EAAE;MACX,IAAIC,OAAO,GAAG,KAAK;MAEnB,IAAI1V,MAAM,GAAGlI,IAAI,IAAI;QACnBjN,IAAI,CAAC8qB,MAAM,EAAE;QACb,IAAI,CAAC7d,IAAI,IAAI,OAAOA,IAAI,KAAK,QAAQ,EAAE,OAAO7M,QAAQ,EAAE;QACxD,IAAIiE,KAAK,GAAGsT,QAAQ,CAAC1K,IAAI,CAACjN,IAAI,CAAC6B,QAAQ,CAACuU,UAAU,CAAC,CAAC;QAEpD,IAAI,OAAO/R,KAAK,KAAK,QAAQ,EAAE;UAC7B,OAAOjE,QAAQ,EAAE;QACnB;QAEAJ,IAAI,CAACskB,eAAe,EAAE;QACtBtkB,IAAI,CAACib,SAAS,CAAChO,IAAI,EAAE,IAAI,CAAC;QAC1BjN,IAAI,CAACgkB,QAAQ,CAAC0G,KAAK,CAAC;QACpB1qB,IAAI,CAAC2iB,OAAO,CAACte,KAAK,CAAC;QACnBjE,QAAQ,CAAC6M,IAAI,CAAC;QACd4d,OAAO,GAAG,IAAI;MAChB,CAAC;MAED,IAAI,OAAO7qB,IAAI,CAAC6B,QAAQ,CAACsT,MAAM,KAAK,UAAU,EAAE;QAC9CwV,MAAM,GAAG3qB,IAAI,CAAC6B,QAAQ,CAACsT,MAAM,CAACrB,IAAI,CAAC,IAAI,EAAElP,KAAK,EAAEuQ,MAAM,CAAC;MACzD,CAAC,MAAM;QACLwV,MAAM,GAAG;UACP,CAAC3qB,IAAI,CAAC6B,QAAQ,CAACwU,UAAU,GAAGzR,KAAK;UACjC,CAAC5E,IAAI,CAAC6B,QAAQ,CAACuU,UAAU,GAAGxR;QAC9B,CAAC;MACH;MAEA,IAAI,CAACimB,OAAO,EAAE;QACZ1V,MAAM,CAACwV,MAAM,CAAC;MAChB;MAEA,OAAO,IAAI;IACb;IACA;AACH;AACA;;IAGGrJ,YAAY,GAAG;MACb,IAAIthB,IAAI,GAAG,IAAI;MACfA,IAAI,CAACmiB,SAAS,GAAG,IAAI;MAErB,IAAIniB,IAAI,CAACyd,OAAO,EAAE;QAChBzd,IAAI,CAAC2kB,QAAQ,CAAC3kB,IAAI,CAAC6L,KAAK,CAAC;MAC3B;MAEA7L,IAAI,CAACqhB,mBAAmB,EAAE;MAC1BrhB,IAAI,CAACohB,YAAY,EAAE;IACrB;IACA;AACH;AACA;AACA;;IAGGA,YAAY,GAAG;MACb,MAAMphB,IAAI,GAAG,IAAI;MACjBA,IAAI,CAAC+qB,oBAAoB,EAAE;MAC3B,MAAMP,MAAM,GAAGxqB,IAAI,CAACwqB,MAAM,EAAE;MAC5B,MAAMlN,QAAQ,GAAGtd,IAAI,CAACsd,QAAQ;MAC9Btd,IAAI,CAACmR,OAAO,CAACR,SAAS,CAACwV,MAAM,CAAC,KAAK,EAAEnmB,IAAI,CAAC6c,GAAG,CAAC;MAC9C,MAAMmO,cAAc,GAAGhrB,IAAI,CAACmR,OAAO,CAACR,SAAS;MAC7Cqa,cAAc,CAAC7E,MAAM,CAAC,OAAO,EAAEnmB,IAAI,CAACud,SAAS,CAAC;MAC9CyN,cAAc,CAAC7E,MAAM,CAAC,UAAU,EAAEnmB,IAAI,CAACkd,UAAU,CAAC;MAClD8N,cAAc,CAAC7E,MAAM,CAAC,UAAU,EAAEnmB,IAAI,CAACmd,UAAU,CAAC;MAClD6N,cAAc,CAAC7E,MAAM,CAAC,SAAS,EAAE,CAACnmB,IAAI,CAACqd,OAAO,CAAC;MAC/C2N,cAAc,CAAC7E,MAAM,CAAC,QAAQ,EAAE7I,QAAQ,CAAC;MACzC0N,cAAc,CAAC7E,MAAM,CAAC,MAAM,EAAEqE,MAAM,CAAC;MACrCQ,cAAc,CAAC7E,MAAM,CAAC,cAAc,EAAEnmB,IAAI,CAACud,SAAS,IAAI,CAACvd,IAAI,CAACwd,aAAa,CAAC;MAC5EwN,cAAc,CAAC7E,MAAM,CAAC,iBAAiB,EAAEnmB,IAAI,CAACid,MAAM,CAAC;MACrD+N,cAAc,CAAC7E,MAAM,CAAC,aAAa,EAAE1U,aAAa,CAACzR,IAAI,CAACwC,OAAO,CAAC,CAAC;MACjEwoB,cAAc,CAAC7E,MAAM,CAAC,WAAW,EAAEnmB,IAAI,CAAC6L,KAAK,CAAC3K,MAAM,GAAG,CAAC,CAAC;IAC3D;IACA;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;IAGG6pB,oBAAoB,GAAG;MACrB,IAAI/qB,IAAI,GAAG,IAAI;MAEf,IAAI,CAACA,IAAI,CAAC4E,KAAK,CAACqmB,QAAQ,EAAE;QACxB;MACF;MAEAjrB,IAAI,CAACqd,OAAO,GAAGrd,IAAI,CAAC4E,KAAK,CAACqmB,QAAQ,CAACC,KAAK;MACxClrB,IAAI,CAACod,SAAS,GAAG,CAACpd,IAAI,CAACqd,OAAO;IAChC;IACA;AACH;AACA;AACA;AACA;AACA;;IAGGmN,MAAM,GAAG;MACP,OAAO,IAAI,CAAC3oB,QAAQ,CAAC4T,QAAQ,KAAK,IAAI,IAAI,IAAI,CAAC5J,KAAK,CAAC3K,MAAM,IAAI,IAAI,CAACW,QAAQ,CAAC4T,QAAQ;IACvF;IACA;AACH;AACA;AACA;AACA;;IAGG4L,mBAAmB,CAAC8J,IAAI,GAAG,CAAC,CAAC,EAAE;MAC7B,MAAMnrB,IAAI,GAAG,IAAI;MACjB,IAAIwa,MAAM,EAAE4E,KAAK;MACjB,MAAMgM,YAAY,GAAGprB,IAAI,CAAC4E,KAAK,CAAC2K,aAAa,CAAC,kBAAkB,CAAC;MAEjE,IAAIvP,IAAI,CAAC4c,aAAa,EAAE;QACtB,MAAMrB,QAAQ,GAAG,EAAE;QACnB,MAAM8P,YAAY,GAAGrrB,IAAI,CAAC4E,KAAK,CAACgP,gBAAgB,CAAC,gBAAgB,CAAC,CAAC1S,MAAM;QAEzE,SAASoqB,WAAW,CAAChE,SAAS,EAAEjjB,KAAK,EAAE+a,KAAK,EAAE;UAC5C,IAAI,CAACkI,SAAS,EAAE;YACdA,SAAS,GAAGzY,MAAM,CAAC,iBAAiB,GAAGgJ,WAAW,CAACxT,KAAK,CAAC,GAAG,IAAI,GAAGwT,WAAW,CAACuH,KAAK,CAAC,GAAG,WAAW,CAAC;UACtG,CAAC,CAAC;UACF;;UAGA,IAAIkI,SAAS,IAAI8D,YAAY,EAAE;YAC7BprB,IAAI,CAAC4E,KAAK,CAACiV,MAAM,CAACyN,SAAS,CAAC;UAC9B;UAEA/L,QAAQ,CAACza,IAAI,CAACwmB,SAAS,CAAC,CAAC,CAAC;UAC1B;;UAEA,IAAIA,SAAS,IAAI8D,YAAY,IAAIC,YAAY,GAAG,CAAC,EAAE;YACjD/D,SAAS,CAAC/L,QAAQ,GAAG,IAAI;UAC3B;UAEA,OAAO+L,SAAS;QAClB,CAAC,CAAC;;QAGFtnB,IAAI,CAAC4E,KAAK,CAACgP,gBAAgB,CAAC,gBAAgB,CAAC,CAACtT,OAAO,CAACgnB,SAAS,IAAI;UACjEA,SAAS,CAAC/L,QAAQ,GAAG,KAAK;QAC5B,CAAC,CAAC,CAAC,CAAC;;QAEJ,IAAIvb,IAAI,CAAC6L,KAAK,CAAC3K,MAAM,IAAI,CAAC,IAAIlB,IAAI,CAAC6B,QAAQ,CAACgV,IAAI,IAAI,QAAQ,EAAE;UAC5DyU,WAAW,CAACF,YAAY,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;QACrC,CAAC,MAAM;UACLprB,IAAI,CAAC6L,KAAK,CAACvL,OAAO,CAAC+D,KAAK,IAAI;YAC1BmW,MAAM,GAAGxa,IAAI,CAACwC,OAAO,CAAC6B,KAAK,CAAC;YAC5B+a,KAAK,GAAG5E,MAAM,CAACxa,IAAI,CAAC6B,QAAQ,CAACwU,UAAU,CAAC,IAAI,EAAE;YAE9C,IAAIkF,QAAQ,CAACiM,QAAQ,CAAChN,MAAM,CAACc,OAAO,CAAC,EAAE;cACrC,MAAMiQ,SAAS,GAAGvrB,IAAI,CAAC4E,KAAK,CAAC2K,aAAa,CAAE,iBAAgBqK,UAAU,CAACvV,KAAK,CAAE,kBAAiB,CAAC;cAChGinB,WAAW,CAACC,SAAS,EAAElnB,KAAK,EAAE+a,KAAK,CAAC;YACtC,CAAC,MAAM;cACL5E,MAAM,CAACc,OAAO,GAAGgQ,WAAW,CAAC9Q,MAAM,CAACc,OAAO,EAAEjX,KAAK,EAAE+a,KAAK,CAAC;YAC5D;UACF,CAAC,CAAC;QACJ;MACF,CAAC,MAAM;QACLpf,IAAI,CAAC4E,KAAK,CAACP,KAAK,GAAGrE,IAAI,CAACwkB,QAAQ,EAAE;MACpC;MAEA,IAAIxkB,IAAI,CAACyd,OAAO,EAAE;QAChB,IAAI,CAAC0N,IAAI,CAAC1G,MAAM,EAAE;UAChBzkB,IAAI,CAACsB,OAAO,CAAC,QAAQ,EAAEtB,IAAI,CAACwkB,QAAQ,EAAE,CAAC;QACzC;MACF;IACF;IACA;AACH;AACA;AACA;;IAGGvB,IAAI,GAAG;MACL,IAAIjjB,IAAI,GAAG,IAAI;MACf,IAAIA,IAAI,CAACsd,QAAQ,IAAItd,IAAI,CAACid,MAAM,IAAIjd,IAAI,CAAC6B,QAAQ,CAACgV,IAAI,KAAK,OAAO,IAAI7W,IAAI,CAACwqB,MAAM,EAAE,EAAE;MACrFxqB,IAAI,CAACid,MAAM,GAAG,IAAI;MAClBnL,OAAO,CAAC9R,IAAI,CAACyc,UAAU,EAAE;QACvB,eAAe,EAAE;MACnB,CAAC,CAAC;MACFzc,IAAI,CAACohB,YAAY,EAAE;MACnBpR,QAAQ,CAAChQ,IAAI,CAACsc,QAAQ,EAAE;QACtBkP,UAAU,EAAE,QAAQ;QACpBC,OAAO,EAAE;MACX,CAAC,CAAC;MACFzrB,IAAI,CAAC+gB,gBAAgB,EAAE;MACvB/Q,QAAQ,CAAChQ,IAAI,CAACsc,QAAQ,EAAE;QACtBkP,UAAU,EAAE,SAAS;QACrBC,OAAO,EAAE;MACX,CAAC,CAAC;MACFzrB,IAAI,CAACsf,KAAK,EAAE;MACZtf,IAAI,CAACsB,OAAO,CAAC,eAAe,EAAEtB,IAAI,CAACsc,QAAQ,CAAC;IAC9C;IACA;AACH;AACA;;IAGGiF,KAAK,CAAC+C,eAAe,GAAG,IAAI,EAAE;MAC5B,IAAItkB,IAAI,GAAG,IAAI;MACf,IAAIsB,OAAO,GAAGtB,IAAI,CAACid,MAAM;MAEzB,IAAIqH,eAAe,EAAE;QACnB;QACAtkB,IAAI,CAACskB,eAAe,EAAE;QAEtB,IAAItkB,IAAI,CAAC6B,QAAQ,CAACgV,IAAI,KAAK,QAAQ,IAAI7W,IAAI,CAAC6L,KAAK,CAAC3K,MAAM,EAAE;UACxDlB,IAAI,CAACmlB,SAAS,EAAE;QAClB;MACF;MAEAnlB,IAAI,CAACid,MAAM,GAAG,KAAK;MACnBnL,OAAO,CAAC9R,IAAI,CAACyc,UAAU,EAAE;QACvB,eAAe,EAAE;MACnB,CAAC,CAAC;MACFzM,QAAQ,CAAChQ,IAAI,CAACsc,QAAQ,EAAE;QACtBmP,OAAO,EAAE;MACX,CAAC,CAAC;MAEF,IAAIzrB,IAAI,CAAC6B,QAAQ,CAAC6T,YAAY,EAAE;QAC9B1V,IAAI,CAACqkB,iBAAiB,EAAE;MAC1B;MAEArkB,IAAI,CAACohB,YAAY,EAAE;MACnB,IAAI9f,OAAO,EAAEtB,IAAI,CAACsB,OAAO,CAAC,gBAAgB,EAAEtB,IAAI,CAACsc,QAAQ,CAAC;IAC5D;IACA;AACH;AACA;AACA;AACA;;IAGGyE,gBAAgB,GAAG;MACjB,IAAI,IAAI,CAAClf,QAAQ,CAACuV,cAAc,KAAK,MAAM,EAAE;QAC3C;MACF;MAEA,IAAIsU,OAAO,GAAG,IAAI,CAACnP,OAAO;MAC1B,IAAIoP,IAAI,GAAGD,OAAO,CAAC3F,qBAAqB,EAAE;MAC1C,IAAIC,GAAG,GAAG0F,OAAO,CAAC7F,YAAY,GAAG8F,IAAI,CAAC3F,GAAG,GAAG1H,MAAM,CAACsN,OAAO;MAC1D,IAAIC,IAAI,GAAGF,IAAI,CAACE,IAAI,GAAGvN,MAAM,CAACwN,OAAO;MACrC9b,QAAQ,CAAC,IAAI,CAACsM,QAAQ,EAAE;QACtBmD,KAAK,EAAEkM,IAAI,CAAClM,KAAK,GAAG,IAAI;QACxBuG,GAAG,EAAEA,GAAG,GAAG,IAAI;QACf6F,IAAI,EAAEA,IAAI,GAAG;MACf,CAAC,CAAC;IACJ;IACA;AACH;AACA;AACA;AACA;;IAGGnH,KAAK,CAACD,MAAM,EAAE;MACZ,IAAIzkB,IAAI,GAAG,IAAI;MACf,IAAI,CAACA,IAAI,CAAC6L,KAAK,CAAC3K,MAAM,EAAE;MACxB,IAAI2K,KAAK,GAAG7L,IAAI,CAACkmB,eAAe,EAAE;MAClCza,SAAS,CAACI,KAAK,EAAE2C,IAAI,IAAI;QACvBxO,IAAI,CAAC+pB,UAAU,CAACvb,IAAI,EAAE,IAAI,CAAC;MAC7B,CAAC,CAAC;MACFxO,IAAI,CAAC4jB,SAAS,EAAE;MAChB,IAAI,CAACa,MAAM,EAAEzkB,IAAI,CAACqhB,mBAAmB,EAAE;MACvCrhB,IAAI,CAACsB,OAAO,CAAC,OAAO,CAAC;IACvB;IACA;AACH;AACA;AACA;AACA;;IAGGmpB,aAAa,CAACha,EAAE,EAAE;MAChB,MAAMzQ,IAAI,GAAG,IAAI;MACjB,MAAM0qB,KAAK,GAAG1qB,IAAI,CAAC+d,QAAQ;MAC3B,MAAM9M,MAAM,GAAGjR,IAAI,CAACuc,OAAO;MAC3BtL,MAAM,CAACwX,YAAY,CAAChY,EAAE,EAAEQ,MAAM,CAAC0K,QAAQ,CAAC+O,KAAK,CAAC,IAAI,IAAI,CAAC;MACvD1qB,IAAI,CAACgkB,QAAQ,CAAC0G,KAAK,GAAG,CAAC,CAAC;IAC1B;IACA;AACH;AACA;AACA;;IAGGjH,eAAe,CAAC5D,CAAC,EAAE;MACjB,IAAI/R,SAAS,EAAEie,SAAS,EAAErB,KAAK,EAAEsB,IAAI;MACrC,IAAIhsB,IAAI,GAAG,IAAI;MACf8N,SAAS,GAAG+R,CAAC,IAAIA,CAAC,CAACiD,OAAO,KAAKvO,aAAa,GAAG,CAAC,CAAC,GAAG,CAAC;MACrDwX,SAAS,GAAGtT,YAAY,CAACzY,IAAI,CAACqc,aAAa,CAAC,CAAC,CAAC;;MAE9C,MAAM4P,QAAQ,GAAG,EAAE;MAEnB,IAAIjsB,IAAI,CAACie,WAAW,CAAC/c,MAAM,EAAE;QAC3B8qB,IAAI,GAAGza,OAAO,CAACvR,IAAI,CAACie,WAAW,EAAEnQ,SAAS,CAAC;QAC3C4c,KAAK,GAAGhZ,SAAS,CAACsa,IAAI,CAAC;QAEvB,IAAIle,SAAS,GAAG,CAAC,EAAE;UACjB4c,KAAK,EAAE;QACT;QAEAjf,SAAS,CAACzL,IAAI,CAACie,WAAW,EAAEzP,IAAI,IAAIyd,QAAQ,CAACnrB,IAAI,CAAC0N,IAAI,CAAC,CAAC;MAC1D,CAAC,MAAM,IAAI,CAACxO,IAAI,CAACud,SAAS,IAAIvd,IAAI,CAAC6B,QAAQ,CAACgV,IAAI,KAAK,QAAQ,KAAK7W,IAAI,CAAC6L,KAAK,CAAC3K,MAAM,EAAE;QACnF,MAAM2K,KAAK,GAAG7L,IAAI,CAACkmB,eAAe,EAAE;QACpC,IAAIgG,OAAO;QAEX,IAAIpe,SAAS,GAAG,CAAC,IAAIie,SAAS,CAACjnB,KAAK,KAAK,CAAC,IAAIinB,SAAS,CAAC7qB,MAAM,KAAK,CAAC,EAAE;UACpEgrB,OAAO,GAAGrgB,KAAK,CAAC7L,IAAI,CAAC+d,QAAQ,GAAG,CAAC,CAAC;QACpC,CAAC,MAAM,IAAIjQ,SAAS,GAAG,CAAC,IAAIie,SAAS,CAACjnB,KAAK,KAAK9E,IAAI,CAACuiB,UAAU,EAAE,CAACrhB,MAAM,EAAE;UACxEgrB,OAAO,GAAGrgB,KAAK,CAAC7L,IAAI,CAAC+d,QAAQ,CAAC;QAChC;QAEA,IAAImO,OAAO,KAAK/qB,SAAS,EAAE;UACzB8qB,QAAQ,CAACnrB,IAAI,CAACorB,OAAO,CAAC;QACxB;MACF;MAEA,IAAI,CAAClsB,IAAI,CAACmsB,YAAY,CAACF,QAAQ,EAAEpM,CAAC,CAAC,EAAE;QACnC,OAAO,KAAK;MACd;MAEAjH,cAAc,CAACiH,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;;MAEzB,IAAI,OAAO6K,KAAK,KAAK,WAAW,EAAE;QAChC1qB,IAAI,CAACgkB,QAAQ,CAAC0G,KAAK,CAAC;MACtB;MAEA,OAAOuB,QAAQ,CAAC/qB,MAAM,EAAE;QACtBlB,IAAI,CAAC+pB,UAAU,CAACkC,QAAQ,CAAC9hB,GAAG,EAAE,CAAC;MACjC;MAEAnK,IAAI,CAAC4jB,SAAS,EAAE;MAChB5jB,IAAI,CAAC+gB,gBAAgB,EAAE;MACvB/gB,IAAI,CAAC0jB,cAAc,CAAC,KAAK,CAAC;MAC1B,OAAO,IAAI;IACb;IACA;AACH;AACA;;IAGGyI,YAAY,CAACtgB,KAAK,EAAEgN,GAAG,EAAE;MACvB,MAAMmD,MAAM,GAAGnQ,KAAK,CAACxD,GAAG,CAACmG,IAAI,IAAIA,IAAI,CAACuM,OAAO,CAAC1W,KAAK,CAAC,CAAC,CAAC;;MAEtD,IAAI,CAAC2X,MAAM,CAAC9a,MAAM,IAAI,OAAO,IAAI,CAACW,QAAQ,CAACuqB,QAAQ,KAAK,UAAU,IAAI,IAAI,CAACvqB,QAAQ,CAACuqB,QAAQ,CAACpQ,MAAM,EAAEnD,GAAG,CAAC,KAAK,KAAK,EAAE;QACnH,OAAO,KAAK;MACd;MAEA,OAAO,IAAI;IACb;IACA;AACH;AACA;AACA;AACA;AACA;AACA;;IAGG2K,gBAAgB,CAAC1V,SAAS,EAAE+R,CAAC,EAAE;MAC7B,IAAIuF,WAAW;QACXiH,QAAQ;QACRrsB,IAAI,GAAG,IAAI;MACf,IAAIA,IAAI,CAAC6c,GAAG,EAAE/O,SAAS,IAAI,CAAC,CAAC;MAC7B,IAAI9N,IAAI,CAACuiB,UAAU,EAAE,CAACrhB,MAAM,EAAE,OAAO,CAAC;;MAEtC,IAAIgY,SAAS,CAACrE,YAAY,EAAEgL,CAAC,CAAC,IAAI3G,SAAS,CAAC,UAAU,EAAE2G,CAAC,CAAC,EAAE;QAC1DuF,WAAW,GAAGplB,IAAI,CAACglB,aAAa,CAAClX,SAAS,CAAC;QAE3C,IAAIsX,WAAW,EAAE;UACf,IAAI,CAACA,WAAW,CAACzU,SAAS,CAACS,QAAQ,CAAC,QAAQ,CAAC,EAAE;YAC7Cib,QAAQ,GAAGjH,WAAW;UACxB,CAAC,MAAM;YACLiH,QAAQ,GAAGrsB,IAAI,CAACmjB,WAAW,CAACiC,WAAW,EAAEtX,SAAS,EAAE,MAAM,CAAC;UAC7D,CAAC,CAAC;QAEJ,CAAC,MAAM,IAAIA,SAAS,GAAG,CAAC,EAAE;UACxBue,QAAQ,GAAGrsB,IAAI,CAACqc,aAAa,CAACiQ,kBAAkB;QAClD,CAAC,MAAM;UACLD,QAAQ,GAAGrsB,IAAI,CAACqc,aAAa,CAACxK,sBAAsB;QACtD;QAEA,IAAIwa,QAAQ,EAAE;UACZ,IAAIA,QAAQ,CAAC1b,SAAS,CAACS,QAAQ,CAAC,QAAQ,CAAC,EAAE;YACzCpR,IAAI,CAACklB,gBAAgB,CAACE,WAAW,CAAC;UACpC;UAEAplB,IAAI,CAACilB,kBAAkB,CAACoH,QAAQ,CAAC,CAAC,CAAC;QACrC,CAAC,CAAC;MAEJ,CAAC,MAAM;QACLrsB,IAAI,CAACusB,SAAS,CAACze,SAAS,CAAC;MAC3B;IACF;IAEAye,SAAS,CAACze,SAAS,EAAE,CAAC;IACtB;AACH;AACA;AACA;;IAGGkX,aAAa,CAAClX,SAAS,EAAE;MACvB,IAAIsX,WAAW,GAAG,IAAI,CAAC7I,OAAO,CAAChN,aAAa,CAAC,cAAc,CAAC;MAE5D,IAAI6V,WAAW,EAAE;QACf,OAAOA,WAAW;MACpB;MAEA,IAAIvgB,MAAM,GAAG,IAAI,CAAC0X,OAAO,CAAC3I,gBAAgB,CAAC,SAAS,CAAC;MAErD,IAAI/O,MAAM,EAAE;QACV,OAAO0M,OAAO,CAAC1M,MAAM,EAAEiJ,SAAS,CAAC;MACnC;IACF;IACA;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;IAGGkW,QAAQ,CAACwI,OAAO,EAAE;MAChB,IAAI,CAACzO,QAAQ,GAAG,IAAI,CAAClS,KAAK,CAAC3K,MAAM;IACnC;IACA;AACH;AACA;AACA;;IAGGglB,eAAe,GAAG;MAChB,OAAO7jB,KAAK,CAACqC,IAAI,CAAC,IAAI,CAAC6X,OAAO,CAAC3I,gBAAgB,CAAC,gBAAgB,CAAC,CAAC;IACpE;IACA;AACH;AACA;AACA;;IAGGgX,IAAI,GAAG;MACL,IAAI,CAACtN,QAAQ,GAAG,IAAI;MACpB,IAAI,CAAC8D,YAAY,EAAE;IACrB;IACA;AACH;AACA;;IAGG0J,MAAM,GAAG;MACP,IAAI,CAACxN,QAAQ,GAAG,KAAK;MACrB,IAAI,CAAC8D,YAAY,EAAE;IACrB;IACA;AACH;AACA;AACA;;IAGGI,OAAO,GAAG;MACR,IAAIxhB,IAAI,GAAG,IAAI;MACfA,IAAI,CAAC4E,KAAK,CAACyW,QAAQ,GAAG,IAAI;MAC1Brb,IAAI,CAACqc,aAAa,CAAChB,QAAQ,GAAG,IAAI;MAClCrb,IAAI,CAACyc,UAAU,CAACE,QAAQ,GAAG,CAAC,CAAC;MAC7B3c,IAAI,CAACkd,UAAU,GAAG,IAAI;MACtB,IAAI,CAACqE,KAAK,EAAE;MACZvhB,IAAI,CAAC4qB,IAAI,EAAE;IACb;IACA;AACH;AACA;AACA;;IAGGnJ,MAAM,GAAG;MACP,IAAIzhB,IAAI,GAAG,IAAI;MACfA,IAAI,CAAC4E,KAAK,CAACyW,QAAQ,GAAG,KAAK;MAC3Brb,IAAI,CAACqc,aAAa,CAAChB,QAAQ,GAAG,KAAK;MACnCrb,IAAI,CAACyc,UAAU,CAACE,QAAQ,GAAG3c,IAAI,CAAC2c,QAAQ;MACxC3c,IAAI,CAACkd,UAAU,GAAG,KAAK;MACvBld,IAAI,CAAC8qB,MAAM,EAAE;IACf;IACA;AACH;AACA;AACA;AACA;;IAGG2B,OAAO,GAAG;MACR,IAAIzsB,IAAI,GAAG,IAAI;MACf,IAAIihB,cAAc,GAAGjhB,IAAI,CAACihB,cAAc;MACxCjhB,IAAI,CAACsB,OAAO,CAAC,SAAS,CAAC;MACvBtB,IAAI,CAACe,GAAG,EAAE;MACVf,IAAI,CAACmR,OAAO,CAACN,MAAM,EAAE;MACrB7Q,IAAI,CAACsc,QAAQ,CAACzL,MAAM,EAAE;MACtB7Q,IAAI,CAAC4E,KAAK,CAACwK,SAAS,GAAG6R,cAAc,CAAC7R,SAAS;MAC/CpP,IAAI,CAAC4E,KAAK,CAAC+X,QAAQ,GAAGsE,cAAc,CAACtE,QAAQ;MAC7C/L,aAAa,CAAC5Q,IAAI,CAAC4E,KAAK,EAAE,aAAa,EAAE,sBAAsB,CAAC;MAEhE5E,IAAI,CAAC+c,QAAQ,EAAE;MAEf,OAAO/c,IAAI,CAAC4E,KAAK,CAACwZ,SAAS;IAC7B;IACA;AACH;AACA;AACA;AACA;;IAGG1G,MAAM,CAACgV,YAAY,EAAEzf,IAAI,EAAE;MACzB,IAAIU,EAAE,EAAE+Y,IAAI;MACZ,MAAM1mB,IAAI,GAAG,IAAI;MAEjB,IAAI,OAAO,IAAI,CAAC6B,QAAQ,CAAC6V,MAAM,CAACgV,YAAY,CAAC,KAAK,UAAU,EAAE;QAC5D,OAAO,IAAI;MACb,CAAC,CAAC;;MAGFhG,IAAI,GAAG1mB,IAAI,CAAC6B,QAAQ,CAAC6V,MAAM,CAACgV,YAAY,CAAC,CAAC5Y,IAAI,CAAC,IAAI,EAAE7G,IAAI,EAAE4K,WAAW,CAAC;MAEvE,IAAI,CAAC6O,IAAI,EAAE;QACT,OAAO,IAAI;MACb;MAEAA,IAAI,GAAG7X,MAAM,CAAC6X,IAAI,CAAC,CAAC,CAAC;;MAErB,IAAIgG,YAAY,KAAK,QAAQ,IAAIA,YAAY,KAAK,eAAe,EAAE;QACjE,IAAIzf,IAAI,CAACjN,IAAI,CAAC6B,QAAQ,CAACyU,aAAa,CAAC,EAAE;UACrCxE,OAAO,CAAC4U,IAAI,EAAE;YACZ,eAAe,EAAE;UACnB,CAAC,CAAC;QACJ,CAAC,MAAM;UACL5U,OAAO,CAAC4U,IAAI,EAAE;YACZ,iBAAiB,EAAE;UACrB,CAAC,CAAC;QACJ;MACF,CAAC,MAAM,IAAIgG,YAAY,KAAK,UAAU,EAAE;QACtC/e,EAAE,GAAGV,IAAI,CAACiO,KAAK,CAAClb,IAAI,CAAC6B,QAAQ,CAAC2U,kBAAkB,CAAC;QACjD1E,OAAO,CAAC4U,IAAI,EAAE;UACZ,YAAY,EAAE/Y;QAChB,CAAC,CAAC;QAEF,IAAIV,IAAI,CAACiO,KAAK,CAAClb,IAAI,CAAC6B,QAAQ,CAACyU,aAAa,CAAC,EAAE;UAC3CxE,OAAO,CAAC4U,IAAI,EAAE;YACZ,eAAe,EAAE;UACnB,CAAC,CAAC;QACJ;MACF;MAEA,IAAIgG,YAAY,KAAK,QAAQ,IAAIA,YAAY,KAAK,MAAM,EAAE;QACxD,MAAMroB,KAAK,GAAGuT,QAAQ,CAAC3K,IAAI,CAACjN,IAAI,CAAC6B,QAAQ,CAACuU,UAAU,CAAC,CAAC;QACtDtE,OAAO,CAAC4U,IAAI,EAAE;UACZ,YAAY,EAAEriB;QAChB,CAAC,CAAC,CAAC,CAAC;;QAEJ,IAAIqoB,YAAY,KAAK,MAAM,EAAE;UAC3Bvc,UAAU,CAACuW,IAAI,EAAE1mB,IAAI,CAAC6B,QAAQ,CAACqV,SAAS,CAAC;UACzCpF,OAAO,CAAC4U,IAAI,EAAE;YACZ,cAAc,EAAE;UAClB,CAAC,CAAC;QACJ,CAAC,MAAM;UACLvW,UAAU,CAACuW,IAAI,EAAE1mB,IAAI,CAAC6B,QAAQ,CAACsV,WAAW,CAAC;UAC3CrF,OAAO,CAAC4U,IAAI,EAAE;YACZxH,IAAI,EAAE,QAAQ;YACdvR,EAAE,EAAEV,IAAI,CAAC0a;UACX,CAAC,CAAC,CAAC,CAAC;;UAEJ1a,IAAI,CAACkd,IAAI,GAAGzD,IAAI;UAChB1mB,IAAI,CAACwC,OAAO,CAAC6B,KAAK,CAAC,GAAG4I,IAAI;QAC5B;MACF;MAEA,OAAOyZ,IAAI;IACb;IACA;AACH;AACA;AACA;;IAGG9H,OAAO,CAAC8N,YAAY,EAAEzf,IAAI,EAAE;MAC1B,MAAMyZ,IAAI,GAAG,IAAI,CAAChP,MAAM,CAACgV,YAAY,EAAEzf,IAAI,CAAC;MAE5C,IAAIyZ,IAAI,IAAI,IAAI,EAAE;QAChB,MAAM,sBAAsB;MAC9B;MAEA,OAAOA,IAAI;IACb;IACA;AACH;AACA;AACA;AACA;AACA;;IAGGyC,UAAU,GAAG;MACX1d,SAAS,CAAC,IAAI,CAACjJ,OAAO,EAAEgY,MAAM,IAAI;QAChC,IAAIA,MAAM,CAAC2P,IAAI,EAAE;UACf3P,MAAM,CAAC2P,IAAI,CAACtZ,MAAM,EAAE;UACpB,OAAO2J,MAAM,CAAC2P,IAAI;QACpB;MACF,CAAC,CAAC;IACJ;IACA;AACH;AACA;AACA;;IAGGP,YAAY,CAACvlB,KAAK,EAAE;MAClB,MAAMijB,SAAS,GAAG,IAAI,CAACC,SAAS,CAACljB,KAAK,CAAC;MACvC,IAAIijB,SAAS,EAAEA,SAAS,CAACzW,MAAM,EAAE;IACnC;IACA;AACH;AACA;AACA;AACA;;IAGG6X,SAAS,CAAC9jB,KAAK,EAAE;MACf,OAAO,IAAI,CAAC/C,QAAQ,CAACsT,MAAM,IAAIvQ,KAAK,CAAC1D,MAAM,GAAG,CAAC,IAAI,IAAI,CAACW,QAAQ,CAACwT,YAAY,CAACvB,IAAI,CAAC,IAAI,EAAElP,KAAK,CAAC;IACjG;IACA;AACH;AACA;AACA;AACA;AACA;AACA;;IAGG+nB,IAAI,CAACC,IAAI,EAAEC,MAAM,EAAEC,MAAM,EAAE;MACzB,IAAI9sB,IAAI,GAAG,IAAI;MACf,IAAI+sB,WAAW,GAAG/sB,IAAI,CAAC6sB,MAAM,CAAC;MAE9B7sB,IAAI,CAAC6sB,MAAM,CAAC,GAAG,YAAY;QACzB,IAAIhoB,MAAM,EAAEmoB,UAAU;QAEtB,IAAIJ,IAAI,KAAK,OAAO,EAAE;UACpB/nB,MAAM,GAAGkoB,WAAW,CAACvrB,KAAK,CAACxB,IAAI,EAAEiB,SAAS,CAAC;QAC7C;QAEA+rB,UAAU,GAAGF,MAAM,CAACtrB,KAAK,CAACxB,IAAI,EAAEiB,SAAS,CAAC;QAE1C,IAAI2rB,IAAI,KAAK,SAAS,EAAE;UACtB,OAAOI,UAAU;QACnB;QAEA,IAAIJ,IAAI,KAAK,QAAQ,EAAE;UACrB/nB,MAAM,GAAGkoB,WAAW,CAACvrB,KAAK,CAACxB,IAAI,EAAEiB,SAAS,CAAC;QAC7C;QAEA,OAAO4D,MAAM;MACf,CAAC;IACH;EAEF;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,SAASooB,eAAe,GAAI;IAC1BjU,QAAQ,CAAC,IAAI,CAACpU,KAAK,EAAE,QAAQ,EAAE,MAAM;MACnC,IAAI,CAACuc,IAAI,EAAE;IACb,CAAC,CAAC;EACJ;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,SAAS+L,gBAAgB,GAAI;IAC3B,IAAIltB,IAAI,GAAG,IAAI;IACf,IAAImtB,mBAAmB,GAAGntB,IAAI,CAACigB,cAAc;IAC7CjgB,IAAI,CAAC6B,QAAQ,CAAC6T,YAAY,GAAG,KAAK,CAAC,CAAC;;IAEpC,IAAI0X,cAAc,GAAG,SAASA,cAAc,CAAC5S,MAAM,EAAE;MACnDrC,UAAU,CAAC,MAAM;QACf,IAAIkV,QAAQ,GAAG7S,MAAM,CAACjL,aAAa,CAAC,OAAO,CAAC;QAE5C,IAAI8d,QAAQ,YAAYC,gBAAgB,EAAE;UACxC,IAAI9S,MAAM,CAAC7J,SAAS,CAACS,QAAQ,CAAC,UAAU,CAAC,EAAE;YACzCic,QAAQ,CAACE,OAAO,GAAG,IAAI;UACzB,CAAC,MAAM;YACLF,QAAQ,CAACE,OAAO,GAAG,KAAK;UAC1B;QACF;MACF,CAAC,EAAE,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;;IAGHvtB,IAAI,CAAC2sB,IAAI,CAAC,OAAO,EAAE,gBAAgB,EAAE,MAAM;MACzC,IAAIa,kBAAkB,GAAGxtB,IAAI,CAAC6B,QAAQ,CAAC6V,MAAM,CAAC8C,MAAM;MAEpDxa,IAAI,CAAC6B,QAAQ,CAAC6V,MAAM,CAAC8C,MAAM,GAAG,CAACvN,IAAI,EAAE4K,WAAW,KAAK;QACnD,IAAI4V,QAAQ,GAAG5e,MAAM,CAAC2e,kBAAkB,CAAC1Z,IAAI,CAAC9T,IAAI,EAAEiN,IAAI,EAAE4K,WAAW,CAAC,CAAC;QACvE,IAAIwV,QAAQ,GAAGne,QAAQ,CAACC,aAAa,CAAC,OAAO,CAAC;QAC9Cke,QAAQ,CAACpU,gBAAgB,CAAC,OAAO,EAAE,UAAUJ,GAAG,EAAE;UAChDD,cAAc,CAACC,GAAG,CAAC;QACrB,CAAC,CAAC;QACFwU,QAAQ,CAAC9U,IAAI,GAAG,UAAU;QAC1B,MAAMgO,MAAM,GAAG5O,QAAQ,CAAC1K,IAAI,CAACjN,IAAI,CAAC6B,QAAQ,CAACuU,UAAU,CAAC,CAAC;QAEvD,IAAImQ,MAAM,IAAIvmB,IAAI,CAAC6L,KAAK,CAACxK,OAAO,CAACklB,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE;UAC7C8G,QAAQ,CAACE,OAAO,GAAG,IAAI;QACzB;QAEAE,QAAQ,CAACC,OAAO,CAACL,QAAQ,CAAC;QAC1B,OAAOI,QAAQ;MACjB,CAAC;IACH,CAAC,CAAC,CAAC,CAAC;;IAEJztB,IAAI,CAACW,EAAE,CAAC,aAAa,EAAE0D,KAAK,IAAI;MAC9B,IAAImW,MAAM,GAAGxa,IAAI,CAACunB,SAAS,CAACljB,KAAK,CAAC;MAElC,IAAImW,MAAM,EAAE;QACV;QACAA,MAAM,CAAC7J,SAAS,CAACE,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC;;QAErCuc,cAAc,CAAC5S,MAAM,CAAC;MACxB;IACF,CAAC,CAAC,CAAC,CAAC;;IAEJxa,IAAI,CAACW,EAAE,CAAC,UAAU,EAAE0D,KAAK,IAAI;MAC3B,IAAImW,MAAM,GAAGxa,IAAI,CAACunB,SAAS,CAACljB,KAAK,CAAC;MAElC,IAAImW,MAAM,EAAE;QACV;QACA4S,cAAc,CAAC5S,MAAM,CAAC;MACxB;IACF,CAAC,CAAC,CAAC,CAAC;;IAEJxa,IAAI,CAAC2sB,IAAI,CAAC,SAAS,EAAE,gBAAgB,EAAE,CAAC9T,GAAG,EAAE2B,MAAM,KAAK;MACtD,IAAIA,MAAM,CAAC7J,SAAS,CAACS,QAAQ,CAAC,UAAU,CAAC,EAAE;QACzCoJ,MAAM,CAAC7J,SAAS,CAACE,MAAM,CAAC,UAAU,CAAC;QACnC7Q,IAAI,CAAC+pB,UAAU,CAACvP,MAAM,CAACO,OAAO,CAAC1W,KAAK,CAAC;QACrCrE,IAAI,CAAC0jB,cAAc,EAAE;QACrB9K,cAAc,CAACC,GAAG,EAAE,IAAI,CAAC;QACzB;MACF;MAEAsU,mBAAmB,CAACrZ,IAAI,CAAC9T,IAAI,EAAE6Y,GAAG,EAAE2B,MAAM,CAAC;MAC3C4S,cAAc,CAAC5S,MAAM,CAAC;IACxB,CAAC,CAAC;EACJ;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,SAASmT,YAAY,CAAEzP,WAAW,EAAE;IAClC,MAAMle,IAAI,GAAG,IAAI;IACjB,MAAMwC,OAAO,GAAGyD,MAAM,CAACkI,MAAM,CAAC;MAC5B0E,SAAS,EAAE,cAAc;MACzB+a,KAAK,EAAE,WAAW;MAClBlH,IAAI,EAAEzZ,IAAI,IAAI;QACZ,OAAQ,eAAcA,IAAI,CAAC4F,SAAU,YAAW5F,IAAI,CAAC2gB,KAAM,kBAAiB;MAC9E;IACF,CAAC,EAAE1P,WAAW,CAAC;IACfle,IAAI,CAACW,EAAE,CAAC,YAAY,EAAE,MAAM;MAC1B,IAAIktB,MAAM,GAAGhf,MAAM,CAACrM,OAAO,CAACkkB,IAAI,CAAClkB,OAAO,CAAC,CAAC;MAC1CqrB,MAAM,CAAC5U,gBAAgB,CAAC,OAAO,EAAEJ,GAAG,IAAI;QACtC,IAAI7Y,IAAI,CAACkd,UAAU,EAAE;UACnB;QACF;QAEAld,IAAI,CAAC0kB,KAAK,EAAE;QAEZ,IAAI1kB,IAAI,CAAC6B,QAAQ,CAACgV,IAAI,KAAK,QAAQ,IAAI7W,IAAI,CAAC6B,QAAQ,CAACkU,gBAAgB,EAAE;UACrE/V,IAAI,CAAC2iB,OAAO,CAAC,EAAE,CAAC;QAClB;QAEA9J,GAAG,CAACD,cAAc,EAAE;QACpBC,GAAG,CAACE,eAAe,EAAE;MACvB,CAAC,CAAC;MACF/Y,IAAI,CAACuc,OAAO,CAACpJ,WAAW,CAAC0a,MAAM,CAAC;IAClC,CAAC,CAAC;EACJ;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,SAASC,SAAS,GAAI;IACpB,IAAI9tB,IAAI,GAAG,IAAI;IACf,IAAI,CAAC+tB,CAAC,CAAC9rB,EAAE,CAAC+rB,QAAQ,EAAE,MAAM,IAAInrB,KAAK,CAAC,uDAAuD,CAAC;IAC5F,IAAI7C,IAAI,CAAC6B,QAAQ,CAACgV,IAAI,KAAK,OAAO,EAAE;IACpC,IAAIoX,SAAS,GAAGjuB,IAAI,CAAC4qB,IAAI;IACzB,IAAIsD,WAAW,GAAGluB,IAAI,CAAC8qB,MAAM;IAC7B9qB,IAAI,CAAC2sB,IAAI,CAAC,SAAS,EAAE,MAAM,EAAE,MAAM;MACjC,IAAIqB,QAAQ,GAAGD,CAAC,CAAC/tB,IAAI,CAACuc,OAAO,CAAC,CAACtP,IAAI,CAAC,UAAU,CAAC;MAC/C,IAAI+gB,QAAQ,EAAEA,QAAQ,CAACxM,OAAO,EAAE;MAChC,OAAOyM,SAAS,CAACna,IAAI,CAAC9T,IAAI,CAAC;IAC7B,CAAC,CAAC;IACFA,IAAI,CAAC2sB,IAAI,CAAC,SAAS,EAAE,QAAQ,EAAE,MAAM;MACnC,IAAIqB,QAAQ,GAAGD,CAAC,CAAC/tB,IAAI,CAACuc,OAAO,CAAC,CAACtP,IAAI,CAAC,UAAU,CAAC;MAC/C,IAAI+gB,QAAQ,EAAEA,QAAQ,CAACvM,MAAM,EAAE;MAC/B,OAAOyM,WAAW,CAACpa,IAAI,CAAC9T,IAAI,CAAC;IAC/B,CAAC,CAAC;IACFA,IAAI,CAACW,EAAE,CAAC,YAAY,EAAE,MAAM;MAC1B,IAAIwtB,QAAQ,GAAGJ,CAAC,CAAC/tB,IAAI,CAACuc,OAAO,CAAC,CAACyR,QAAQ,CAAC;QACtCniB,KAAK,EAAE,cAAc;QACrBuiB,oBAAoB,EAAE,IAAI;QAC1B/S,QAAQ,EAAErb,IAAI,CAACsd,QAAQ;QACvBxY,KAAK,EAAE,CAAC+a,CAAC,EAAEwO,EAAE,KAAK;UAChBA,EAAE,CAAC9W,WAAW,CAACtH,GAAG,CAAC,OAAO,EAAEoe,EAAE,CAACC,MAAM,CAACre,GAAG,CAAC,OAAO,CAAC,CAAC;UACnDke,QAAQ,CAACle,GAAG,CAAC;YACXse,QAAQ,EAAE;UACZ,CAAC,CAAC;QACJ,CAAC;QACDzV,IAAI,EAAE,MAAM;UACVqV,QAAQ,CAACle,GAAG,CAAC;YACXse,QAAQ,EAAE;UACZ,CAAC,CAAC;UACF,IAAIvS,MAAM,GAAG,EAAE;UACfmS,QAAQ,CAACxS,QAAQ,CAAC,cAAc,CAAC,CAAC6S,IAAI,CAAC,YAAY;YACjD,IAAI,IAAI,CAACzT,OAAO,CAAC1W,KAAK,EAAE2X,MAAM,CAAClb,IAAI,CAAC,IAAI,CAACia,OAAO,CAAC1W,KAAK,CAAC;UACzD,CAAC,CAAC;UACFrE,IAAI,CAACkiB,QAAQ,CAAClG,MAAM,CAAC;QACvB;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,SAASyS,eAAe,CAAEvQ,WAAW,EAAE;IACrC,MAAMle,IAAI,GAAG,IAAI;IACjB,MAAMwC,OAAO,GAAGyD,MAAM,CAACkI,MAAM,CAAC;MAC5Byf,KAAK,EAAE,UAAU;MACjBc,WAAW,EAAE,iBAAiB;MAC9BC,aAAa,EAAE,uBAAuB;MACtCC,UAAU,EAAE,uBAAuB;MACnCC,UAAU,EAAE,uBAAuB;MACnCnI,IAAI,EAAEzZ,IAAI,IAAI;QACZ,OAAO,cAAc,GAAGA,IAAI,CAACyhB,WAAW,GAAG,IAAI,GAAG,cAAc,GAAGzhB,IAAI,CAAC0hB,aAAa,GAAG,IAAI,GAAG,eAAe,GAAG1hB,IAAI,CAAC2hB,UAAU,GAAG,IAAI,GAAG3hB,IAAI,CAAC2gB,KAAK,GAAG,SAAS,GAAG,YAAY,GAAG3gB,IAAI,CAAC4hB,UAAU,GAAG,eAAe,GAAG,QAAQ,GAAG,QAAQ;MAC3O;IACF,CAAC,EAAE3Q,WAAW,CAAC;IACfle,IAAI,CAACW,EAAE,CAAC,YAAY,EAAE,MAAM;MAC1B,IAAIynB,MAAM,GAAGvZ,MAAM,CAACrM,OAAO,CAACkkB,IAAI,CAAClkB,OAAO,CAAC,CAAC;MAC1C,IAAIssB,UAAU,GAAG1G,MAAM,CAAC7Y,aAAa,CAAC,GAAG,GAAG/M,OAAO,CAACqsB,UAAU,CAAC;MAE/D,IAAIC,UAAU,EAAE;QACdA,UAAU,CAAC7V,gBAAgB,CAAC,OAAO,EAAEJ,GAAG,IAAI;UAC1CD,cAAc,CAACC,GAAG,EAAE,IAAI,CAAC;UACzB7Y,IAAI,CAACuhB,KAAK,EAAE;QACd,CAAC,CAAC;MACJ;MAEAvhB,IAAI,CAACsc,QAAQ,CAACmM,YAAY,CAACL,MAAM,EAAEpoB,IAAI,CAACsc,QAAQ,CAAChN,UAAU,CAAC;IAC9D,CAAC,CAAC;EACJ;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,SAASyf,cAAc,GAAI;IACzB,IAAI/uB,IAAI,GAAG,IAAI;IACf;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;IAEGA,IAAI,CAAC2sB,IAAI,CAAC,SAAS,EAAE,UAAU,EAAEH,OAAO,IAAI;MAC1C,IAAIxsB,IAAI,CAAC6B,QAAQ,CAACgV,IAAI,KAAK,QAAQ,IAAI,CAAC7W,IAAI,CAACuc,OAAO,CAACnL,QAAQ,CAACpR,IAAI,CAACqc,aAAa,CAAC,EAAE;QACjFmQ,OAAO,GAAGxsB,IAAI,CAAC6L,KAAK,CAAC3K,MAAM;MAC7B,CAAC,MAAM;QACLsrB,OAAO,GAAGloB,IAAI,CAACC,GAAG,CAAC,CAAC,EAAED,IAAI,CAACoF,GAAG,CAAC1J,IAAI,CAAC6L,KAAK,CAAC3K,MAAM,EAAEsrB,OAAO,CAAC,CAAC;QAE3D,IAAIA,OAAO,IAAIxsB,IAAI,CAAC+d,QAAQ,IAAI,CAAC/d,IAAI,CAACsqB,SAAS,EAAE;UAC/CtqB,IAAI,CAACkmB,eAAe,EAAE,CAAC5lB,OAAO,CAAC,CAACub,KAAK,EAAE/S,CAAC,KAAK;YAC3C,IAAIA,CAAC,GAAG0jB,OAAO,EAAE;cACfxsB,IAAI,CAACqc,aAAa,CAAC6E,qBAAqB,CAAC,aAAa,EAAErF,KAAK,CAAC;YAChE,CAAC,MAAM;cACL7b,IAAI,CAACuc,OAAO,CAACpJ,WAAW,CAAC0I,KAAK,CAAC;YACjC;UACF,CAAC,CAAC;QACJ;MACF;MAEA7b,IAAI,CAAC+d,QAAQ,GAAGyO,OAAO;IACzB,CAAC,CAAC;IACFxsB,IAAI,CAAC2sB,IAAI,CAAC,SAAS,EAAE,WAAW,EAAE7e,SAAS,IAAI;MAC7C,IAAI,CAAC9N,IAAI,CAACud,SAAS,EAAE,OAAO,CAAC;;MAE7B,MAAM6H,WAAW,GAAGplB,IAAI,CAACglB,aAAa,CAAClX,SAAS,CAAC;MAEjD,IAAIsX,WAAW,EAAE;QACf,MAAMC,GAAG,GAAG3T,SAAS,CAAC0T,WAAW,CAAC;QAClCplB,IAAI,CAACgkB,QAAQ,CAAClW,SAAS,GAAG,CAAC,GAAGuX,GAAG,GAAG,CAAC,GAAGA,GAAG,CAAC;QAC5CrlB,IAAI,CAAC+jB,aAAa,EAAE;QACpBnT,aAAa,CAACwU,WAAW,EAAE,aAAa,CAAC,CAAC,CAAC;MAC7C,CAAC,MAAM;QACLplB,IAAI,CAACgkB,QAAQ,CAAChkB,IAAI,CAAC+d,QAAQ,GAAGjQ,SAAS,CAAC;MAC1C;IACF,CAAC,CAAC;EACJ;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,SAASkhB,cAAc,GAAI;IACzB,MAAMhvB,IAAI,GAAG,IAAI;IACjBA,IAAI,CAAC6B,QAAQ,CAAC0T,UAAU,GAAG,IAAI,CAAC,CAAC;;IAEjCvV,IAAI,CAAC2sB,IAAI,CAAC,QAAQ,EAAE,OAAO,EAAE,MAAM;MACjC3sB,IAAI,CAACyc,UAAU,GAAGzc,IAAI,CAACuc,OAAO;MAC9BpM,UAAU,CAACnQ,IAAI,CAACqc,aAAa,EAAE,gBAAgB,CAAC;MAChD,MAAM4S,GAAG,GAAGpgB,MAAM,CAAC,mCAAmC,CAAC;MACvDogB,GAAG,CAACpV,MAAM,CAAC7Z,IAAI,CAACqc,aAAa,CAAC;MAC9Brc,IAAI,CAACsc,QAAQ,CAACmM,YAAY,CAACwG,GAAG,EAAEjvB,IAAI,CAACsc,QAAQ,CAAChN,UAAU,CAAC,CAAC,CAAC;;MAE3D,MAAMiI,WAAW,GAAG1I,MAAM,CAAC,mDAAmD,CAAC;MAC/E0I,WAAW,CAACA,WAAW,GAAGvX,IAAI,CAAC6B,QAAQ,CAAC0V,WAAW,IAAI,EAAE;MACzDvX,IAAI,CAACuc,OAAO,CAAC1C,MAAM,CAACtC,WAAW,CAAC;IAClC,CAAC,CAAC;IACFvX,IAAI,CAACW,EAAE,CAAC,YAAY,EAAE,MAAM;MAC1B;MACAX,IAAI,CAACqc,aAAa,CAACpD,gBAAgB,CAAC,SAAS,EAAEJ,GAAG,IAAI;QACpD;QACA,QAAQA,GAAG,CAACiK,OAAO;UACjB,KAAK5O,OAAO;YACV,IAAIlU,IAAI,CAACid,MAAM,EAAE;cACfrE,cAAc,CAACC,GAAG,EAAE,IAAI,CAAC;cACzB7Y,IAAI,CAACuhB,KAAK,EAAE;YACd;YAEAvhB,IAAI,CAACoiB,gBAAgB,EAAE;YACvB;UAEF,KAAK3N,OAAO;YACVzU,IAAI,CAACyc,UAAU,CAACE,QAAQ,GAAG,CAAC,CAAC;YAC7B;QAAM;QAGV,OAAO3c,IAAI,CAACogB,SAAS,CAACtM,IAAI,CAAC9T,IAAI,EAAE6Y,GAAG,CAAC;MACvC,CAAC,CAAC;MACF7Y,IAAI,CAACW,EAAE,CAAC,MAAM,EAAE,MAAM;QACpBX,IAAI,CAACyc,UAAU,CAACE,QAAQ,GAAG3c,IAAI,CAACkd,UAAU,GAAG,CAAC,CAAC,GAAGld,IAAI,CAAC2c,QAAQ;MACjE,CAAC,CAAC,CAAC,CAAC;;MAEJ3c,IAAI,CAACW,EAAE,CAAC,eAAe,EAAE,MAAM;QAC7BX,IAAI,CAACqc,aAAa,CAACiD,KAAK,EAAE;MAC5B,CAAC,CAAC,CAAC,CAAC;;MAEJ,MAAM4P,WAAW,GAAGlvB,IAAI,CAACugB,MAAM;MAC/BvgB,IAAI,CAAC2sB,IAAI,CAAC,SAAS,EAAE,QAAQ,EAAE9T,GAAG,IAAI;QACpC,IAAIA,GAAG,IAAIA,GAAG,CAACsW,aAAa,IAAInvB,IAAI,CAACqc,aAAa,EAAE;QACpD,OAAO6S,WAAW,CAACpb,IAAI,CAAC9T,IAAI,CAAC;MAC/B,CAAC,CAAC;MACFgZ,QAAQ,CAAChZ,IAAI,CAACqc,aAAa,EAAE,MAAM,EAAE,MAAMrc,IAAI,CAACugB,MAAM,EAAE,CAAC,CAAC,CAAC;;MAE3DvgB,IAAI,CAAC2sB,IAAI,CAAC,QAAQ,EAAE,OAAO,EAAE,MAAM;QACjC,IAAI,CAAC3sB,IAAI,CAACid,MAAM,EAAE;QAClBjd,IAAI,CAACyc,UAAU,CAAC6C,KAAK,CAAC;UACpB8P,aAAa,EAAE;QACjB,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,SAASC,cAAc,GAAI;IACzB,IAAIrvB,IAAI,GAAG,IAAI;IACfA,IAAI,CAACW,EAAE,CAAC,YAAY,EAAE,MAAM;MAC1B,IAAI2uB,UAAU,GAAGpgB,QAAQ,CAACC,aAAa,CAAC,MAAM,CAAC;MAC/C,IAAIoN,OAAO,GAAGvc,IAAI,CAACqc,aAAa;MAChCiT,UAAU,CAACpf,KAAK,CAACqf,OAAO,GAAG,0FAA0F;MACrHvvB,IAAI,CAACmR,OAAO,CAACgC,WAAW,CAACmc,UAAU,CAAC;MACpC,IAAIE,eAAe,GAAG,CAAC,eAAe,EAAE,UAAU,EAAE,YAAY,EAAE,YAAY,EAAE,eAAe,CAAC;MAEhG,KAAK,MAAMC,UAAU,IAAID,eAAe,EAAE;QACxC;QACAF,UAAU,CAACpf,KAAK,CAACuf,UAAU,CAAC,GAAGlT,OAAO,CAACrM,KAAK,CAACuf,UAAU,CAAC;MAC1D;MACA;AACL;AACA;AACA;;MAGK,IAAIC,MAAM,GAAG,MAAM;QACjBJ,UAAU,CAAC7U,WAAW,GAAG8B,OAAO,CAAClY,KAAK;QACtCkY,OAAO,CAACrM,KAAK,CAACuP,KAAK,GAAG6P,UAAU,CAACK,WAAW,GAAG,IAAI;MACrD,CAAC;MAEDD,MAAM,EAAE;MACR1vB,IAAI,CAACW,EAAE,CAAC,6BAA6B,EAAE+uB,MAAM,CAAC;MAC9C1W,QAAQ,CAACuD,OAAO,EAAE,OAAO,EAAEmT,MAAM,CAAC;MAClC1W,QAAQ,CAACuD,OAAO,EAAE,OAAO,EAAEmT,MAAM,CAAC;MAClC1W,QAAQ,CAACuD,OAAO,EAAE,MAAM,EAAEmT,MAAM,CAAC;MACjC1W,QAAQ,CAACuD,OAAO,EAAE,QAAQ,EAAEmT,MAAM,CAAC;IACrC,CAAC,CAAC;EACJ;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,SAASE,mBAAmB,GAAI;IAC9B,IAAI5vB,IAAI,GAAG,IAAI;IACf,IAAI6vB,oBAAoB,GAAG7vB,IAAI,CAACyjB,eAAe;IAC/C,IAAI,CAACkJ,IAAI,CAAC,SAAS,EAAE,iBAAiB,EAAE9T,GAAG,IAAI;MAC7C,IAAI7Y,IAAI,CAACie,WAAW,CAAC/c,MAAM,EAAE;QAC3B,OAAO2uB,oBAAoB,CAAC/b,IAAI,CAAC9T,IAAI,EAAE6Y,GAAG,CAAC;MAC7C;MAEA,OAAO,KAAK;IACd,CAAC,CAAC;EACJ;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,SAASiX,eAAe,GAAI;IAC1B,IAAI,CAACnD,IAAI,CAAC,SAAS,EAAE,eAAe,EAAE,MAAM,CAAC,CAAC,CAAC;IAC/C,IAAI,CAACA,IAAI,CAAC,SAAS,EAAE,WAAW,EAAE,MAAM,CAAC,CAAC,CAAC;EAC7C;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,SAASoD,gBAAgB,GAAI;IAC3B,IAAI/vB,IAAI,GAAG,IAAI;IACf,IAAIgwB,YAAY,GAAGhwB,IAAI,CAACogB,SAAS;IACjCpgB,IAAI,CAAC2sB,IAAI,CAAC,SAAS,EAAE,WAAW,EAAE9T,GAAG,IAAI;MACvC,IAAI7F,KAAK,EAAEwH,MAAM,EAAEhY,OAAO,EAAEiZ,QAAQ;MAEpC,IAAI,CAACzb,IAAI,CAACid,MAAM,IAAI,EAAEpE,GAAG,CAACiK,OAAO,KAAK3O,QAAQ,IAAI0E,GAAG,CAACiK,OAAO,KAAKzO,SAAS,CAAC,EAAE;QAC5E,OAAO2b,YAAY,CAAClc,IAAI,CAAC9T,IAAI,EAAE6Y,GAAG,CAAC;MACrC;MAEA7Y,IAAI,CAAC2d,WAAW,GAAG,IAAI;MACvBlC,QAAQ,GAAGzK,WAAW,CAAChR,IAAI,CAACge,YAAY,EAAE,cAAc,CAAC;MACzDhL,KAAK,GAAGtB,SAAS,CAAC1R,IAAI,CAACge,YAAY,EAAE,mBAAmB,CAAC;MAEzD,IAAI,CAACvC,QAAQ,EAAE;QACb;MACF;MAEA,IAAI5C,GAAG,CAACiK,OAAO,KAAK3O,QAAQ,EAAE;QAC5BsH,QAAQ,GAAGA,QAAQ,CAACwU,eAAe;MACrC,CAAC,MAAM;QACLxU,QAAQ,GAAGA,QAAQ,CAACyU,WAAW;MACjC;MAEA,IAAI,CAACzU,QAAQ,EAAE;QACb;MACF;MAEAjZ,OAAO,GAAGiZ,QAAQ,CAAC7H,gBAAgB,CAAC,mBAAmB,CAAC;MACxD4G,MAAM,GAAGhY,OAAO,CAAC8B,IAAI,CAACoF,GAAG,CAAClH,OAAO,CAACtB,MAAM,GAAG,CAAC,EAAE8R,KAAK,CAAC,CAAC;MAErD,IAAIwH,MAAM,EAAE;QACVxa,IAAI,CAACojB,eAAe,CAAC5I,MAAM,CAAC;MAC9B;IACF,CAAC,CAAC;EACJ;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,SAAS2V,aAAa,CAAEjS,WAAW,EAAE;IACnC,MAAM1b,OAAO,GAAGyD,MAAM,CAACkI,MAAM,CAAC;MAC5BiR,KAAK,EAAE,SAAS;MAChBwO,KAAK,EAAE,QAAQ;MACf/a,SAAS,EAAE,QAAQ;MACnBgH,MAAM,EAAE;IACV,CAAC,EAAEqE,WAAW,CAAC,CAAC,CAAC;;IAEjB,IAAIle,IAAI,GAAG,IAAI,CAAC,CAAC;;IAEjB,IAAI,CAACwC,OAAO,CAACqX,MAAM,EAAE;MACnB;IACF;IAEA,IAAI6M,IAAI,GAAG,sCAAsC,GAAGlkB,OAAO,CAACqQ,SAAS,GAAG,yBAAyB,GAAGgF,WAAW,CAACrV,OAAO,CAACorB,KAAK,CAAC,GAAG,IAAI,GAAGprB,OAAO,CAAC4c,KAAK,GAAG,MAAM;IAC9Jpf,IAAI,CAAC2sB,IAAI,CAAC,OAAO,EAAE,gBAAgB,EAAE,MAAM;MACzC,IAAIyD,gBAAgB,GAAGpwB,IAAI,CAAC6B,QAAQ,CAAC6V,MAAM,CAAClJ,IAAI;MAEhDxO,IAAI,CAAC6B,QAAQ,CAAC6V,MAAM,CAAClJ,IAAI,GAAG,CAACvB,IAAI,EAAE8U,MAAM,KAAK;QAC5C,IAAIvT,IAAI,GAAGK,MAAM,CAACuhB,gBAAgB,CAACtc,IAAI,CAAC9T,IAAI,EAAEiN,IAAI,EAAE8U,MAAM,CAAC,CAAC;QAC5D,IAAIsO,YAAY,GAAGxhB,MAAM,CAAC6X,IAAI,CAAC;QAC/BlY,IAAI,CAAC2E,WAAW,CAACkd,YAAY,CAAC;QAC9BrX,QAAQ,CAACqX,YAAY,EAAE,WAAW,EAAExX,GAAG,IAAI;UACzCD,cAAc,CAACC,GAAG,EAAE,IAAI,CAAC;QAC3B,CAAC,CAAC;QACFG,QAAQ,CAACqX,YAAY,EAAE,OAAO,EAAExX,GAAG,IAAI;UACrC;UACAD,cAAc,CAACC,GAAG,EAAE,IAAI,CAAC;UACzB,IAAI7Y,IAAI,CAACsd,QAAQ,EAAE;UACnB,IAAI,CAACtd,IAAI,CAACmsB,YAAY,CAAC,CAAC3d,IAAI,CAAC,EAAEqK,GAAG,CAAC,EAAE;UACrC7Y,IAAI,CAAC+pB,UAAU,CAACvb,IAAI,CAAC;UACrBxO,IAAI,CAAC0jB,cAAc,CAAC,KAAK,CAAC;UAC1B1jB,IAAI,CAAC6gB,UAAU,EAAE;QACnB,CAAC,CAAC;QACF,OAAOrS,IAAI;MACb,CAAC;IACH,CAAC,CAAC;EACJ;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,SAAS8hB,oBAAoB,CAAEpS,WAAW,EAAE;IAC1C,MAAMle,IAAI,GAAG,IAAI;IACjB,MAAMwC,OAAO,GAAGyD,MAAM,CAACkI,MAAM,CAAC;MAC5BoiB,IAAI,EAAE/V,MAAM,IAAI;QACd,OAAOA,MAAM,CAACxa,IAAI,CAAC6B,QAAQ,CAACwU,UAAU,CAAC;MACzC;IACF,CAAC,EAAE6H,WAAW,CAAC;IACfle,IAAI,CAACW,EAAE,CAAC,aAAa,EAAE,UAAU0D,KAAK,EAAE;MACtC,IAAI,CAACrE,IAAI,CAACud,SAAS,EAAE;QACnB;MACF;MAEA,IAAIvd,IAAI,CAACqc,aAAa,CAAChY,KAAK,CAAC+J,IAAI,EAAE,KAAK,EAAE,EAAE;QAC1C,IAAIoM,MAAM,GAAGxa,IAAI,CAACwC,OAAO,CAAC6B,KAAK,CAAC;QAEhC,IAAImW,MAAM,EAAE;UACVxa,IAAI,CAACskB,eAAe,CAAC9hB,OAAO,CAAC+tB,IAAI,CAACzc,IAAI,CAAC9T,IAAI,EAAEwa,MAAM,CAAC,CAAC;QACvD;MACF;IACF,CAAC,CAAC;EACJ;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,SAASgW,cAAc,GAAI;IACzB,MAAMxwB,IAAI,GAAG,IAAI;IACjB,MAAMywB,YAAY,GAAGzwB,IAAI,CAACmkB,OAAO;IACjC,MAAMuM,sBAAsB,GAAG1wB,IAAI,CAACqkB,iBAAiB;IACrD,MAAMsM,iBAAiB,GAAG3wB,IAAI,CAACokB,YAAY;IAC3C,IAAIwM,UAAU,GAAG,CAAC,CAAC;IACnB,IAAIpU,gBAAgB;IACpB,IAAIqU,YAAY,GAAG,KAAK;IACxB,IAAIC,aAAa;IACjB,IAAIC,cAAc,GAAG,EAAE;IAEvB,IAAI,CAAC/wB,IAAI,CAAC6B,QAAQ,CAACmvB,cAAc,EAAE;MACjC;MACAhxB,IAAI,CAAC6B,QAAQ,CAACmvB,cAAc,GAAG,MAAM;QACnC,MAAMC,cAAc,GAAGzU,gBAAgB,CAACkJ,YAAY,IAAIlJ,gBAAgB,CAAC0U,YAAY,GAAG1U,gBAAgB,CAACmJ,SAAS,CAAC;QAEnH,IAAIsL,cAAc,GAAG,GAAG,EAAE;UACxB,OAAO,IAAI;QACb;QAEA,IAAIjxB,IAAI,CAACge,YAAY,EAAE;UACrB,IAAI4K,UAAU,GAAG5oB,IAAI,CAAC4oB,UAAU,EAAE;UAClC,IAAI5V,KAAK,GAAG3Q,KAAK,CAACqC,IAAI,CAACkkB,UAAU,CAAC,CAACvnB,OAAO,CAACrB,IAAI,CAACge,YAAY,CAAC;UAE7D,IAAIhL,KAAK,IAAI4V,UAAU,CAAC1nB,MAAM,GAAG,CAAC,EAAE;YAClC,OAAO,IAAI;UACb;QACF;QAEA,OAAO,KAAK;MACd,CAAC;IACH;IAEA,IAAI,CAAClB,IAAI,CAAC6B,QAAQ,CAACsvB,QAAQ,EAAE;MAC3B,MAAM,oDAAoD;IAC5D,CAAC,CAAC;IACF;;IAGAnxB,IAAI,CAAC6B,QAAQ,CAAC6U,SAAS,GAAG,CAAC;MACzBlK,KAAK,EAAE;IACT,CAAC,EAAE;MACDA,KAAK,EAAE;IACT,CAAC,CAAC,CAAC,CAAC;;IAEJ,MAAM4kB,WAAW,GAAGplB,KAAK,IAAI;MAC3B,IAAI,OAAOhM,IAAI,CAAC6B,QAAQ,CAAC2T,UAAU,KAAK,QAAQ,IAAIgH,gBAAgB,CAACb,QAAQ,CAACza,MAAM,IAAIlB,IAAI,CAAC6B,QAAQ,CAAC2T,UAAU,EAAE;QAChH,OAAO,KAAK;MACd;MAEA,IAAIxJ,KAAK,IAAI4kB,UAAU,IAAIA,UAAU,CAAC5kB,KAAK,CAAC,EAAE;QAC5C,OAAO,IAAI;MACb;MAEA,OAAO,KAAK;IACd,CAAC;IAED,MAAMke,WAAW,GAAG,CAAC1P,MAAM,EAAEnW,KAAK,KAAK;MACrC,IAAIrE,IAAI,CAAC6L,KAAK,CAACxK,OAAO,CAACgD,KAAK,CAAC,IAAI,CAAC,IAAI0sB,cAAc,CAAC1vB,OAAO,CAACgD,KAAK,CAAC,IAAI,CAAC,EAAE;QACxE,OAAO,IAAI;MACb;MAEA,OAAO,KAAK;IACd,CAAC,CAAC,CAAC;;IAGHrE,IAAI,CAACqxB,UAAU,GAAG,CAAChtB,KAAK,EAAEitB,QAAQ,KAAK;MACrCV,UAAU,CAACvsB,KAAK,CAAC,GAAGitB,QAAQ;IAC9B,CAAC,CAAC,CAAC;;IAGHtxB,IAAI,CAACuxB,MAAM,GAAGvlB,KAAK,IAAI;MACrB,IAAIA,KAAK,IAAI4kB,UAAU,EAAE;QACvB,MAAMU,QAAQ,GAAGV,UAAU,CAAC5kB,KAAK,CAAC;QAClC4kB,UAAU,CAAC5kB,KAAK,CAAC,GAAG,KAAK;QACzB,OAAOslB,QAAQ;MACjB,CAAC,CAAC;MACF;;MAGAV,UAAU,GAAG,CAAC,CAAC;MACf,OAAO5wB,IAAI,CAAC6B,QAAQ,CAACsvB,QAAQ,CAACrd,IAAI,CAAC9T,IAAI,EAAEgM,KAAK,CAAC;IACjD,CAAC,CAAC,CAAC;IACH;;IAGAhM,IAAI,CAAC2sB,IAAI,CAAC,SAAS,EAAE,mBAAmB,EAAE,MAAM;MAC9C,IAAIkE,YAAY,EAAE;QAChB;MACF;MAEA,OAAOH,sBAAsB,CAAC5c,IAAI,CAAC9T,IAAI,CAAC;IAC1C,CAAC,CAAC,CAAC,CAAC;;IAEJA,IAAI,CAAC2sB,IAAI,CAAC,SAAS,EAAE,SAAS,EAAE3gB,KAAK,IAAI;MACvC;MACA,IAAI,EAAEA,KAAK,IAAI4kB,UAAU,CAAC,EAAE;QAC1B,OAAOH,YAAY,CAAC3c,IAAI,CAAC9T,IAAI,EAAEgM,KAAK,CAAC;MACvC;MAEA,OAAOolB,WAAW,CAACplB,KAAK,CAAC;IAC3B,CAAC,CAAC,CAAC,CAAC;;IAEJhM,IAAI,CAAC2sB,IAAI,CAAC,SAAS,EAAE,cAAc,EAAE,CAACnqB,OAAO,EAAEuS,SAAS,KAAK;MAC3D,IAAI,CAAC8b,YAAY,EAAE;QACjB7wB,IAAI,CAACgqB,YAAY,CAACE,WAAW,CAAC;MAChC,CAAC,MAAM,IAAI4G,aAAa,EAAE;QACxB,MAAMU,YAAY,GAAGhvB,OAAO,CAAC,CAAC,CAAC;QAE/B,IAAIgvB,YAAY,KAAKrwB,SAAS,EAAE;UAC9B2vB,aAAa,CAAC/V,OAAO,CAAC1W,KAAK,GAAGmtB,YAAY,CAACxxB,IAAI,CAAC6B,QAAQ,CAACuU,UAAU,CAAC;QACtE;MACF;MAEAua,iBAAiB,CAAC7c,IAAI,CAAC9T,IAAI,EAAEwC,OAAO,EAAEuS,SAAS,CAAC;MAChD8b,YAAY,GAAG,KAAK;IACtB,CAAC,CAAC,CAAC,CAAC;IACJ;IACA;;IAEA7wB,IAAI,CAAC2sB,IAAI,CAAC,OAAO,EAAE,gBAAgB,EAAE,MAAM;MACzC,MAAM3gB,KAAK,GAAGhM,IAAI,CAAC8d,SAAS;MAC5B,IAAItD,MAAM;MAEV,IAAI4W,WAAW,CAACplB,KAAK,CAAC,EAAE;QACtBwO,MAAM,GAAGxa,IAAI,CAAC0X,MAAM,CAAC,cAAc,EAAE;UACnC1L,KAAK,EAAEA;QACT,CAAC,CAAC;QAEF,IAAIwO,MAAM,EAAE;UACVA,MAAM,CAACrI,YAAY,CAAC,iBAAiB,EAAE,EAAE,CAAC,CAAC,CAAC;;UAE5C2e,aAAa,GAAGtW,MAAM;QACxB;MACF,CAAC,MAAM,IAAIxO,KAAK,IAAI4kB,UAAU,IAAI,CAACpU,gBAAgB,CAACjN,aAAa,CAAC,aAAa,CAAC,EAAE;QAChFiL,MAAM,GAAGxa,IAAI,CAAC0X,MAAM,CAAC,iBAAiB,EAAE;UACtC1L,KAAK,EAAEA;QACT,CAAC,CAAC;MACJ;MAEA,IAAIwO,MAAM,EAAE;QACVrK,UAAU,CAACqK,MAAM,EAAExa,IAAI,CAAC6B,QAAQ,CAACsV,WAAW,CAAC;QAC7CqF,gBAAgB,CAAC3C,MAAM,CAACW,MAAM,CAAC;MACjC;IACF,CAAC,CAAC,CAAC,CAAC;;IAEJxa,IAAI,CAACW,EAAE,CAAC,YAAY,EAAE,MAAM;MAC1BowB,cAAc,GAAG9qB,MAAM,CAACC,IAAI,CAAClG,IAAI,CAACwC,OAAO,CAAC;MAC1Cga,gBAAgB,GAAGxc,IAAI,CAACwc,gBAAgB,CAAC,CAAC;;MAE1Cxc,IAAI,CAAC6B,QAAQ,CAAC6V,MAAM,GAAGzR,MAAM,CAACkI,MAAM,CAAC,CAAC,CAAC,EAAE;QACvC0iB,YAAY,EAAE,MAAM;UAClB,OAAQ,mEAAkE;QAC5E,CAAC;QACDY,eAAe,EAAE,MAAM;UACrB,OAAQ,oDAAmD;QAC7D;MACF,CAAC,EAAEzxB,IAAI,CAAC6B,QAAQ,CAAC6V,MAAM,CAAC,CAAC,CAAC;;MAE1B8E,gBAAgB,CAACvD,gBAAgB,CAAC,QAAQ,EAAE,MAAM;QAChD,IAAI,CAACjZ,IAAI,CAAC6B,QAAQ,CAACmvB,cAAc,CAACld,IAAI,CAAC9T,IAAI,CAAC,EAAE;UAC5C;QACF,CAAC,CAAC;;QAGF,IAAI,CAACoxB,WAAW,CAACpxB,IAAI,CAAC8d,SAAS,CAAC,EAAE;UAChC;QACF,CAAC,CAAC;;QAGF,IAAI+S,YAAY,EAAE;QAClBA,YAAY,GAAG,IAAI;QACnB7wB,IAAI,CAAC4f,IAAI,CAAC9L,IAAI,CAAC9T,IAAI,EAAEA,IAAI,CAAC8d,SAAS,CAAC;MACtC,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;EAEA7d,SAAS,CAACJ,MAAM,CAAC,iBAAiB,EAAEotB,eAAe,CAAC;EACpDhtB,SAAS,CAACJ,MAAM,CAAC,kBAAkB,EAAEqtB,gBAAgB,CAAC;EACtDjtB,SAAS,CAACJ,MAAM,CAAC,cAAc,EAAE8tB,YAAY,CAAC;EAC9C1tB,SAAS,CAACJ,MAAM,CAAC,WAAW,EAAEiuB,SAAS,CAAC;EACxC7tB,SAAS,CAACJ,MAAM,CAAC,iBAAiB,EAAE4uB,eAAe,CAAC;EACpDxuB,SAAS,CAACJ,MAAM,CAAC,gBAAgB,EAAEkvB,cAAc,CAAC;EAClD9uB,SAAS,CAACJ,MAAM,CAAC,gBAAgB,EAAEmvB,cAAc,CAAC;EAClD/uB,SAAS,CAACJ,MAAM,CAAC,gBAAgB,EAAEwvB,cAAc,CAAC;EAClDpvB,SAAS,CAACJ,MAAM,CAAC,qBAAqB,EAAE+vB,mBAAmB,CAAC;EAC5D3vB,SAAS,CAACJ,MAAM,CAAC,iBAAiB,EAAEiwB,eAAe,CAAC;EACpD7vB,SAAS,CAACJ,MAAM,CAAC,kBAAkB,EAAEkwB,gBAAgB,CAAC;EACtD9vB,SAAS,CAACJ,MAAM,CAAC,eAAe,EAAEswB,aAAa,CAAC;EAChDlwB,SAAS,CAACJ,MAAM,CAAC,sBAAsB,EAAEywB,oBAAoB,CAAC;EAC9DrwB,SAAS,CAACJ,MAAM,CAAC,gBAAgB,EAAE2wB,cAAc,CAAC;EAElD,OAAOvwB,SAAS;AAEjB,CAAC,CAAE;AACH,IAAIyxB,SAAS,GAAC,UAASjhB,EAAE,EAAC0a,IAAI,EAAC;EAAC,OAAO,IAAIlrB,SAAS,CAACwQ,EAAE,EAAC0a,IAAI,CAAC;AAAC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}